{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/gallery/panghu.jpg","path":"gallery/panghu.jpg","modified":0,"renderable":0},{"_id":"source/gallery/毛利小五郎.jpg","path":"gallery/毛利小五郎.jpg","modified":0,"renderable":0},{"_id":"themes/keep/source/js/back2top.js","path":"js/back2top.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/code-copy.js","path":"js/code-copy.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/dark-light-toggle.js","path":"js/dark-light-toggle.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/header-shrink.js","path":"js/header-shrink.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/lazyload.js","path":"js/lazyload.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/left-side-toggle.js","path":"js/left-side-toggle.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/keep/source/images/avatar.svg","path":"images/avatar.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/bg.svg","path":"images/bg.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/loading.svg","path":"images/loading.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/panghu256.ico","path":"images/panghu256.ico","modified":0,"renderable":1},{"_id":"themes/keep/source/images/upyun.png","path":"images/upyun.png","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.eot","path":"webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.svg","path":"webfonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff","path":"webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.ttf","path":"webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff2","path":"webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.eot","path":"webfonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.svg","path":"webfonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.ttf","path":"webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff","path":"webfonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff2","path":"webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.eot","path":"webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.svg","path":"webfonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.ttf","path":"webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff","path":"webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff2","path":"webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/keep/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/js/libs/anime.min.js","path":"js/libs/anime.min.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/libs/pjax.min.js","path":"js/libs/pjax.min.js","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/animated.styl","path":"css/common/animated.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/basic.styl","path":"css/common/basic.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/markdown.styl","path":"css/common/markdown.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/keep-theme.styl","path":"css/common/keep-theme.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/variables.styl","path":"css/common/variables.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/article-content.styl","path":"css/layout/article-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/archive-content.styl","path":"css/layout/archive-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/category-content.styl","path":"css/layout/category-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/category-list.styl","path":"css/layout/category-list.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/home-content.styl","path":"css/layout/home-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/page.styl","path":"css/layout/page.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/tag-content.styl","path":"css/layout/tag-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/code-theme.styl","path":"css/common/codeblock/code-theme.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/copy-code.styl","path":"css/common/codeblock/copy-code.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/highlight.styl","path":"css/common/codeblock/highlight.styl","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"88ae60106c7be658d08bade17e3084c24b347a77","modified":1648809225000},{"_id":"source/_data/links.yml","hash":"118165b3ce84d0e2eecf2d0a50487e8b51cf9b27","modified":1648833755000},{"_id":"source/_posts/2021-03-07-干了这碗牛肉面.md","hash":"e70882873cf170a7f2b74a39d03bd2398ec86fbf","modified":1647855756000},{"_id":"source/_posts/2021-03-14-【口琴】《单簧管波尔卡》.md","hash":"6efbe1e818bb74e8931e2d9548e33e66afbbb064","modified":1647854447000},{"_id":"source/_posts/2021-03-05-尝试写点东西.md","hash":"c6d68ac85d18325c4f82b63e463ebf47b656d7df","modified":1647854071000},{"_id":"source/_posts/2021-03-14-Python装饰器.md","hash":"48aaa5a81216f4162097083e22cf0e775aa1bedc","modified":1647855930000},{"_id":"source/_posts/2021-03-14-催更.md","hash":"a164f0faac55de7d2a7bbc35eaf7cde05f3982d4","modified":1647854537000},{"_id":"source/_posts/2021-03-20-记这两周折腾博客的经历.md","hash":"614c142784ba53107e045de49673418ca52f7eec","modified":1647855670000},{"_id":"source/_posts/2021-04-01-懒.md","hash":"0be202b76ba02d68a05ee640e811b3149ce67aa9","modified":1647855531000},{"_id":"source/_posts/2021-03-15-【曲子】八方旅人.md","hash":"29a11f334c12ad4508c399695df0e1a318467bca","modified":1647853655000},{"_id":"source/_posts/2021-04-02-Python图片处理模块Pillow.md","hash":"bb3338e11237826d5533b61b38f804ec37b33ffb","modified":1648222239000},{"_id":"source/_posts/2021-04-26-最近想听的歌.md","hash":"919005e2b6032fef769ecd0254e59705a7a68ae8","modified":1647854217000},{"_id":"source/_posts/2021-04-11-拓扑排序.md","hash":"e6df4dbf8db0a77e55c6e42eea848e410147a16a","modified":1648836519000},{"_id":"source/_posts/2021-05-08-C++学习笔记.md","hash":"429f97ed384b7cf77b2883597c0a78494c5f703d","modified":1647855263000},{"_id":"source/_posts/2021-05-08-python学习笔记.md","hash":"ca9979300e7e13b62a09359ff74538472e0418f8","modified":1647855930000},{"_id":"source/_posts/2021-05-30-python天气查询邮件提醒.md","hash":"3cc8377943ea5e88aa6a5a2cddfe0b52ecc169b4","modified":1647854388000},{"_id":"source/_posts/2021-12-18-一个新的笔记软件——TiddlyWiki.md","hash":"fb5aa49640fe36c842bef21eff3263365fdbbf1a","modified":1647855875000},{"_id":"source/about/index.md","hash":"7637efdcc19f6e127d1dc4b03913441a8c9c665b","modified":1648835895000},{"_id":"source/_posts/2022-01-10-2021总结.md","hash":"4aa38917cd71a7913e6c0d72ca8bedb0c8a66782","modified":1648834035000},{"_id":"source/_posts/随笔.md","hash":"d13fb0c5f58d938043eb3de3a70d183569cae91a","modified":1661421836290},{"_id":"source/_posts/没有什么值得我放其其他所有事情来达到所谓的“竭尽全力”.md","hash":"ba568d9b2f9fbbe27a94f76879c3019ab0523298","modified":1661416928411},{"_id":"source/gallery/index.md","hash":"fe42bd05ed7c2ad376cad90a75375c7306d613ad","modified":1647837059000},{"_id":"source/categories/index.md","hash":"0ae5a83f4d9f8e55c9b8f1f84138b83ea90815fa","modified":1647851112000},{"_id":"source/links/index.md","hash":"6ffcf1530ad7042c87ec28cf8c251662c6d3dd03","modified":1648831794000},{"_id":"source/friends/index.md","hash":"99d1278aba0e4e53c40caa49e0b9ae5d868d3ecd","modified":1647851622000},{"_id":"source/changelog/index.md","hash":"6dcdefd67ba1c7cb754b28fa278cf42de4d0909a","modified":1648832989000},{"_id":"source/tags/index.md","hash":"4767c7493033a7d163a4e9a71395c985779c5c05","modified":1647853676000},{"_id":"source/photos/index.md","hash":"cf6e6ac7638d9a0bda90f0fec908d4bf3b4e451e","modified":1648221756000},{"_id":"source/gallery/panghu.jpg","hash":"45afb109c48372d70cd7e275ce11ccd8ac616f52","modified":1634008342000},{"_id":"source/gallery/毛利小五郎.jpg","hash":"501aed95032b75b786e28e51674c323edda6e7ab","modified":1634008345000},{"_id":"themes/keep/.editorconfig","hash":"a1c91f0a086bf92fddb02ccf23578ec2b51c099c","modified":1648829241000},{"_id":"themes/keep/.npmignore","hash":"79596a6faba67852ff4d0426602141426f48639f","modified":1648829241000},{"_id":"themes/keep/.gitignore","hash":"b49daa26b8121cc0c7074d61b377c8e7e0880d03","modified":1648829241000},{"_id":"themes/keep/README_zh-TW.md","hash":"106577079fbd01a52ddb7d65fe25bf4c7f9942cd","modified":1648829241000},{"_id":"themes/keep/README_zh-CN.md","hash":"77e024325df8ab87114408cc31c8624edb0f5022","modified":1648829241000},{"_id":"themes/keep/LICENSE","hash":"31a3d460bb3c7d98845187c716a30db81c44b615","modified":1648829241000},{"_id":"themes/keep/README.md","hash":"d98baf3223795c0c2faea57c471fc2af9336cef1","modified":1648829241000},{"_id":"themes/keep/languages/zh-TW.yml","hash":"c6be2adec90f8c5d0a93a9f8d7bfb5fac0af4786","modified":1648829241000},{"_id":"themes/keep/_config.yml","hash":"5002f4903be61f5811fecc10a7e1617fd2d2403a","modified":1648833455000},{"_id":"themes/keep/package.json","hash":"cc05ba956ac3c672e111fed4d7d2e284d0fb9eeb","modified":1648829242000},{"_id":"themes/keep/.github/FUNDING.yml","hash":"5fae5cd239ca99c452110a009613055ec77f3902","modified":1648829241000},{"_id":"themes/keep/layout/archive-content.ejs","hash":"cfa8f29b8863534f407136ea3deb18a4b2ff722c","modified":1648829242000},{"_id":"themes/keep/layout/archive.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1648829242000},{"_id":"themes/keep/languages/zh-CN.yml","hash":"a4bc8e834989b17d77b70080a63a0d840847ba27","modified":1648829241000},{"_id":"themes/keep/layout/category-list.ejs","hash":"a9390b25238332417fd554d32563a4d9999db90f","modified":1648829242000},{"_id":"themes/keep/languages/en.yml","hash":"e4f42cfda0ed6ea1715d28fd4b1bba6f89b8cdb0","modified":1648829241000},{"_id":"themes/keep/layout/category.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1648829242000},{"_id":"themes/keep/layout/index.ejs","hash":"f5fee4e079a9c2c23059ebde4cd89ec723e310c6","modified":1648829242000},{"_id":"themes/keep/layout/category-content.ejs","hash":"aef0c90a395f909be7d2c358eb41d5558a10406f","modified":1648829242000},{"_id":"themes/keep/layout/article-content.ejs","hash":"1a5f94c8a27ef232ccf62e886a9dde56da3065bc","modified":1648829242000},{"_id":"themes/keep/layout/home-content.ejs","hash":"79e16c3baa6569afbc07ac6a5d2e3f37b273016a","modified":1648829242000},{"_id":"themes/keep/layout/layout.ejs","hash":"da9dbeba541ad19fed35c41fe187f4016e41f0db","modified":1648829242000},{"_id":"themes/keep/layout/tag-content.ejs","hash":"ce4c8192a4ccd6a626af412a7ba258d1edbc0b95","modified":1648829242000},{"_id":"themes/keep/scripts/use-source-data.js","hash":"21f6a49e47b7e4d792d67503079ea5b509f18311","modified":1648829242000},{"_id":"themes/keep/layout/tag.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1648829242000},{"_id":"themes/keep/layout/page.ejs","hash":"4bf34f19bcf18efb5f6e76fcbe7cd36b25ceee6a","modified":1648829242000},{"_id":"themes/keep/layout/_partial/article-copyright-info.ejs","hash":"77e13720374efb902ee3d4d04d13b62de033a3ae","modified":1648829241000},{"_id":"themes/keep/layout/_partial/article-meta-info.ejs","hash":"647736023e7611917d893c33937d7260d3d5b38b","modified":1648829241000},{"_id":"themes/keep/layout/tags.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1648829242000},{"_id":"themes/keep/layout/_partial/archive-list.ejs","hash":"7c33e49286d54824cd8f3483e30de5579951edc6","modified":1648829241000},{"_id":"themes/keep/layout/_partial/footer.ejs","hash":"9933e83e6e1022f4c27722f94a8b1540414b2570","modified":1648829241000},{"_id":"themes/keep/layout/_partial/friends-link.ejs","hash":"fe35aa6dabeb31bc677270062eed569f37472c2c","modified":1648829241000},{"_id":"themes/keep/layout/_partial/head.ejs","hash":"4c68f6750fc179368ca5556d80fb1781ba984ff8","modified":1648829241000},{"_id":"themes/keep/layout/_partial/first-screen.ejs","hash":"106683de71f01b368c6f0c5417952b54fcdc9611","modified":1648829241000},{"_id":"themes/keep/layout/_partial/header.ejs","hash":"627dfa9519ff614d6a79dac942a7b61fa5bfac8c","modified":1648829241000},{"_id":"themes/keep/layout/_partial/image-viewer.ejs","hash":"beb3dec5e08856a29d585fe0eb94a8a6ddade4dd","modified":1648829241000},{"_id":"themes/keep/layout/_partial/home-article-meta-info.ejs","hash":"0aceb1c7c29b65bd5fc2d79a285a564da8c09b63","modified":1648829241000},{"_id":"themes/keep/layout/_partial/progress-bar.ejs","hash":"44af04816b86546e0260e73c2df61353e7404208","modified":1648829242000},{"_id":"themes/keep/layout/_partial/paginator.ejs","hash":"cfd4d9a30bd20ee0750b79226cb94562439013bf","modified":1648829242000},{"_id":"themes/keep/layout/_partial/page-template.ejs","hash":"8fd596f871326b03e707d7defcc96f639cdd628e","modified":1648829241000},{"_id":"themes/keep/layout/_partial/scripts.ejs","hash":"ad75de7966c4d9d923c9ac8cfbfe26b38fbe7aed","modified":1648829242000},{"_id":"themes/keep/layout/_partial/post-tools.ejs","hash":"e8a303fa393a1716c5ff1f731923781eb12322ab","modified":1648829242000},{"_id":"themes/keep/layout/_partial/tagcloud.ejs","hash":"5968618b53a029922f2255b0c76bf8a9f11712ff","modified":1648829242000},{"_id":"themes/keep/layout/_partial/side-tools.ejs","hash":"e55d2034d7e2b8b0c1bd5ac7fdc56ffb8bbd4e60","modified":1648829242000},{"_id":"themes/keep/layout/_partial/local-search.ejs","hash":"6fbcc0a14467da8362a2eaa490d84acb1336d21b","modified":1648829241000},{"_id":"themes/keep/scripts/filters/link-handle.js","hash":"b39cfa42d156b7ad4d4e8246b6f934cd51d8db55","modified":1648829242000},{"_id":"themes/keep/scripts/helpers/helper.js","hash":"41517e3f4c1cd567e2ae14acb344818a9552fac4","modified":1648829242000},{"_id":"themes/keep/layout/_partial/toc.ejs","hash":"aefc9db612c0fceb4a02fdbed9fa47a6c4e144b5","modified":1648829242000},{"_id":"themes/keep/scripts/filters/lazyload-handle.js","hash":"7a8fd4996b9720c8d4cdb3042bfe5a1008f7c5fd","modified":1648829242000},{"_id":"themes/keep/source/js/back2top.js","hash":"fc8e85f6704e39ae3a613bbec5dd51d449be8010","modified":1648829242000},{"_id":"themes/keep/source/js/lazyload.js","hash":"95aad532f17d7a8119979fc61ade9e626308a2af","modified":1648829242000},{"_id":"themes/keep/scripts/helpers/export-config.js","hash":"e7c5417a1cd61f0b7c3f97030d4a77419c41b8a5","modified":1648829242000},{"_id":"themes/keep/source/js/header-shrink.js","hash":"167b9b6a9ed63c6cf4081cb3c201dd16bbbfb9ad","modified":1648829242000},{"_id":"themes/keep/source/js/code-copy.js","hash":"3fdabac26f6406a4592336f1f444ec966201b5d9","modified":1648829242000},{"_id":"themes/keep/source/js/dark-light-toggle.js","hash":"223e6f1d4e6e70956e4661b58c430e1c68def125","modified":1648829242000},{"_id":"themes/keep/source/js/left-side-toggle.js","hash":"618f7cfc45db4d82b2f1d00d8e9ee936bcf9043b","modified":1648829242000},{"_id":"themes/keep/source/js/main.js","hash":"ca8ed228cc0bc234be74428d029cfd047eec0ed6","modified":1648829242000},{"_id":"themes/keep/source/js/local-search.js","hash":"9509ec6d2d7d4466fe37ad624cf606f6639fb3fe","modified":1648829242000},{"_id":"themes/keep/source/js/toc.js","hash":"ae69bf65d2b30d299b6ca9e2361d3b6e0db3a077","modified":1648829242000},{"_id":"themes/keep/source/images/avatar.svg","hash":"aba8367cd7550e75279f707671d7146813c2a776","modified":1648829242000},{"_id":"themes/keep/source/images/loading.svg","hash":"eedfa204e08a60ca5c80c620cfe9a3eaa6201585","modified":1648829242000},{"_id":"themes/keep/source/images/panghu256.ico","hash":"616b7bc7020f7ad9e56cc7cad509298d1c4dcfac","modified":1641813671000},{"_id":"themes/keep/source/js/utils.js","hash":"a2413711ebf7ffc96eafec2ef45a5d243d3ccdb6","modified":1648829242000},{"_id":"themes/keep/source/images/bg.svg","hash":"f3106cd334dc2ceef885c19012bf59a48498af42","modified":1648829242000},{"_id":"themes/keep/source/images/logo.svg","hash":"b618728f9964a5698b1dc2548db35b3d06dd115f","modified":1648829242000},{"_id":"themes/keep/source/images/upyun.png","hash":"f014175dd78c3ed5249e69c91603e20a3efcd330","modified":1648829242000},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff","hash":"26afc29d39ab9fac6d0b607be7e76db093ff7c3a","modified":1648829242000},{"_id":"themes/keep/source/webfonts/fa-regular-400.eot","hash":"2baa9a8aa68f1d2d4712b3c7205f9105aaf21879","modified":1648829242000},{"_id":"themes/keep/source/webfonts/fa-regular-400.ttf","hash":"d64e58981a419de52bac110c979887d34e366135","modified":1648829242000},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff2","hash":"fb9648469530a05fa9aac80e47d4d6960472a242","modified":1648829242000},{"_id":"themes/keep/layout/_partial/comment/comment.ejs","hash":"4a7294bbe9aa4be22878e8a638668ed7ade25e2c","modified":1648829241000},{"_id":"themes/keep/source/css/font-awesome.min.css","hash":"c508528feb9fd540454f838653cd4863b290df2e","modified":1648829242000},{"_id":"themes/keep/layout/_partial/comment/twikoo.ejs","hash":"92d858874543c4ba149acd04374d84e784ba0aaf","modified":1648829241000},{"_id":"themes/keep/source/css/style.styl","hash":"e0c2fd781ee3de12716d6a54dd0f9f5ffe443334","modified":1648829242000},{"_id":"themes/keep/layout/_partial/comment/valine.ejs","hash":"467cafd412837af791b4c353646cf44ac4458a3f","modified":1648829241000},{"_id":"themes/keep/layout/_partial/pjax/pjax.ejs","hash":"949d3fdd4bd215cd7d0c95152c4be630ce227e16","modified":1648829242000},{"_id":"themes/keep/layout/_partial/comment/gitalk.ejs","hash":"28a0c8b1da66a9b6863e5444aa0b50c8f6b862f0","modified":1648829241000},{"_id":"themes/keep/source/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1648829242000},{"_id":"themes/keep/source/css/common/basic.styl","hash":"6d6132527247635f7406d6917cfc8e1cb02d8573","modified":1648829242000},{"_id":"themes/keep/source/js/libs/pjax.min.js","hash":"57ec40cb4898d7ba74a03603d608af378e5431f8","modified":1648829242000},{"_id":"themes/keep/source/css/common/animated.styl","hash":"ceb35da27937a5824dea00c0a75de57e10e1dc90","modified":1648829242000},{"_id":"themes/keep/source/css/common/markdown.styl","hash":"55c6c0f77b608b8e1d9c52bb4fdcee881f55eff8","modified":1648829242000},{"_id":"themes/keep/source/css/common/variables.styl","hash":"8b66a8ae90dbb8ec2e412fcf57ff6c8cee18e949","modified":1648829242000},{"_id":"themes/keep/source/css/common/keep-theme.styl","hash":"9b6bf080299102571a6667ca99a62f53c9684246","modified":1648829242000},{"_id":"themes/keep/source/css/layout/article-content.styl","hash":"5cc7dbdc16afc638deabf8e8c0d8236f395d8305","modified":1648829242000},{"_id":"themes/keep/source/css/layout/archive-content.styl","hash":"515ebe2a251f3b53f0cf130cdc48b8bb1fb85952","modified":1648829242000},{"_id":"themes/keep/source/css/layout/category-content.styl","hash":"638c3b50d8203c76106f3010fbfeed9a29bfde5c","modified":1648829242000},{"_id":"themes/keep/source/css/layout/category-list.styl","hash":"bea0a03fe3de16ed08e7b3b541a46d2074561841","modified":1648829242000},{"_id":"themes/keep/source/css/layout/home-content.styl","hash":"2f2ee2f70020cf5e2ffb5612607bd58772e785a4","modified":1648829242000},{"_id":"themes/keep/source/css/layout/page.styl","hash":"ea83a6a5503b63d91d71221699776c4fe2c7a941","modified":1648829242000},{"_id":"themes/keep/source/css/layout/tag-content.styl","hash":"0d1cc0cc0d263f55b9c7245c1dc023abdcfcd69f","modified":1648829242000},{"_id":"themes/keep/source/css/common/codeblock/code-theme.styl","hash":"fd81f8a76ae4f55bf5da38116bbc4f0e973daad2","modified":1648829242000},{"_id":"themes/keep/source/css/common/codeblock/copy-code.styl","hash":"1edcb0ece1bf4b9838c1937e98eaa845de7f4b3b","modified":1648829242000},{"_id":"themes/keep/source/css/layout/_partial/article-copyright-info.styl","hash":"6eaa067231bd9e9faa5de2260b8974142faae510","modified":1648829242000},{"_id":"themes/keep/source/css/common/codeblock/highlight.styl","hash":"64ea39fa5503f6c5a21a9ed7c9d3d5103cccad5a","modified":1648829242000},{"_id":"themes/keep/source/css/layout/_partial/archive-list.styl","hash":"95c41684691a849d102c5a30efb365300d3d5c6d","modified":1648829242000},{"_id":"themes/keep/source/css/layout/_partial/footer.styl","hash":"19a8fc0a01bf1efed637e90530c412d57137dfc4","modified":1648829242000},{"_id":"themes/keep/source/css/layout/_partial/first-screen.styl","hash":"d73c088e639d2d4e076552ff92e611682ce2380b","modified":1648829242000},{"_id":"themes/keep/source/css/layout/_partial/image-viewer.styl","hash":"59525fcc1f88c78abf8c1f0b06e24b16a088698c","modified":1648829242000},{"_id":"themes/keep/source/css/layout/_partial/article-meta-info.styl","hash":"378cb61cdffc7243dc11950efc6c0a5b50eecec9","modified":1648829242000},{"_id":"themes/keep/source/css/layout/_partial/header.styl","hash":"80cd9c8abd3542c0e521841137e987a658471e05","modified":1648829242000},{"_id":"themes/keep/source/css/layout/_partial/paginator.styl","hash":"da5df38b09138af28cb8b3fe9a05aeda9dae5011","modified":1648829242000},{"_id":"themes/keep/source/css/layout/_partial/local-search.styl","hash":"98aa2e22f16b98b2ffdbf36e1ea24363f8e5045b","modified":1648829242000},{"_id":"themes/keep/source/css/layout/_partial/tagcloud.styl","hash":"61016e73c8e420c74800b3afdbd6c2f890400e51","modified":1648829242000},{"_id":"themes/keep/source/css/layout/_partial/page-template.styl","hash":"27d1e19691867a09283facd2983afb9a3404e999","modified":1648829242000},{"_id":"themes/keep/source/css/layout/_partial/post-tools.styl","hash":"f78a13e3b03b19cb72b03db0a5659f8c734e742e","modified":1648829242000},{"_id":"themes/keep/source/css/layout/_partial/progress-bar.styl","hash":"a64df5515c60a3a0993c427dc50facee33215f2b","modified":1648829242000},{"_id":"themes/keep/source/css/layout/_partial/side-tools.styl","hash":"a68a1e3f21da63ee2d387035e91f9f60e956e234","modified":1648829242000},{"_id":"themes/keep/source/css/layout/_partial/comment/comment.styl","hash":"f6d9a37520566e38738fc1184ed76817273c3ee5","modified":1648829242000},{"_id":"themes/keep/source/css/layout/_partial/comment/gitalk.styl","hash":"b8fccd13e2753c9fe891fb88a6413087048ab830","modified":1648829242000},{"_id":"themes/keep/source/css/layout/_partial/toc.styl","hash":"029ac31a21203a8b86027e67a3ff3a977579325d","modified":1648829242000},{"_id":"themes/keep/source/css/layout/_partial/comment/valine.styl","hash":"6b0c7d69fc3f819610576b41e987ec655411ca44","modified":1648829242000},{"_id":"themes/keep/source/css/layout/_partial/comment/twikoo.styl","hash":"5844874c50a93239031e58b23856698ca9af2725","modified":1648829242000},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff","hash":"a42ac4a94f4e0e9333cdb1b2fb6c13c0ae690ff2","modified":1648829242000},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff2","hash":"f726c4275bb494a045fde059175f072de06c01df","modified":1648829242000},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff2","hash":"9b592048b9062b00f0b2dd782d70a95b7dc69b83","modified":1648829242000},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff","hash":"3b86a0ce15d8d534b65e98560e321a933d310688","modified":1648829242000},{"_id":"themes/keep/source/webfonts/fa-brands-400.eot","hash":"c719f4375679ee58e156434f9ba9727be669cf07","modified":1648829242000},{"_id":"themes/keep/source/webfonts/fa-brands-400.ttf","hash":"9b49c6c5b0cbdef158ae31b2a4e4814555408389","modified":1648829242000},{"_id":"themes/keep/source/webfonts/fa-regular-400.svg","hash":"c41a688158d577e3a2738137992d49b05b17ab8f","modified":1648829242000},{"_id":"themes/keep/source/webfonts/fa-solid-900.eot","hash":"c39b89f7fa7b66931ab02a54002db5ffcbff206c","modified":1648829242000},{"_id":"themes/keep/source/webfonts/fa-solid-900.ttf","hash":"d537bf4cc7273ddb3fd754d53f2b241aeafaefe7","modified":1648829242000},{"_id":"themes/keep/source/webfonts/fa-brands-400.svg","hash":"69a0ff79a9d93a451e9fa90bd79ae7008d2a9da5","modified":1648829242000},{"_id":"themes/keep/source/webfonts/fa-solid-900.svg","hash":"36de6a298660ed3feaab37900f7b28c3e981d80e","modified":1648829242000},{"_id":"public/search.xml","hash":"8565cb9463f5383e94bcd6c6610d5cfcd7871c91","modified":1661433864373},{"_id":"public/about/index.html","hash":"fa99a659c29cd05261cd444addb007c2f86eae84","modified":1661433864373},{"_id":"public/gallery/index.html","hash":"98f1c560889637e7f646b871f74611110bbf82f9","modified":1661433864373},{"_id":"public/categories/index.html","hash":"0272bfc5472b8ff69b0e275b83b2d1db53b96134","modified":1661433864373},{"_id":"public/links/index.html","hash":"4fcb95d260ad1b4da38b12eddaa528464982fedd","modified":1661433864373},{"_id":"public/changelog/index.html","hash":"a1f079489acc69e0b5a52b82c421bb98a253ab62","modified":1661433864373},{"_id":"public/friends/index.html","hash":"23c972e09ddc7842bea9e25055119e4a99303092","modified":1661433864373},{"_id":"public/tags/index.html","hash":"23ce9c372a3805beed4a8f0d3623642c4bc600fe","modified":1661433864373},{"_id":"public/photos/index.html","hash":"243ad1fdac595d06f61d675393ddcc7a6a55ea5f","modified":1661433864373},{"_id":"public/categories/折腾/index.html","hash":"d2059cee9f54d242755047d2dcf61f2401920873","modified":1661433864373},{"_id":"public/categories/笔记/index.html","hash":"48d832dd1c55b07d49a05fa718420f10bfe239ec","modified":1661433864373},{"_id":"public/categories/收藏/index.html","hash":"ed2842d87f77918d7a5db1887662ef653d37bef1","modified":1661433864373},{"_id":"public/categories/笔记/python/index.html","hash":"8b6064826b3fc40f45da154899c3e137cfb61ecf","modified":1661433864373},{"_id":"public/categories/记录/index.html","hash":"b3fd6189ecc2f96ba1389e2278e09dcc24345773","modified":1661433864373},{"_id":"public/categories/收藏/music/index.html","hash":"8a74e3ccc27f7e303aaef08986ab8951c6148659","modified":1661433864373},{"_id":"public/tags/记录/index.html","hash":"2a6903c2101f44df7a696043c4e2108ce1b6f151","modified":1661433864373},{"_id":"public/categories/笔记/cpp/index.html","hash":"3b2703b2442d5a6c49a209724a94eb507e8ac761","modified":1661433864373},{"_id":"public/tags/美食/index.html","hash":"81673c99fc63f541ab1a5c3e2e657ed8d1d7d35a","modified":1661433864373},{"_id":"public/tags/python/index.html","hash":"6523b5f759db7ffb6f24fae3b0b522134209ab96","modified":1661433864373},{"_id":"public/tags/music/index.html","hash":"e57b23983b33eb5ad13418a62b6e667423cc8ecf","modified":1661433864373},{"_id":"public/tags/口琴/index.html","hash":"d75ad75762d6e1e920a752395ae48b6248d5c9c7","modified":1661433864373},{"_id":"public/tags/心路/index.html","hash":"8ea8cfb2758c08e0ba2e110efe6c23dae07a763b","modified":1661433864373},{"_id":"public/tags/笔记/index.html","hash":"3396ef3f0325475aa7222eea71a9071c9f1cb4a5","modified":1661433864373},{"_id":"public/tags/音乐/index.html","hash":"d6b492d31227787dd9fbcb11205ee59267d21c74","modified":1661433864373},{"_id":"public/tags/娱乐/index.html","hash":"12d4c3cf643699b3f3030a4abf3627f77138bd46","modified":1661433864373},{"_id":"public/tags/code/index.html","hash":"0819275a6dda8f6622d401aa1c7e73ec66726f2f","modified":1661433864373},{"_id":"public/tags/cpp/index.html","hash":"a6c21b001d1e120eb96ce4f57829ada8632796c0","modified":1661433864373},{"_id":"public/tags/编程/index.html","hash":"914761f08b74104c79b7cf34c14b5566c30405d7","modified":1661433864373},{"_id":"public/2022/08/25/随笔/index.html","hash":"a84b2a36e742f2cd519f077041a582f8e2c688ff","modified":1661433864373},{"_id":"public/2022/03/25/没有什么值得我放其其他所有事情来达到所谓的“竭尽全力”/index.html","hash":"6a00a3fc7badc0c2224e34a5ecf9c8623c21b6e3","modified":1661433864373},{"_id":"public/2022/01/10/2022-01-10-2021总结/index.html","hash":"5743a2a4a2982bffeaa38b9b171eaef642243ab6","modified":1661433864373},{"_id":"public/2021/12/18/2021-12-18-一个新的笔记软件——TiddlyWiki/index.html","hash":"b42d919d7de93d3ea970292691a47acdd372b3fa","modified":1661433864373},{"_id":"public/2021/05/30/2021-05-30-python天气查询邮件提醒/index.html","hash":"40975f6466a0c6e63e18357dde254cd857dc885b","modified":1661433864373},{"_id":"public/2021/05/08/2021-05-08-C++学习笔记/index.html","hash":"e92014ee9fdb7abaf5f9ee3e17c0cd28697e4d66","modified":1661433864373},{"_id":"public/2021/05/08/2021-05-08-python学习笔记/index.html","hash":"f11a08c35fee52ce8b0dc0fa3c2ace47bb00c5f6","modified":1661433864373},{"_id":"public/2021/04/26/2021-04-26-最近想听的歌/index.html","hash":"25e93163f777e8dd61736dea5b0aabfe30b067f9","modified":1661433864373},{"_id":"public/2021/04/11/2021-04-11-拓扑排序/index.html","hash":"2560e4a55edfdc262d3f88df2fc08f0480f81cbd","modified":1661433864373},{"_id":"public/2021/04/02/2021-04-02-Python图片处理模块Pillow/index.html","hash":"201f2b2ed3693705aad3910fb56f96c007749e97","modified":1661433864373},{"_id":"public/2021/04/01/2021-04-01-懒/index.html","hash":"6c75d00ea7bfc56aae676ac17571b4d7b92ede1d","modified":1661433864373},{"_id":"public/2021/03/20/2021-03-20-记这两周折腾博客的经历/index.html","hash":"8a584541ee315f3dad3d86edc109f63396c4886a","modified":1661433864373},{"_id":"public/2021/03/16/2021-03-14-Python装饰器/index.html","hash":"09dd8f08f87848ef09233079edbc825d1a983942","modified":1661433864373},{"_id":"public/2021/03/15/2021-03-15-【曲子】八方旅人/index.html","hash":"6630a4b81f29642ae967535648dc0fe84fdda6de","modified":1661433864373},{"_id":"public/2021/03/14/2021-03-14-【口琴】《单簧管波尔卡》/index.html","hash":"86a6ad106c3751060dbe678eecca05c9a8485ba6","modified":1661433864373},{"_id":"public/2021/03/13/2021-03-14-催更/index.html","hash":"c06ee013450ace0ae10a25ac800dbce02c09e646","modified":1661433864373},{"_id":"public/2021/03/07/2021-03-07-干了这碗牛肉面/index.html","hash":"634907944f4f29f4711420228cf5b25cc853a60d","modified":1661433864373},{"_id":"public/2021/03/06/2021-03-05-尝试写点东西/index.html","hash":"022da061972f158bdcb92f1222cbc66efdca52e4","modified":1661433864373},{"_id":"public/archives/index.html","hash":"34308617527185be74372a332310e0308dad667b","modified":1661433864373},{"_id":"public/archives/page/2/index.html","hash":"34308617527185be74372a332310e0308dad667b","modified":1661433864373},{"_id":"public/archives/2021/index.html","hash":"6fe3a037b79b775d6a3ee43c7c62954c16ff414d","modified":1661433864373},{"_id":"public/archives/2021/page/2/index.html","hash":"6fe3a037b79b775d6a3ee43c7c62954c16ff414d","modified":1661433864373},{"_id":"public/archives/2021/03/index.html","hash":"5e58d8acf9d4613d94e8588cbe1656417ac95733","modified":1661433864373},{"_id":"public/archives/2021/04/index.html","hash":"27dee3f7b686db9486c831b867383f9c48885b58","modified":1661433864373},{"_id":"public/archives/2021/05/index.html","hash":"12139116d800c6c90642dc00cb135272064613cc","modified":1661433864373},{"_id":"public/archives/2021/12/index.html","hash":"25e3e77865745dc51e660d8842db420eecd5f404","modified":1661433864373},{"_id":"public/archives/2022/index.html","hash":"ff6f840fcbc64a2b5c0968c3d70bf623b66a8086","modified":1661433864373},{"_id":"public/archives/2022/01/index.html","hash":"a0d14fb6703cc74798fe70433dc51a02f77b931f","modified":1661433864373},{"_id":"public/archives/2022/03/index.html","hash":"5eb43c583c8e5ef5b7fcb7a0667f34b3b951c62c","modified":1661433864373},{"_id":"public/archives/2022/08/index.html","hash":"a07fb905a3b94f257e4111391ec4a2039de1c068","modified":1661433864373},{"_id":"public/page/2/index.html","hash":"aaadf8bd597e63723f0666d88840f12e47d8f72d","modified":1661433864373},{"_id":"public/index.html","hash":"6685822d4d1edca5f6dd626b5f1c17132cf074ba","modified":1661433864373},{"_id":"public/tags/折腾/index.html","hash":"58bcb4875ce23a71a12067ac999250251c8471a9","modified":1661433864373},{"_id":"public/tags/知识整理/index.html","hash":"977cf926988075c4b0c7b824af6c6b372622c01a","modified":1661433864373},{"_id":"public/tags/总结/index.html","hash":"8fab300c95f4253d2178902ab0a60b6600dc1f8d","modified":1661433864373},{"_id":"public/images/avatar.svg","hash":"aba8367cd7550e75279f707671d7146813c2a776","modified":1661433864373},{"_id":"public/CNAME","hash":"88ae60106c7be658d08bade17e3084c24b347a77","modified":1661433864373},{"_id":"public/images/bg.svg","hash":"f3106cd334dc2ceef885c19012bf59a48498af42","modified":1661433864373},{"_id":"public/images/loading.svg","hash":"eedfa204e08a60ca5c80c620cfe9a3eaa6201585","modified":1661433864373},{"_id":"public/images/logo.svg","hash":"b618728f9964a5698b1dc2548db35b3d06dd115f","modified":1661433864373},{"_id":"public/images/panghu256.ico","hash":"616b7bc7020f7ad9e56cc7cad509298d1c4dcfac","modified":1661433864373},{"_id":"public/images/upyun.png","hash":"f014175dd78c3ed5249e69c91603e20a3efcd330","modified":1661433864373},{"_id":"public/webfonts/fa-regular-400.eot","hash":"2baa9a8aa68f1d2d4712b3c7205f9105aaf21879","modified":1661433864373},{"_id":"public/webfonts/fa-regular-400.woff","hash":"26afc29d39ab9fac6d0b607be7e76db093ff7c3a","modified":1661433864373},{"_id":"public/webfonts/fa-regular-400.ttf","hash":"d64e58981a419de52bac110c979887d34e366135","modified":1661433864373},{"_id":"public/webfonts/fa-regular-400.woff2","hash":"fb9648469530a05fa9aac80e47d4d6960472a242","modified":1661433864373},{"_id":"public/js/code-copy.js","hash":"3fdabac26f6406a4592336f1f444ec966201b5d9","modified":1661433864373},{"_id":"public/webfonts/fa-brands-400.woff","hash":"a42ac4a94f4e0e9333cdb1b2fb6c13c0ae690ff2","modified":1661433864373},{"_id":"public/webfonts/fa-brands-400.woff2","hash":"f726c4275bb494a045fde059175f072de06c01df","modified":1661433864373},{"_id":"public/webfonts/fa-solid-900.woff","hash":"3b86a0ce15d8d534b65e98560e321a933d310688","modified":1661433864373},{"_id":"public/webfonts/fa-solid-900.woff2","hash":"9b592048b9062b00f0b2dd782d70a95b7dc69b83","modified":1661433864373},{"_id":"public/js/back2top.js","hash":"fc8e85f6704e39ae3a613bbec5dd51d449be8010","modified":1661433864373},{"_id":"public/js/dark-light-toggle.js","hash":"223e6f1d4e6e70956e4661b58c430e1c68def125","modified":1661433864373},{"_id":"public/js/lazyload.js","hash":"95aad532f17d7a8119979fc61ade9e626308a2af","modified":1661433864373},{"_id":"public/js/left-side-toggle.js","hash":"618f7cfc45db4d82b2f1d00d8e9ee936bcf9043b","modified":1661433864373},{"_id":"public/js/local-search.js","hash":"9509ec6d2d7d4466fe37ad624cf606f6639fb3fe","modified":1661433864373},{"_id":"public/js/header-shrink.js","hash":"167b9b6a9ed63c6cf4081cb3c201dd16bbbfb9ad","modified":1661433864373},{"_id":"public/js/main.js","hash":"ca8ed228cc0bc234be74428d029cfd047eec0ed6","modified":1661433864373},{"_id":"public/js/toc.js","hash":"ae69bf65d2b30d299b6ca9e2361d3b6e0db3a077","modified":1661433864373},{"_id":"public/js/utils.js","hash":"a2413711ebf7ffc96eafec2ef45a5d243d3ccdb6","modified":1661433864373},{"_id":"public/css/common/animated.css","hash":"654c7588d80dc8b481a203e3071b3cedd41c7fde","modified":1661433864373},{"_id":"public/css/common/basic.css","hash":"bb5c5f8bc322054f9777f0dd381d3ce1ac744374","modified":1661433864373},{"_id":"public/css/common/keep-theme.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1661433864373},{"_id":"public/css/common/markdown.css","hash":"8c9fb9f7fb403e76a4446a7e533ebe36dd702483","modified":1661433864373},{"_id":"public/css/layout/article-content.css","hash":"032fd87dc40e0252a5ab59a12adc420371bd13bf","modified":1661433864373},{"_id":"public/css/layout/archive-content.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1661433864373},{"_id":"public/css/layout/category-content.css","hash":"9687f9cbe029092b633fb804c28ecdcb54860511","modified":1661433864373},{"_id":"public/css/layout/home-content.css","hash":"be1438b849ebf82cea573986fbbd1deed5334a72","modified":1661433864373},{"_id":"public/css/common/variables.css","hash":"157311f7b38a76721f2b6a2a9bd5229fac60df41","modified":1661433864373},{"_id":"public/css/layout/category-list.css","hash":"672859a61a4e93c0514772112fb557395306e940","modified":1661433864373},{"_id":"public/css/layout/page.css","hash":"c9d5a1244b1a393ebf63412cf9ffef43ca48d64e","modified":1661433864373},{"_id":"public/css/layout/tag-content.css","hash":"90b0cff1ef0228035cdca9ade2adef71c6c8fb5e","modified":1661433864373},{"_id":"public/css/common/codeblock/copy-code.css","hash":"b89f31aee2da7a9abe05293391a90602094095b8","modified":1661433864373},{"_id":"public/css/common/codeblock/code-theme.css","hash":"0edc6d498dc0abbaadb152b48e9e7bebb6fd15f4","modified":1661433864373},{"_id":"public/css/common/codeblock/highlight.css","hash":"a6584196f859d00cdd962f43c809e44ed89319e4","modified":1661433864373},{"_id":"public/css/style.css","hash":"cd1207ca0e0b057c83d6edb9301977c54625837b","modified":1661433864373},{"_id":"public/css/font-awesome.min.css","hash":"c508528feb9fd540454f838653cd4863b290df2e","modified":1661433864373},{"_id":"public/js/libs/pjax.min.js","hash":"57ec40cb4898d7ba74a03603d608af378e5431f8","modified":1661433864373},{"_id":"public/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1661433864373},{"_id":"public/gallery/panghu.jpg","hash":"45afb109c48372d70cd7e275ce11ccd8ac616f52","modified":1661433864373},{"_id":"public/webfonts/fa-brands-400.eot","hash":"c719f4375679ee58e156434f9ba9727be669cf07","modified":1661433864373},{"_id":"public/webfonts/fa-brands-400.ttf","hash":"9b49c6c5b0cbdef158ae31b2a4e4814555408389","modified":1661433864373},{"_id":"public/webfonts/fa-regular-400.svg","hash":"c41a688158d577e3a2738137992d49b05b17ab8f","modified":1661433864373},{"_id":"public/gallery/毛利小五郎.jpg","hash":"501aed95032b75b786e28e51674c323edda6e7ab","modified":1661433864373},{"_id":"public/webfonts/fa-solid-900.eot","hash":"c39b89f7fa7b66931ab02a54002db5ffcbff206c","modified":1661433864373},{"_id":"public/webfonts/fa-solid-900.ttf","hash":"d537bf4cc7273ddb3fd754d53f2b241aeafaefe7","modified":1661433864373},{"_id":"public/webfonts/fa-brands-400.svg","hash":"69a0ff79a9d93a451e9fa90bd79ae7008d2a9da5","modified":1661433864373},{"_id":"public/webfonts/fa-solid-900.svg","hash":"36de6a298660ed3feaab37900f7b28c3e981d80e","modified":1661433864373}],"Category":[{"name":"折腾","_id":"cl792rm0j0004tkinc1984rn3"},{"name":"笔记","_id":"cl792rm0t000ctkin30d8gsm2"},{"name":"收藏","_id":"cl792rm11000ltkin8ycobwhd"},{"name":"记录","_id":"cl792rm16000rtkin31ul8vve"},{"name":"python","parent":"cl792rm0t000ctkin30d8gsm2","_id":"cl792rm1g0013tkinbaxl0nd8"},{"name":"music","parent":"cl792rm11000ltkin8ycobwhd","_id":"cl792rm1k001btking3py5zrm"},{"name":"cpp","parent":"cl792rm0t000ctkin30d8gsm2","_id":"cl792rm1t001ttkinca16gf89"}],"Data":[{"_id":"links","data":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}],"Page":[{"title":"about","date":"2022-03-19T04:48:29.000Z","_content":"\n哈喽，很高兴遇见你。\n\n这里是我的空间，我会偶尔写一些东西放在这里，内容可能是日常记录，可能是一段时期的总结，也可能是烦心时的树洞。都是一些纯主观的内容，没有什么限制，我也不希望有什么负担，只是记得写写东西放在这里就好了，积累多了意义就会显现出来。\n\n\n\n客观理性的另一面请移步我的[知识库](http://leiwei.space/wiki)。\n   \n\n  \n\n---\n\n一些时刻：\n\n\n>2022-03-19：没有什么值得我放弃其他所有事情来达到所谓的“竭尽全力”，以“闭关”的方式对待生活本就是一个错误。\n\n\n>2021-12-18：胖虎的wiki诞生，我将基于此打造数字化第二大脑，存储以及构建成体系的个人知识库。","source":"about/index.md","raw":"---\ntitle: about\ndate: 2022-03-19 12:48:29\n---\n\n哈喽，很高兴遇见你。\n\n这里是我的空间，我会偶尔写一些东西放在这里，内容可能是日常记录，可能是一段时期的总结，也可能是烦心时的树洞。都是一些纯主观的内容，没有什么限制，我也不希望有什么负担，只是记得写写东西放在这里就好了，积累多了意义就会显现出来。\n\n\n\n客观理性的另一面请移步我的[知识库](http://leiwei.space/wiki)。\n   \n\n  \n\n---\n\n一些时刻：\n\n\n>2022-03-19：没有什么值得我放弃其他所有事情来达到所谓的“竭尽全力”，以“闭关”的方式对待生活本就是一个错误。\n\n\n>2021-12-18：胖虎的wiki诞生，我将基于此打造数字化第二大脑，存储以及构建成体系的个人知识库。","updated":"2022-04-01T17:58:15.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cl792rm030000tkin6j49hmxr","content":"<p>哈喽，很高兴遇见你。</p>\n<p>这里是我的空间，我会偶尔写一些东西放在这里，内容可能是日常记录，可能是一段时期的总结，也可能是烦心时的树洞。都是一些纯主观的内容，没有什么限制，我也不希望有什么负担，只是记得写写东西放在这里就好了，积累多了意义就会显现出来。</p>\n<p>客观理性的另一面请移步我的<a class=\"link\"   href=\"http://leiwei.space/wiki\" >知识库<i class=\"fas fa-external-link-alt\"></i></a>。</p>\n<hr>\n<p>一些时刻：</p>\n<blockquote>\n<p>2022-03-19：没有什么值得我放弃其他所有事情来达到所谓的“竭尽全力”，以“闭关”的方式对待生活本就是一个错误。</p>\n</blockquote>\n<blockquote>\n<p>2021-12-18：胖虎的wiki诞生，我将基于此打造数字化第二大脑，存储以及构建成体系的个人知识库。</p>\n</blockquote>\n","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"","more":"<p>哈喽，很高兴遇见你。</p>\n<p>这里是我的空间，我会偶尔写一些东西放在这里，内容可能是日常记录，可能是一段时期的总结，也可能是烦心时的树洞。都是一些纯主观的内容，没有什么限制，我也不希望有什么负担，只是记得写写东西放在这里就好了，积累多了意义就会显现出来。</p>\n<p>客观理性的另一面请移步我的<a class=\"link\"   href=\"http://leiwei.space/wiki\" >知识库<i class=\"fas fa-external-link-alt\"></i></a>。</p>\n<hr>\n<p>一些时刻：</p>\n<blockquote>\n<p>2022-03-19：没有什么值得我放弃其他所有事情来达到所谓的“竭尽全力”，以“闭关”的方式对待生活本就是一个错误。</p>\n</blockquote>\n<blockquote>\n<p>2021-12-18：胖虎的wiki诞生，我将基于此打造数字化第二大脑，存储以及构建成体系的个人知识库。</p>\n</blockquote>\n"},{"title":"gallery","albums":[["https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/202201111917265.jpg","asd"],["https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/202201111929315.jpg","sleep"]],"_content":"","source":"gallery/index.md","raw":"---\ntitle: gallery\n\nalbums: [\n        [\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/202201111917265.jpg\",\"asd\"],\n        [\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/202201111929315.jpg\",\"sleep\"]\n]\n---\n","date":"2022-08-25T09:17:13.642Z","updated":"2022-03-21T04:30:59.000Z","path":"gallery/index.html","comments":1,"layout":"page","_id":"cl792rm0e0002tkin7anud9il","content":"","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"","more":""},{"title":"categories","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ntype: \"categories\"\nlayout: \"categories\"\n---","date":"2022-08-25T09:17:13.642Z","updated":"2022-03-21T08:25:12.000Z","path":"categories/index.html","comments":1,"_id":"cl792rm0n0006tkinciht5eyf","content":"","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"","more":""},{"title":"links","date":"2022-04-01T16:49:54.000Z","_content":"","source":"links/index.md","raw":"---\ntitle: links\ndate: 2022-04-02 00:49:54\n---\n","updated":"2022-04-01T16:49:54.000Z","path":"links/index.html","comments":1,"layout":"page","_id":"cl792rm0p0008tkincpzcana7","content":"","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"","more":""},{"title":"changelog","date":"2022-04-01T17:09:49.000Z","_content":"","source":"changelog/index.md","raw":"---\ntitle: changelog\ndate: 2022-04-02 01:09:49\n---\n","updated":"2022-04-01T17:09:49.000Z","path":"changelog/index.html","comments":1,"layout":"page","_id":"cl792rm0r000atkin67gg0nqo","content":"","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"","more":""},{"title":"friends","type":"friends","layout":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ntype: \"friends\"\nlayout: \"friends\"\n---","date":"2022-08-25T09:17:13.642Z","updated":"2022-03-21T08:33:42.000Z","path":"friends/index.html","comments":1,"_id":"cl792rm0v000ftkina1bx96se","content":"","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"","more":""},{"title":"tags","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ntype: \"tags\"\nlayout: \"tags\"\n---\n","date":"2022-08-25T09:17:13.643Z","updated":"2022-03-21T09:07:56.000Z","path":"tags/index.html","comments":1,"_id":"cl792rm0y000itkin9hep270h","content":"","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"","more":""},{"title":"Gallery","albums":[["https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/02201111917265.jpg","asd"],["https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/02201111929315.jpg","sleep"]],"_content":"","source":"photos/index.md","raw":"---\ntitle: Gallery\n\n\nalbums: [[\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/02201111917265.jpg\",\"asd\"],\n        [\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/02201111929315.jpg\",\"sleep\"]]\n        \n---","date":"2022-08-25T09:17:13.643Z","updated":"2022-03-25T15:22:36.000Z","path":"photos/index.html","comments":1,"layout":"page","_id":"cl792rm13000ntkinffmxhem4","content":"","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"","more":""}],"Post":[{"layout":"post","title":"尝试写点东西","subtitle":"Just a try","date":"2021-03-05T16:00:00.000Z","author":"LW","header-img":"img/post-bg-cook.jpg","catalog":true,"_content":"# hi，这里是我的博客\n\n终于把个人网站搭建起来了！真是不容易呢，有这个想法很久了，走了很多弯路，最后终于还是做出来了。还不太完善，日后会一边写内容一边将网站继续完善完善。\n\n<!--more-->\n\n## 博客项目\n\n不得不感叹GitHub太强了！尝试过一些其他的方式，最后还是选择了白嫖~~(bushi)~~ 。\n\n这里是我的[博客项目主页](https://github.com/lei-wei/lei-wei.github.io)，折腾很麻烦，但我还是折腾了很久。目前看得懂部分的不多，目标是把相关的技术达到会使用的程度，然后把我的博客再完全个人定制一下。\n\n## 域名\n\n域名是[阿里云](https://wanwang.aliyun.com/)上首年五块钱买的，起名字的时候还是小小纠结了一下，转念一想五块钱还要什么自行车！于是简单粗暴地整就完了。\n\n## 总想写点什么东西\n\n---\n博客说到底也就是一个特殊一点的展示信息的平台，重要的还是内容，所以接下来不出意外的话我会尽可能地做一些尝试，往网站上推一些奇奇怪怪的内容，不要太在意哈。\n\n## 一些计划\n\n日常琐碎的会随便写写，想到啥写啥，不会有什么顾忌。\n\n包括\n\n- 日常/回忆录\n- 成体系的学习笔记\n- 不成熟的想法，希望它们能慢慢变得成熟\n\n---\n\n写完了的东西会不定期修改整理，自己整的好处就在于——我有完整的控制权，不会留下什么黑历史的~（也许）\n\n- 太琐碎的也许会删掉（不会的）\n- 类似美食之类的，可能会合并内容做成长篇\n- 一些的想法心路，会根据tag标签功能做成集合吧，\n- 个人回忆录系列\n\n具体怎么做谁知道呢，哪来那么多规则，写了再说吧！\n\n就从这一篇开始。\n","source":"_posts/2021-03-05-尝试写点东西.md","raw":"---\nlayout:     post\ntitle:      尝试写点东西\nsubtitle:   Just a try\ndate:       2021-3-06\nauthor:     LW\nheader-img: img/post-bg-cook.jpg\ncatalog: true\ntags: 记录\n\ncategories: \n    - 折腾\n---\n# hi，这里是我的博客\n\n终于把个人网站搭建起来了！真是不容易呢，有这个想法很久了，走了很多弯路，最后终于还是做出来了。还不太完善，日后会一边写内容一边将网站继续完善完善。\n\n<!--more-->\n\n## 博客项目\n\n不得不感叹GitHub太强了！尝试过一些其他的方式，最后还是选择了白嫖~~(bushi)~~ 。\n\n这里是我的[博客项目主页](https://github.com/lei-wei/lei-wei.github.io)，折腾很麻烦，但我还是折腾了很久。目前看得懂部分的不多，目标是把相关的技术达到会使用的程度，然后把我的博客再完全个人定制一下。\n\n## 域名\n\n域名是[阿里云](https://wanwang.aliyun.com/)上首年五块钱买的，起名字的时候还是小小纠结了一下，转念一想五块钱还要什么自行车！于是简单粗暴地整就完了。\n\n## 总想写点什么东西\n\n---\n博客说到底也就是一个特殊一点的展示信息的平台，重要的还是内容，所以接下来不出意外的话我会尽可能地做一些尝试，往网站上推一些奇奇怪怪的内容，不要太在意哈。\n\n## 一些计划\n\n日常琐碎的会随便写写，想到啥写啥，不会有什么顾忌。\n\n包括\n\n- 日常/回忆录\n- 成体系的学习笔记\n- 不成熟的想法，希望它们能慢慢变得成熟\n\n---\n\n写完了的东西会不定期修改整理，自己整的好处就在于——我有完整的控制权，不会留下什么黑历史的~（也许）\n\n- 太琐碎的也许会删掉（不会的）\n- 类似美食之类的，可能会合并内容做成长篇\n- 一些的想法心路，会根据tag标签功能做成集合吧，\n- 个人回忆录系列\n\n具体怎么做谁知道呢，哪来那么多规则，写了再说吧！\n\n就从这一篇开始。\n","slug":"2021-03-05-尝试写点东西","published":1,"updated":"2022-03-21T09:14:31.000Z","comments":1,"photos":[],"link":"","_id":"cl792rm090001tkin5lna74r5","content":"<h1 id=\"hi，这里是我的博客\"><a href=\"#hi，这里是我的博客\" class=\"headerlink\" title=\"hi，这里是我的博客\"></a>hi，这里是我的博客</h1><p>终于把个人网站搭建起来了！真是不容易呢，有这个想法很久了，走了很多弯路，最后终于还是做出来了。还不太完善，日后会一边写内容一边将网站继续完善完善。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"博客项目\"><a href=\"#博客项目\" class=\"headerlink\" title=\"博客项目\"></a>博客项目</h2><p>不得不感叹GitHub太强了！尝试过一些其他的方式，最后还是选择了白嫖<del>(bushi)</del> 。</p>\n<p>这里是我的<a class=\"link\"   href=\"https://github.com/lei-wei/lei-wei.github.io\" >博客项目主页<i class=\"fas fa-external-link-alt\"></i></a>，折腾很麻烦，但我还是折腾了很久。目前看得懂部分的不多，目标是把相关的技术达到会使用的程度，然后把我的博客再完全个人定制一下。</p>\n<h2 id=\"域名\"><a href=\"#域名\" class=\"headerlink\" title=\"域名\"></a>域名</h2><p>域名是<a class=\"link\"   href=\"https://wanwang.aliyun.com/\" >阿里云<i class=\"fas fa-external-link-alt\"></i></a>上首年五块钱买的，起名字的时候还是小小纠结了一下，转念一想五块钱还要什么自行车！于是简单粗暴地整就完了。</p>\n<h2 id=\"总想写点什么东西\"><a href=\"#总想写点什么东西\" class=\"headerlink\" title=\"总想写点什么东西\"></a>总想写点什么东西</h2><hr>\n<p>博客说到底也就是一个特殊一点的展示信息的平台，重要的还是内容，所以接下来不出意外的话我会尽可能地做一些尝试，往网站上推一些奇奇怪怪的内容，不要太在意哈。</p>\n<h2 id=\"一些计划\"><a href=\"#一些计划\" class=\"headerlink\" title=\"一些计划\"></a>一些计划</h2><p>日常琐碎的会随便写写，想到啥写啥，不会有什么顾忌。</p>\n<p>包括</p>\n<ul>\n<li>日常/回忆录</li>\n<li>成体系的学习笔记</li>\n<li>不成熟的想法，希望它们能慢慢变得成熟</li>\n</ul>\n<hr>\n<p>写完了的东西会不定期修改整理，自己整的好处就在于——我有完整的控制权，不会留下什么黑历史的~（也许）</p>\n<ul>\n<li>太琐碎的也许会删掉（不会的）</li>\n<li>类似美食之类的，可能会合并内容做成长篇</li>\n<li>一些的想法心路，会根据tag标签功能做成集合吧，</li>\n<li>个人回忆录系列</li>\n</ul>\n<p>具体怎么做谁知道呢，哪来那么多规则，写了再说吧！</p>\n<p>就从这一篇开始。</p>\n","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"<h1 id=\"hi，这里是我的博客\"><a href=\"#hi，这里是我的博客\" class=\"headerlink\" title=\"hi，这里是我的博客\"></a>hi，这里是我的博客</h1><p>终于把个人网站搭建起来了！真是不容易呢，有这个想法很久了，走了很多弯路，最后终于还是做出来了。还不太完善，日后会一边写内容一边将网站继续完善完善。</p>","more":"<h2 id=\"博客项目\"><a href=\"#博客项目\" class=\"headerlink\" title=\"博客项目\"></a>博客项目</h2><p>不得不感叹GitHub太强了！尝试过一些其他的方式，最后还是选择了白嫖<del>(bushi)</del> 。</p>\n<p>这里是我的<a class=\"link\"   href=\"https://github.com/lei-wei/lei-wei.github.io\" >博客项目主页<i class=\"fas fa-external-link-alt\"></i></a>，折腾很麻烦，但我还是折腾了很久。目前看得懂部分的不多，目标是把相关的技术达到会使用的程度，然后把我的博客再完全个人定制一下。</p>\n<h2 id=\"域名\"><a href=\"#域名\" class=\"headerlink\" title=\"域名\"></a>域名</h2><p>域名是<a class=\"link\"   href=\"https://wanwang.aliyun.com/\" >阿里云<i class=\"fas fa-external-link-alt\"></i></a>上首年五块钱买的，起名字的时候还是小小纠结了一下，转念一想五块钱还要什么自行车！于是简单粗暴地整就完了。</p>\n<h2 id=\"总想写点什么东西\"><a href=\"#总想写点什么东西\" class=\"headerlink\" title=\"总想写点什么东西\"></a>总想写点什么东西</h2><hr>\n<p>博客说到底也就是一个特殊一点的展示信息的平台，重要的还是内容，所以接下来不出意外的话我会尽可能地做一些尝试，往网站上推一些奇奇怪怪的内容，不要太在意哈。</p>\n<h2 id=\"一些计划\"><a href=\"#一些计划\" class=\"headerlink\" title=\"一些计划\"></a>一些计划</h2><p>日常琐碎的会随便写写，想到啥写啥，不会有什么顾忌。</p>\n<p>包括</p>\n<ul>\n<li>日常/回忆录</li>\n<li>成体系的学习笔记</li>\n<li>不成熟的想法，希望它们能慢慢变得成熟</li>\n</ul>\n<hr>\n<p>写完了的东西会不定期修改整理，自己整的好处就在于——我有完整的控制权，不会留下什么黑历史的~（也许）</p>\n<ul>\n<li>太琐碎的也许会删掉（不会的）</li>\n<li>类似美食之类的，可能会合并内容做成长篇</li>\n<li>一些的想法心路，会根据tag标签功能做成集合吧，</li>\n<li>个人回忆录系列</li>\n</ul>\n<p>具体怎么做谁知道呢，哪来那么多规则，写了再说吧！</p>\n<p>就从这一篇开始。</p>"},{"layout":"post","title":"干了这碗襄阳牛肉面","subtitle":"一道美味","date":"2021-03-06T16:00:00.000Z","author":"LW","header-img":"img/post-bg-beef noodles.jpg","catalog":true,"_content":"\n正宗的碱面配上红油汤汁，香气扑鼻味道可口，辅以虎皮鸡蛋、卤香干亦或是油条，再撒上些许葱末，在健身之后饥肠辘辘时来上一大碗，回味悠长，实乃一道美味。\n\n比较饿的时候可加面（加量），面虽香，但光面吃多未免会有些许乏味，换成卤香干、油条之类的小食搭配更佳。\n\n<!--more-->\n\n![干了这碗黄豆面！](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/5c5630ff686cfb41.jpg \"干了这碗黄豆面！\")\n<center>干了这碗黄豆面！</center>\n\n![干了这碗豆腐面](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/4d46b487b8810d09.jpg \"干了这碗豆腐面！\")\n<center>干了这碗豆腐面！</center>\n\n![干了这碗牛杂面](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/560cd2ac5379b0e1.jpg \"干了这碗牛杂面！\")\n<center>干了这碗牛杂面！</center>\n\n![干了这碗牛肉面](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/61a234d8f9c3dfb1.jpg \"干了这碗牛肉面！\")\n<center>在襄阳吃的襄阳牛肉面</center>\n\n---\n照片已补齐。\n","source":"_posts/2021-03-07-干了这碗牛肉面.md","raw":"---\nlayout:     post\ntitle:      干了这碗襄阳牛肉面\nsubtitle:   一道美味\ndate:       2021-3-07\nauthor:     LW\nheader-img: img/post-bg-beef noodles.jpg\ncatalog: true\ntags: 美食\n\n---\n\n正宗的碱面配上红油汤汁，香气扑鼻味道可口，辅以虎皮鸡蛋、卤香干亦或是油条，再撒上些许葱末，在健身之后饥肠辘辘时来上一大碗，回味悠长，实乃一道美味。\n\n比较饿的时候可加面（加量），面虽香，但光面吃多未免会有些许乏味，换成卤香干、油条之类的小食搭配更佳。\n\n<!--more-->\n\n![干了这碗黄豆面！](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/5c5630ff686cfb41.jpg \"干了这碗黄豆面！\")\n<center>干了这碗黄豆面！</center>\n\n![干了这碗豆腐面](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/4d46b487b8810d09.jpg \"干了这碗豆腐面！\")\n<center>干了这碗豆腐面！</center>\n\n![干了这碗牛杂面](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/560cd2ac5379b0e1.jpg \"干了这碗牛杂面！\")\n<center>干了这碗牛杂面！</center>\n\n![干了这碗牛肉面](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/61a234d8f9c3dfb1.jpg \"干了这碗牛肉面！\")\n<center>在襄阳吃的襄阳牛肉面</center>\n\n---\n照片已补齐。\n","slug":"2021-03-07-干了这碗牛肉面","published":1,"updated":"2022-03-21T09:42:36.000Z","comments":1,"photos":[],"link":"","_id":"cl792rm0g0003tkine1il2gj7","content":"<p>正宗的碱面配上红油汤汁，香气扑鼻味道可口，辅以虎皮鸡蛋、卤香干亦或是油条，再撒上些许葱末，在健身之后饥肠辘辘时来上一大碗，回味悠长，实乃一道美味。</p>\n<p>比较饿的时候可加面（加量），面虽香，但光面吃多未免会有些许乏味，换成卤香干、油条之类的小食搭配更佳。</p>\n<span id=\"more\"></span>\n\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/5c5630ff686cfb41.jpg\"\n                      alt=\"干了这碗黄豆面！\" title=\"干了这碗黄豆面！\"\n                ></p>\n<center>干了这碗黄豆面！</center>\n\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/4d46b487b8810d09.jpg\"\n                      alt=\"干了这碗豆腐面\" title=\"干了这碗豆腐面！\"\n                ></p>\n<center>干了这碗豆腐面！</center>\n\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/560cd2ac5379b0e1.jpg\"\n                      alt=\"干了这碗牛杂面\" title=\"干了这碗牛杂面！\"\n                ></p>\n<center>干了这碗牛杂面！</center>\n\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/61a234d8f9c3dfb1.jpg\"\n                      alt=\"干了这碗牛肉面\" title=\"干了这碗牛肉面！\"\n                ></p>\n<center>在襄阳吃的襄阳牛肉面</center>\n\n<hr>\n<p>照片已补齐。</p>\n","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"<p>正宗的碱面配上红油汤汁，香气扑鼻味道可口，辅以虎皮鸡蛋、卤香干亦或是油条，再撒上些许葱末，在健身之后饥肠辘辘时来上一大碗，回味悠长，实乃一道美味。</p>\n<p>比较饿的时候可加面（加量），面虽香，但光面吃多未免会有些许乏味，换成卤香干、油条之类的小食搭配更佳。</p>","more":"<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/5c5630ff686cfb41.jpg\"\n                      alt=\"干了这碗黄豆面！\" title=\"干了这碗黄豆面！\"\n                ></p>\n<center>干了这碗黄豆面！</center>\n\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/4d46b487b8810d09.jpg\"\n                      alt=\"干了这碗豆腐面\" title=\"干了这碗豆腐面！\"\n                ></p>\n<center>干了这碗豆腐面！</center>\n\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/560cd2ac5379b0e1.jpg\"\n                      alt=\"干了这碗牛杂面\" title=\"干了这碗牛杂面！\"\n                ></p>\n<center>干了这碗牛杂面！</center>\n\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/61a234d8f9c3dfb1.jpg\"\n                      alt=\"干了这碗牛肉面\" title=\"干了这碗牛肉面！\"\n                ></p>\n<center>在襄阳吃的襄阳牛肉面</center>\n\n<hr>\n<p>照片已补齐。</p>"},{"layout":"post","title":"Python装饰器","subtitle":"原理及用法","date":"2021-03-15T16:00:00.000Z","author":"LW","header-img":"img/post-bg-code.jpg","catalog":true,"_content":"\n# python装饰器\n\n装饰器，在不改变原函数的情况下，为其增强功能。\n\n<!--more-->\n\n## 1. 前置知识\n\n### 高阶函数\n\n在python中函数也是被视为对象的，可以作为参数传递\n\n##### 示例1\n\n```python\n\ndef square(n):\n    return n * n\n\ndef func(a, b, fun):\n    res = fun(a) + fun(b)\n    return res\n\nprint(func(2, 3, square))    # 函数square作为函数传入到函数func中\n\n# 结果：13\n```\n\n##### 示例2\n\n```python\n\ndef add(a, b):\n    return a + b\n\ndef sub(a, b):\n    return a - b\n\nfuncs = [add, sub]  # 函数作为列表成员方便调用\nprint(funcs[0](1, 2))\nprint(funcs[1](1, 2))\n\n# 结果：3，-1\n```\n\n### 闭包函数\n\n声明在一个函数种的函数被称为闭包函数，它可以访问其所在外部函数的参数和变量。\n\n```python\ndef outer():\n    x = 5\n    def inner():\n        print(x)\n    return inner\n\nouter()\n\n# 结果是 5 ,内部函数inner引用外部函数的变量   \n# inner()函数就是一个闭包\n```\n\n## 2、简单的装饰器示例\n\n```python\n\nimport time\n\ndef calc_spend_time(func):\n    '''\n    description: \n    一个监测程序运行的装饰器函数。在不改动原业务函数的情况下，增添其功能。    \n    输入一个函数，即参数为业务函数  \n    返回一个函数，即新建的内部闭包函数（装饰过的函数）  \n    '''\n    def wrapper():\n        # 调用前的操作\n        start = time.time()\n        # 调用业务函数   \n        func()\n        # 调用后的操作 \n        print(f'{func} is called')\n        print(func.__name__ + '() start')\n        end = time.time()\n        print('用时{:.5f}秒'.format(end-start))\n    return wrapper  #返回装饰后的闭包函数   \n\n@calc_spend_time  # 语法糖，相当于hello = decorator(hello)  \n\ndef hello():\n    print('hello world!')\n\nif __name__ == '__main__':\n    hello()\n\n# hello world!     \n# <function hello at 0x01F2ED18> is called    \n# hello() start    \n# 用时0.00099秒   \n```\n\n## 3. 业务函数带参数\n\n```python\n\ndef decorator(func):\n    '''\n    description: 记录日志的装饰器函数。\n    '''\n    def wrapper(*args, **kwargs):\n        '''\n        业务函数的参数通过wrapper的函数来传递  \n        返回值通过wrapper的返回值返回   \n        '''\n        value = func(*args, **kwargs)  # 记录业务函数返回值   \n        print(f'{func} is called with arguments = {args} and kwargs = {kwargs}')\n        print(f'{func} return value {value}')\n        return value  # 返回业务函数的返回值  \n    return wrapper\n\n@decorator  # 语法糖，相当于hello = decorator(hello)   \n\ndef func1(*args, **kwargs):\n    sum = 0\n    for num in args:\n        sum += num\n    print(f'args = {args}, kwargs = {kwargs}')\n    return sum\n\nif __name__ == '__main__':\n    func1(1, 2, c=3, d=4)\n\n# args = (1, 2), kwargs = {'c': 3, 'd': 4}   \n# <function func1 at 0x013DED18> is called with arguments = (1, 2) and kwargs = {'c': 3, 'd': 4}    \n# <function func1 at 0x013DED18> return value 3   \n```\n\n参数`*args`用来发送一个非键值对的**可变数量的参数列表**给一个函数，可看作`tuple`  \n`参数**kwargs`允许你将不定长度的**键值对**作为参数传递给一个函数，可看作`dict`\n\n## 4. 装饰器带参数\n\n```python\n\ndef outer(author):  # 再套一层，传入装饰器的参数   \n    def middle(func): # 中间层传入业务函数\n        def wrapper(*args, **kwargs):\n            value = func(*args, **kwargs)  # 记录业务函数返回值\n            print('author: ', author,\n                  f'\\n{func} is called with arguments = {args} and kwargs = {kwargs}',\n                  f'\\nreturn value: {value}')\n            return value   # 返回业务函数的返回值\n        return wrapper\n    return middle\n\n# @outer('lei')  # 语法糖，相当于func1 = outer('lei')(func1)\ndef func1(*args, **kwargs):\n    sum = 0\n    for num in args:\n        sum += num\n    return sum\n\nif __name__ == '__main__':\n    func1 = outer('lei')(func1)\n    func1(1, 2, c=3, d=4)\n    # # 不用语法糖等价1：\n    # func1 = outer('lei')(func1)\n    # func1(1, 2, c=3, d=4)\n    # # 不用语法糖等价2：\n    # func1 = outer('lei')(func1)(1, 2, c=3, d=4)\n\n\n# 输出结果：\n# author:  lei\n# <function func1 at 0x0192EE38> is called with arguments = (1, 2) and kwargs = {'c': 3, 'd': 4}\n# return value: 3\n```\n\n---\n","source":"_posts/2021-03-14-Python装饰器.md","raw":"---\nlayout:     post\ntitle:      Python装饰器\nsubtitle:   原理及用法\ndate:       2021-3-16\nauthor:     LW\nheader-img: img/post-bg-code.jpg\ncatalog: true\ntags: \n    - python\n\ncategories: \n    - 笔记\n    - python\n---\n\n# python装饰器\n\n装饰器，在不改变原函数的情况下，为其增强功能。\n\n<!--more-->\n\n## 1. 前置知识\n\n### 高阶函数\n\n在python中函数也是被视为对象的，可以作为参数传递\n\n##### 示例1\n\n```python\n\ndef square(n):\n    return n * n\n\ndef func(a, b, fun):\n    res = fun(a) + fun(b)\n    return res\n\nprint(func(2, 3, square))    # 函数square作为函数传入到函数func中\n\n# 结果：13\n```\n\n##### 示例2\n\n```python\n\ndef add(a, b):\n    return a + b\n\ndef sub(a, b):\n    return a - b\n\nfuncs = [add, sub]  # 函数作为列表成员方便调用\nprint(funcs[0](1, 2))\nprint(funcs[1](1, 2))\n\n# 结果：3，-1\n```\n\n### 闭包函数\n\n声明在一个函数种的函数被称为闭包函数，它可以访问其所在外部函数的参数和变量。\n\n```python\ndef outer():\n    x = 5\n    def inner():\n        print(x)\n    return inner\n\nouter()\n\n# 结果是 5 ,内部函数inner引用外部函数的变量   \n# inner()函数就是一个闭包\n```\n\n## 2、简单的装饰器示例\n\n```python\n\nimport time\n\ndef calc_spend_time(func):\n    '''\n    description: \n    一个监测程序运行的装饰器函数。在不改动原业务函数的情况下，增添其功能。    \n    输入一个函数，即参数为业务函数  \n    返回一个函数，即新建的内部闭包函数（装饰过的函数）  \n    '''\n    def wrapper():\n        # 调用前的操作\n        start = time.time()\n        # 调用业务函数   \n        func()\n        # 调用后的操作 \n        print(f'{func} is called')\n        print(func.__name__ + '() start')\n        end = time.time()\n        print('用时{:.5f}秒'.format(end-start))\n    return wrapper  #返回装饰后的闭包函数   \n\n@calc_spend_time  # 语法糖，相当于hello = decorator(hello)  \n\ndef hello():\n    print('hello world!')\n\nif __name__ == '__main__':\n    hello()\n\n# hello world!     \n# <function hello at 0x01F2ED18> is called    \n# hello() start    \n# 用时0.00099秒   \n```\n\n## 3. 业务函数带参数\n\n```python\n\ndef decorator(func):\n    '''\n    description: 记录日志的装饰器函数。\n    '''\n    def wrapper(*args, **kwargs):\n        '''\n        业务函数的参数通过wrapper的函数来传递  \n        返回值通过wrapper的返回值返回   \n        '''\n        value = func(*args, **kwargs)  # 记录业务函数返回值   \n        print(f'{func} is called with arguments = {args} and kwargs = {kwargs}')\n        print(f'{func} return value {value}')\n        return value  # 返回业务函数的返回值  \n    return wrapper\n\n@decorator  # 语法糖，相当于hello = decorator(hello)   \n\ndef func1(*args, **kwargs):\n    sum = 0\n    for num in args:\n        sum += num\n    print(f'args = {args}, kwargs = {kwargs}')\n    return sum\n\nif __name__ == '__main__':\n    func1(1, 2, c=3, d=4)\n\n# args = (1, 2), kwargs = {'c': 3, 'd': 4}   \n# <function func1 at 0x013DED18> is called with arguments = (1, 2) and kwargs = {'c': 3, 'd': 4}    \n# <function func1 at 0x013DED18> return value 3   \n```\n\n参数`*args`用来发送一个非键值对的**可变数量的参数列表**给一个函数，可看作`tuple`  \n`参数**kwargs`允许你将不定长度的**键值对**作为参数传递给一个函数，可看作`dict`\n\n## 4. 装饰器带参数\n\n```python\n\ndef outer(author):  # 再套一层，传入装饰器的参数   \n    def middle(func): # 中间层传入业务函数\n        def wrapper(*args, **kwargs):\n            value = func(*args, **kwargs)  # 记录业务函数返回值\n            print('author: ', author,\n                  f'\\n{func} is called with arguments = {args} and kwargs = {kwargs}',\n                  f'\\nreturn value: {value}')\n            return value   # 返回业务函数的返回值\n        return wrapper\n    return middle\n\n# @outer('lei')  # 语法糖，相当于func1 = outer('lei')(func1)\ndef func1(*args, **kwargs):\n    sum = 0\n    for num in args:\n        sum += num\n    return sum\n\nif __name__ == '__main__':\n    func1 = outer('lei')(func1)\n    func1(1, 2, c=3, d=4)\n    # # 不用语法糖等价1：\n    # func1 = outer('lei')(func1)\n    # func1(1, 2, c=3, d=4)\n    # # 不用语法糖等价2：\n    # func1 = outer('lei')(func1)(1, 2, c=3, d=4)\n\n\n# 输出结果：\n# author:  lei\n# <function func1 at 0x0192EE38> is called with arguments = (1, 2) and kwargs = {'c': 3, 'd': 4}\n# return value: 3\n```\n\n---\n","slug":"2021-03-14-Python装饰器","published":1,"updated":"2022-03-21T09:45:30.000Z","comments":1,"photos":[],"link":"","_id":"cl792rm0o0007tkinhj118qt2","content":"<h1 id=\"python装饰器\"><a href=\"#python装饰器\" class=\"headerlink\" title=\"python装饰器\"></a>python装饰器</h1><p>装饰器，在不改变原函数的情况下，为其增强功能。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"1-前置知识\"><a href=\"#1-前置知识\" class=\"headerlink\" title=\"1. 前置知识\"></a>1. 前置知识</h2><h3 id=\"高阶函数\"><a href=\"#高阶函数\" class=\"headerlink\" title=\"高阶函数\"></a>高阶函数</h3><p>在python中函数也是被视为对象的，可以作为参数传递</p>\n<h5 id=\"示例1\"><a href=\"#示例1\" class=\"headerlink\" title=\"示例1\"></a>示例1</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">square</span>(<span class=\"params\">n</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n * n</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>(<span class=\"params\">a, b, fun</span>):</span><br><span class=\"line\">    res = fun(a) + fun(b)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(func(<span class=\"number\">2</span>, <span class=\"number\">3</span>, square))    <span class=\"comment\"># 函数square作为函数传入到函数func中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 结果：13</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"示例2\"><a href=\"#示例2\" class=\"headerlink\" title=\"示例2\"></a>示例2</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sub</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a - b</span><br><span class=\"line\"></span><br><span class=\"line\">funcs = [add, sub]  <span class=\"comment\"># 函数作为列表成员方便调用</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(funcs[<span class=\"number\">0</span>](<span class=\"number\">1</span>, <span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(funcs[<span class=\"number\">1</span>](<span class=\"number\">1</span>, <span class=\"number\">2</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 结果：3，-1</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"闭包函数\"><a href=\"#闭包函数\" class=\"headerlink\" title=\"闭包函数\"></a>闭包函数</h3><p>声明在一个函数种的函数被称为闭包函数，它可以访问其所在外部函数的参数和变量。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">outer</span>():</span><br><span class=\"line\">    x = <span class=\"number\">5</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>():</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(x)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> inner</span><br><span class=\"line\"></span><br><span class=\"line\">outer()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 结果是 5 ,内部函数inner引用外部函数的变量   </span></span><br><span class=\"line\"><span class=\"comment\"># inner()函数就是一个闭包</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2、简单的装饰器示例\"><a href=\"#2、简单的装饰器示例\" class=\"headerlink\" title=\"2、简单的装饰器示例\"></a>2、简单的装饰器示例</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">calc_spend_time</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    description: </span></span><br><span class=\"line\"><span class=\"string\">    一个监测程序运行的装饰器函数。在不改动原业务函数的情况下，增添其功能。    </span></span><br><span class=\"line\"><span class=\"string\">    输入一个函数，即参数为业务函数  </span></span><br><span class=\"line\"><span class=\"string\">    返回一个函数，即新建的内部闭包函数（装饰过的函数）  </span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">wrapper</span>():</span><br><span class=\"line\">        <span class=\"comment\"># 调用前的操作</span></span><br><span class=\"line\">        start = time.time()</span><br><span class=\"line\">        <span class=\"comment\"># 调用业务函数   </span></span><br><span class=\"line\">        func()</span><br><span class=\"line\">        <span class=\"comment\"># 调用后的操作 </span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;<span class=\"subst\">&#123;func&#125;</span> is called&#x27;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(func.__name__ + <span class=\"string\">&#x27;() start&#x27;</span>)</span><br><span class=\"line\">        end = time.time()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;用时&#123;:.5f&#125;秒&#x27;</span>.<span class=\"built_in\">format</span>(end-start))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapper  <span class=\"comment\">#返回装饰后的闭包函数   </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@calc_spend_time  </span><span class=\"comment\"># 语法糖，相当于hello = decorator(hello)  </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;hello world!&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    hello()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># hello world!     </span></span><br><span class=\"line\"><span class=\"comment\"># &lt;function hello at 0x01F2ED18&gt; is called    </span></span><br><span class=\"line\"><span class=\"comment\"># hello() start    </span></span><br><span class=\"line\"><span class=\"comment\"># 用时0.00099秒   </span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-业务函数带参数\"><a href=\"#3-业务函数带参数\" class=\"headerlink\" title=\"3. 业务函数带参数\"></a>3. 业务函数带参数</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">decorator</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    description: 记录日志的装饰器函数。</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">wrapper</span>(<span class=\"params\">*args, **kwargs</span>):</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        业务函数的参数通过wrapper的函数来传递  </span></span><br><span class=\"line\"><span class=\"string\">        返回值通过wrapper的返回值返回   </span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        value = func(*args, **kwargs)  <span class=\"comment\"># 记录业务函数返回值   </span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;<span class=\"subst\">&#123;func&#125;</span> is called with arguments = <span class=\"subst\">&#123;args&#125;</span> and kwargs = <span class=\"subst\">&#123;kwargs&#125;</span>&#x27;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;<span class=\"subst\">&#123;func&#125;</span> return value <span class=\"subst\">&#123;value&#125;</span>&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value  <span class=\"comment\"># 返回业务函数的返回值  </span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapper</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@decorator  </span><span class=\"comment\"># 语法糖，相当于hello = decorator(hello)   </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func1</span>(<span class=\"params\">*args, **kwargs</span>):</span><br><span class=\"line\">    <span class=\"built_in\">sum</span> = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> args:</span><br><span class=\"line\">        <span class=\"built_in\">sum</span> += num</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;args = <span class=\"subst\">&#123;args&#125;</span>, kwargs = <span class=\"subst\">&#123;kwargs&#125;</span>&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">sum</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    func1(<span class=\"number\">1</span>, <span class=\"number\">2</span>, c=<span class=\"number\">3</span>, d=<span class=\"number\">4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># args = (1, 2), kwargs = &#123;&#x27;c&#x27;: 3, &#x27;d&#x27;: 4&#125;   </span></span><br><span class=\"line\"><span class=\"comment\"># &lt;function func1 at 0x013DED18&gt; is called with arguments = (1, 2) and kwargs = &#123;&#x27;c&#x27;: 3, &#x27;d&#x27;: 4&#125;    </span></span><br><span class=\"line\"><span class=\"comment\"># &lt;function func1 at 0x013DED18&gt; return value 3   </span></span><br></pre></td></tr></table></figure>\n\n<p>参数<code>*args</code>用来发送一个非键值对的<strong>可变数量的参数列表</strong>给一个函数，可看作<code>tuple</code><br><code>参数**kwargs</code>允许你将不定长度的<strong>键值对</strong>作为参数传递给一个函数，可看作<code>dict</code></p>\n<h2 id=\"4-装饰器带参数\"><a href=\"#4-装饰器带参数\" class=\"headerlink\" title=\"4. 装饰器带参数\"></a>4. 装饰器带参数</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">outer</span>(<span class=\"params\">author</span>):  <span class=\"comment\"># 再套一层，传入装饰器的参数   </span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">middle</span>(<span class=\"params\">func</span>): <span class=\"comment\"># 中间层传入业务函数</span></span><br><span class=\"line\">        <span class=\"keyword\">def</span> <span class=\"title function_\">wrapper</span>(<span class=\"params\">*args, **kwargs</span>):</span><br><span class=\"line\">            value = func(*args, **kwargs)  <span class=\"comment\"># 记录业务函数返回值</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;author: &#x27;</span>, author,</span><br><span class=\"line\">                  <span class=\"string\">f&#x27;\\n<span class=\"subst\">&#123;func&#125;</span> is called with arguments = <span class=\"subst\">&#123;args&#125;</span> and kwargs = <span class=\"subst\">&#123;kwargs&#125;</span>&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"string\">f&#x27;\\nreturn value: <span class=\"subst\">&#123;value&#125;</span>&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> value   <span class=\"comment\"># 返回业务函数的返回值</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> wrapper</span><br><span class=\"line\">    <span class=\"keyword\">return</span> middle</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># @outer(&#x27;lei&#x27;)  # 语法糖，相当于func1 = outer(&#x27;lei&#x27;)(func1)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func1</span>(<span class=\"params\">*args, **kwargs</span>):</span><br><span class=\"line\">    <span class=\"built_in\">sum</span> = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> args:</span><br><span class=\"line\">        <span class=\"built_in\">sum</span> += num</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">sum</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    func1 = outer(<span class=\"string\">&#x27;lei&#x27;</span>)(func1)</span><br><span class=\"line\">    func1(<span class=\"number\">1</span>, <span class=\"number\">2</span>, c=<span class=\"number\">3</span>, d=<span class=\"number\">4</span>)</span><br><span class=\"line\">    <span class=\"comment\"># # 不用语法糖等价1：</span></span><br><span class=\"line\">    <span class=\"comment\"># func1 = outer(&#x27;lei&#x27;)(func1)</span></span><br><span class=\"line\">    <span class=\"comment\"># func1(1, 2, c=3, d=4)</span></span><br><span class=\"line\">    <span class=\"comment\"># # 不用语法糖等价2：</span></span><br><span class=\"line\">    <span class=\"comment\"># func1 = outer(&#x27;lei&#x27;)(func1)(1, 2, c=3, d=4)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出结果：</span></span><br><span class=\"line\"><span class=\"comment\"># author:  lei</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;function func1 at 0x0192EE38&gt; is called with arguments = (1, 2) and kwargs = &#123;&#x27;c&#x27;: 3, &#x27;d&#x27;: 4&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># return value: 3</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"<h1 id=\"python装饰器\"><a href=\"#python装饰器\" class=\"headerlink\" title=\"python装饰器\"></a>python装饰器</h1><p>装饰器，在不改变原函数的情况下，为其增强功能。</p>","more":"<h2 id=\"1-前置知识\"><a href=\"#1-前置知识\" class=\"headerlink\" title=\"1. 前置知识\"></a>1. 前置知识</h2><h3 id=\"高阶函数\"><a href=\"#高阶函数\" class=\"headerlink\" title=\"高阶函数\"></a>高阶函数</h3><p>在python中函数也是被视为对象的，可以作为参数传递</p>\n<h5 id=\"示例1\"><a href=\"#示例1\" class=\"headerlink\" title=\"示例1\"></a>示例1</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">square</span>(<span class=\"params\">n</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n * n</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>(<span class=\"params\">a, b, fun</span>):</span><br><span class=\"line\">    res = fun(a) + fun(b)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(func(<span class=\"number\">2</span>, <span class=\"number\">3</span>, square))    <span class=\"comment\"># 函数square作为函数传入到函数func中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 结果：13</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"示例2\"><a href=\"#示例2\" class=\"headerlink\" title=\"示例2\"></a>示例2</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sub</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a - b</span><br><span class=\"line\"></span><br><span class=\"line\">funcs = [add, sub]  <span class=\"comment\"># 函数作为列表成员方便调用</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(funcs[<span class=\"number\">0</span>](<span class=\"number\">1</span>, <span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(funcs[<span class=\"number\">1</span>](<span class=\"number\">1</span>, <span class=\"number\">2</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 结果：3，-1</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"闭包函数\"><a href=\"#闭包函数\" class=\"headerlink\" title=\"闭包函数\"></a>闭包函数</h3><p>声明在一个函数种的函数被称为闭包函数，它可以访问其所在外部函数的参数和变量。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">outer</span>():</span><br><span class=\"line\">    x = <span class=\"number\">5</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">inner</span>():</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(x)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> inner</span><br><span class=\"line\"></span><br><span class=\"line\">outer()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 结果是 5 ,内部函数inner引用外部函数的变量   </span></span><br><span class=\"line\"><span class=\"comment\"># inner()函数就是一个闭包</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2、简单的装饰器示例\"><a href=\"#2、简单的装饰器示例\" class=\"headerlink\" title=\"2、简单的装饰器示例\"></a>2、简单的装饰器示例</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">calc_spend_time</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    description: </span></span><br><span class=\"line\"><span class=\"string\">    一个监测程序运行的装饰器函数。在不改动原业务函数的情况下，增添其功能。    </span></span><br><span class=\"line\"><span class=\"string\">    输入一个函数，即参数为业务函数  </span></span><br><span class=\"line\"><span class=\"string\">    返回一个函数，即新建的内部闭包函数（装饰过的函数）  </span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">wrapper</span>():</span><br><span class=\"line\">        <span class=\"comment\"># 调用前的操作</span></span><br><span class=\"line\">        start = time.time()</span><br><span class=\"line\">        <span class=\"comment\"># 调用业务函数   </span></span><br><span class=\"line\">        func()</span><br><span class=\"line\">        <span class=\"comment\"># 调用后的操作 </span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;<span class=\"subst\">&#123;func&#125;</span> is called&#x27;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(func.__name__ + <span class=\"string\">&#x27;() start&#x27;</span>)</span><br><span class=\"line\">        end = time.time()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;用时&#123;:.5f&#125;秒&#x27;</span>.<span class=\"built_in\">format</span>(end-start))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapper  <span class=\"comment\">#返回装饰后的闭包函数   </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@calc_spend_time  </span><span class=\"comment\"># 语法糖，相当于hello = decorator(hello)  </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;hello world!&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    hello()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># hello world!     </span></span><br><span class=\"line\"><span class=\"comment\"># &lt;function hello at 0x01F2ED18&gt; is called    </span></span><br><span class=\"line\"><span class=\"comment\"># hello() start    </span></span><br><span class=\"line\"><span class=\"comment\"># 用时0.00099秒   </span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-业务函数带参数\"><a href=\"#3-业务函数带参数\" class=\"headerlink\" title=\"3. 业务函数带参数\"></a>3. 业务函数带参数</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">decorator</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    description: 记录日志的装饰器函数。</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">wrapper</span>(<span class=\"params\">*args, **kwargs</span>):</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        业务函数的参数通过wrapper的函数来传递  </span></span><br><span class=\"line\"><span class=\"string\">        返回值通过wrapper的返回值返回   </span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        value = func(*args, **kwargs)  <span class=\"comment\"># 记录业务函数返回值   </span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;<span class=\"subst\">&#123;func&#125;</span> is called with arguments = <span class=\"subst\">&#123;args&#125;</span> and kwargs = <span class=\"subst\">&#123;kwargs&#125;</span>&#x27;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;<span class=\"subst\">&#123;func&#125;</span> return value <span class=\"subst\">&#123;value&#125;</span>&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value  <span class=\"comment\"># 返回业务函数的返回值  </span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapper</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@decorator  </span><span class=\"comment\"># 语法糖，相当于hello = decorator(hello)   </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func1</span>(<span class=\"params\">*args, **kwargs</span>):</span><br><span class=\"line\">    <span class=\"built_in\">sum</span> = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> args:</span><br><span class=\"line\">        <span class=\"built_in\">sum</span> += num</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;args = <span class=\"subst\">&#123;args&#125;</span>, kwargs = <span class=\"subst\">&#123;kwargs&#125;</span>&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">sum</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    func1(<span class=\"number\">1</span>, <span class=\"number\">2</span>, c=<span class=\"number\">3</span>, d=<span class=\"number\">4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># args = (1, 2), kwargs = &#123;&#x27;c&#x27;: 3, &#x27;d&#x27;: 4&#125;   </span></span><br><span class=\"line\"><span class=\"comment\"># &lt;function func1 at 0x013DED18&gt; is called with arguments = (1, 2) and kwargs = &#123;&#x27;c&#x27;: 3, &#x27;d&#x27;: 4&#125;    </span></span><br><span class=\"line\"><span class=\"comment\"># &lt;function func1 at 0x013DED18&gt; return value 3   </span></span><br></pre></td></tr></table></figure>\n\n<p>参数<code>*args</code>用来发送一个非键值对的<strong>可变数量的参数列表</strong>给一个函数，可看作<code>tuple</code><br><code>参数**kwargs</code>允许你将不定长度的<strong>键值对</strong>作为参数传递给一个函数，可看作<code>dict</code></p>\n<h2 id=\"4-装饰器带参数\"><a href=\"#4-装饰器带参数\" class=\"headerlink\" title=\"4. 装饰器带参数\"></a>4. 装饰器带参数</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">outer</span>(<span class=\"params\">author</span>):  <span class=\"comment\"># 再套一层，传入装饰器的参数   </span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">middle</span>(<span class=\"params\">func</span>): <span class=\"comment\"># 中间层传入业务函数</span></span><br><span class=\"line\">        <span class=\"keyword\">def</span> <span class=\"title function_\">wrapper</span>(<span class=\"params\">*args, **kwargs</span>):</span><br><span class=\"line\">            value = func(*args, **kwargs)  <span class=\"comment\"># 记录业务函数返回值</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;author: &#x27;</span>, author,</span><br><span class=\"line\">                  <span class=\"string\">f&#x27;\\n<span class=\"subst\">&#123;func&#125;</span> is called with arguments = <span class=\"subst\">&#123;args&#125;</span> and kwargs = <span class=\"subst\">&#123;kwargs&#125;</span>&#x27;</span>,</span><br><span class=\"line\">                  <span class=\"string\">f&#x27;\\nreturn value: <span class=\"subst\">&#123;value&#125;</span>&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> value   <span class=\"comment\"># 返回业务函数的返回值</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> wrapper</span><br><span class=\"line\">    <span class=\"keyword\">return</span> middle</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># @outer(&#x27;lei&#x27;)  # 语法糖，相当于func1 = outer(&#x27;lei&#x27;)(func1)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func1</span>(<span class=\"params\">*args, **kwargs</span>):</span><br><span class=\"line\">    <span class=\"built_in\">sum</span> = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> args:</span><br><span class=\"line\">        <span class=\"built_in\">sum</span> += num</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">sum</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    func1 = outer(<span class=\"string\">&#x27;lei&#x27;</span>)(func1)</span><br><span class=\"line\">    func1(<span class=\"number\">1</span>, <span class=\"number\">2</span>, c=<span class=\"number\">3</span>, d=<span class=\"number\">4</span>)</span><br><span class=\"line\">    <span class=\"comment\"># # 不用语法糖等价1：</span></span><br><span class=\"line\">    <span class=\"comment\"># func1 = outer(&#x27;lei&#x27;)(func1)</span></span><br><span class=\"line\">    <span class=\"comment\"># func1(1, 2, c=3, d=4)</span></span><br><span class=\"line\">    <span class=\"comment\"># # 不用语法糖等价2：</span></span><br><span class=\"line\">    <span class=\"comment\"># func1 = outer(&#x27;lei&#x27;)(func1)(1, 2, c=3, d=4)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出结果：</span></span><br><span class=\"line\"><span class=\"comment\"># author:  lei</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;function func1 at 0x0192EE38&gt; is called with arguments = (1, 2) and kwargs = &#123;&#x27;c&#x27;: 3, &#x27;d&#x27;: 4&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># return value: 3</span></span><br></pre></td></tr></table></figure>\n\n<hr>"},{"layout":"post","title":"【口琴】《单簧管波尔卡》","date":"2021-03-13T16:00:00.000Z","author":"LW","header-img":"img/post-bg-kqj.jpg","catalog":true,"_content":"\n# 《单簧管波尔卡》\n\n推荐樱之音的重奏版本，也是我入坑的版本。请欣赏~\n\n<iframe  height=198     width=352  src=\"//player.bilibili.com/player.html?aid=35720317&bvid=BV1ft411m78S&cid=62659416&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<!--more-->\n\n第一个谱子是主旋律谱，后两个是网上搜到的作为和弦和贝斯声部的参考，个人觉得三重奏即可。\n\n![《单簧管波尔卡》](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/9adb5389fe42d8dd.png \"《单簧管波尔卡》口琴版主旋律谱\")\n\n<center>《单簧管波尔卡》口琴版主旋律谱\n</center>\n\n![《单簧管波尔卡》](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/50dfc56b8e2a3641.png \"《单簧管波尔卡》口琴三重奏谱（供参考）\")\n\n<center>《单簧管波尔卡》口琴三重奏谱（供参考）\n</center>\n\n![《单簧管波尔卡》](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/bf230edd58064f2a.png \"《单簧管波尔卡》口琴四重奏谱（供参考）\")\n\n<center>《单簧管波尔卡》口琴四重奏谱（供参考）\n</center>\n","source":"_posts/2021-03-14-【口琴】《单簧管波尔卡》.md","raw":"---\nlayout:     post\ntitle:      【口琴】《单簧管波尔卡》\ndate:       2021-3-14\nauthor:     LW\nheader-img: img/post-bg-kqj.jpg\ncatalog: true\ntags: \n    - music\n    - 口琴\ncategories: \n    - 收藏\n    - music\n---\n\n# 《单簧管波尔卡》\n\n推荐樱之音的重奏版本，也是我入坑的版本。请欣赏~\n\n<iframe  height=198     width=352  src=\"//player.bilibili.com/player.html?aid=35720317&bvid=BV1ft411m78S&cid=62659416&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<!--more-->\n\n第一个谱子是主旋律谱，后两个是网上搜到的作为和弦和贝斯声部的参考，个人觉得三重奏即可。\n\n![《单簧管波尔卡》](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/9adb5389fe42d8dd.png \"《单簧管波尔卡》口琴版主旋律谱\")\n\n<center>《单簧管波尔卡》口琴版主旋律谱\n</center>\n\n![《单簧管波尔卡》](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/50dfc56b8e2a3641.png \"《单簧管波尔卡》口琴三重奏谱（供参考）\")\n\n<center>《单簧管波尔卡》口琴三重奏谱（供参考）\n</center>\n\n![《单簧管波尔卡》](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/bf230edd58064f2a.png \"《单簧管波尔卡》口琴四重奏谱（供参考）\")\n\n<center>《单簧管波尔卡》口琴四重奏谱（供参考）\n</center>\n","slug":"2021-03-14-【口琴】《单簧管波尔卡》","published":1,"updated":"2022-03-21T09:20:47.000Z","comments":1,"photos":[],"link":"","_id":"cl792rm0q0009tkin3yi69slf","content":"<h1 id=\"《单簧管波尔卡》\"><a href=\"#《单簧管波尔卡》\" class=\"headerlink\" title=\"《单簧管波尔卡》\"></a>《单簧管波尔卡》</h1><p>推荐樱之音的重奏版本，也是我入坑的版本。请欣赏~</p>\n<iframe  height=198     width=352  src=\"//player.bilibili.com/player.html?aid=35720317&bvid=BV1ft411m78S&cid=62659416&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<span id=\"more\"></span>\n\n<p>第一个谱子是主旋律谱，后两个是网上搜到的作为和弦和贝斯声部的参考，个人觉得三重奏即可。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/9adb5389fe42d8dd.png\"\n                      alt=\"《单簧管波尔卡》\" title=\"《单簧管波尔卡》口琴版主旋律谱\"\n                ></p>\n<center>《单簧管波尔卡》口琴版主旋律谱\n</center>\n\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/50dfc56b8e2a3641.png\"\n                      alt=\"《单簧管波尔卡》\" title=\"《单簧管波尔卡》口琴三重奏谱（供参考）\"\n                ></p>\n<center>《单簧管波尔卡》口琴三重奏谱（供参考）\n</center>\n\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/bf230edd58064f2a.png\"\n                      alt=\"《单簧管波尔卡》\" title=\"《单簧管波尔卡》口琴四重奏谱（供参考）\"\n                ></p>\n<center>《单簧管波尔卡》口琴四重奏谱（供参考）\n</center>\n","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"<h1 id=\"《单簧管波尔卡》\"><a href=\"#《单簧管波尔卡》\" class=\"headerlink\" title=\"《单簧管波尔卡》\"></a>《单簧管波尔卡》</h1><p>推荐樱之音的重奏版本，也是我入坑的版本。请欣赏~</p>\n<iframe  height=198     width=352  src=\"//player.bilibili.com/player.html?aid=35720317&bvid=BV1ft411m78S&cid=62659416&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>","more":"<p>第一个谱子是主旋律谱，后两个是网上搜到的作为和弦和贝斯声部的参考，个人觉得三重奏即可。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/9adb5389fe42d8dd.png\"\n                      alt=\"《单簧管波尔卡》\" title=\"《单簧管波尔卡》口琴版主旋律谱\"\n                ></p>\n<center>《单簧管波尔卡》口琴版主旋律谱\n</center>\n\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/50dfc56b8e2a3641.png\"\n                      alt=\"《单簧管波尔卡》\" title=\"《单簧管波尔卡》口琴三重奏谱（供参考）\"\n                ></p>\n<center>《单簧管波尔卡》口琴三重奏谱（供参考）\n</center>\n\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/bf230edd58064f2a.png\"\n                      alt=\"《单簧管波尔卡》\" title=\"《单簧管波尔卡》口琴四重奏谱（供参考）\"\n                ></p>\n<center>《单簧管波尔卡》口琴四重奏谱（供参考）\n</center>"},{"layout":"post","title":"我被催更了","subtitle":"多写写多写写","date":"2021-03-12T16:00:00.000Z","author":"LW","header-img":"img/post-bg-yellowman.jpg","catalog":true,"_content":"# 催更\n\n被催更了，不是别人，是被我自己催更了。建了个网站，买了个域名没多久，还清晰记得之前计划写博客时的雄心壮志，现在已经有一些时日没写作更新了，日日烦恼着该放些什么东西上去，也算是体会了一把内容创作者的不易。\n\n是有尝试过一些话题，写过几篇，有输出内心思考讲道理的，可到头来发现把内心所想写出，只是寥寥几句结论性的文字而已，短时间很难严谨地把前因后果理顺。自己从头读一遍，会发现缺少铺垫、逻辑不顺，毫无阅读性可言，真要写成一篇的话需要时间打磨。\n\n尝试过抒发内心情感的，可写到一半发现我的心中所想或许并不需要别人知道，我并没有强烈向他人倾诉的需求，别人知道了大概率也只有反面效果，或者从来就对我的想法没什么兴趣，索性搁笔，存做草稿收存。\n\n想过记录日常，但是大多数时间的日常都是很平淡的重复的事情，记流水账展示出来？完全没有必要。\n\n尝试用markdown做笔记写了一些了，真的很适合做编程笔记。但是笔记这种东西主观性很强，做笔记的过程也就是学习整理的过程，别人的笔记——特别是零散的笔记，并没有什么价值。反而若是系统性的知识框架则非常有用，若是有合适的会展示出来。\n\n<!--more-->\n\n# 接下来的计划\n\n接下来计划尝试多写，让自己习惯写作，内容依旧不定，但会尽量使内容完整，零散的草稿多了，整合时相互补全也就完整了。\n\n网站作为一个展示平台，与QQ空间、朋友圈之类的相比优点在于，更适合大段内容的展示以及更好的展示效果。所以可能会写一些需要给别人看的东西，到时候扔一个网址过去就好。\n\n另外今天看到了一些老照片，改天会根据照片回想一下有什么有意思的事情记录下来。有意思的事情还是很多的，不过这个就真得看心情写了。\n","source":"_posts/2021-03-14-催更.md","raw":"---\nlayout:     post\ntitle:      我被催更了\nsubtitle:   多写写多写写\ndate:       2021-3-13\nauthor:     LW\nheader-img: img/post-bg-yellowman.jpg\ncatalog: true\ntags: 记录\ncategories: \n    - 记录\n---\n# 催更\n\n被催更了，不是别人，是被我自己催更了。建了个网站，买了个域名没多久，还清晰记得之前计划写博客时的雄心壮志，现在已经有一些时日没写作更新了，日日烦恼着该放些什么东西上去，也算是体会了一把内容创作者的不易。\n\n是有尝试过一些话题，写过几篇，有输出内心思考讲道理的，可到头来发现把内心所想写出，只是寥寥几句结论性的文字而已，短时间很难严谨地把前因后果理顺。自己从头读一遍，会发现缺少铺垫、逻辑不顺，毫无阅读性可言，真要写成一篇的话需要时间打磨。\n\n尝试过抒发内心情感的，可写到一半发现我的心中所想或许并不需要别人知道，我并没有强烈向他人倾诉的需求，别人知道了大概率也只有反面效果，或者从来就对我的想法没什么兴趣，索性搁笔，存做草稿收存。\n\n想过记录日常，但是大多数时间的日常都是很平淡的重复的事情，记流水账展示出来？完全没有必要。\n\n尝试用markdown做笔记写了一些了，真的很适合做编程笔记。但是笔记这种东西主观性很强，做笔记的过程也就是学习整理的过程，别人的笔记——特别是零散的笔记，并没有什么价值。反而若是系统性的知识框架则非常有用，若是有合适的会展示出来。\n\n<!--more-->\n\n# 接下来的计划\n\n接下来计划尝试多写，让自己习惯写作，内容依旧不定，但会尽量使内容完整，零散的草稿多了，整合时相互补全也就完整了。\n\n网站作为一个展示平台，与QQ空间、朋友圈之类的相比优点在于，更适合大段内容的展示以及更好的展示效果。所以可能会写一些需要给别人看的东西，到时候扔一个网址过去就好。\n\n另外今天看到了一些老照片，改天会根据照片回想一下有什么有意思的事情记录下来。有意思的事情还是很多的，不过这个就真得看心情写了。\n","slug":"2021-03-14-催更","published":1,"updated":"2022-03-21T09:22:17.000Z","comments":1,"photos":[],"link":"","_id":"cl792rm0s000btkin4fu536gn","content":"<h1 id=\"催更\"><a href=\"#催更\" class=\"headerlink\" title=\"催更\"></a>催更</h1><p>被催更了，不是别人，是被我自己催更了。建了个网站，买了个域名没多久，还清晰记得之前计划写博客时的雄心壮志，现在已经有一些时日没写作更新了，日日烦恼着该放些什么东西上去，也算是体会了一把内容创作者的不易。</p>\n<p>是有尝试过一些话题，写过几篇，有输出内心思考讲道理的，可到头来发现把内心所想写出，只是寥寥几句结论性的文字而已，短时间很难严谨地把前因后果理顺。自己从头读一遍，会发现缺少铺垫、逻辑不顺，毫无阅读性可言，真要写成一篇的话需要时间打磨。</p>\n<p>尝试过抒发内心情感的，可写到一半发现我的心中所想或许并不需要别人知道，我并没有强烈向他人倾诉的需求，别人知道了大概率也只有反面效果，或者从来就对我的想法没什么兴趣，索性搁笔，存做草稿收存。</p>\n<p>想过记录日常，但是大多数时间的日常都是很平淡的重复的事情，记流水账展示出来？完全没有必要。</p>\n<p>尝试用markdown做笔记写了一些了，真的很适合做编程笔记。但是笔记这种东西主观性很强，做笔记的过程也就是学习整理的过程，别人的笔记——特别是零散的笔记，并没有什么价值。反而若是系统性的知识框架则非常有用，若是有合适的会展示出来。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"接下来的计划\"><a href=\"#接下来的计划\" class=\"headerlink\" title=\"接下来的计划\"></a>接下来的计划</h1><p>接下来计划尝试多写，让自己习惯写作，内容依旧不定，但会尽量使内容完整，零散的草稿多了，整合时相互补全也就完整了。</p>\n<p>网站作为一个展示平台，与QQ空间、朋友圈之类的相比优点在于，更适合大段内容的展示以及更好的展示效果。所以可能会写一些需要给别人看的东西，到时候扔一个网址过去就好。</p>\n<p>另外今天看到了一些老照片，改天会根据照片回想一下有什么有意思的事情记录下来。有意思的事情还是很多的，不过这个就真得看心情写了。</p>\n","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"<h1 id=\"催更\"><a href=\"#催更\" class=\"headerlink\" title=\"催更\"></a>催更</h1><p>被催更了，不是别人，是被我自己催更了。建了个网站，买了个域名没多久，还清晰记得之前计划写博客时的雄心壮志，现在已经有一些时日没写作更新了，日日烦恼着该放些什么东西上去，也算是体会了一把内容创作者的不易。</p>\n<p>是有尝试过一些话题，写过几篇，有输出内心思考讲道理的，可到头来发现把内心所想写出，只是寥寥几句结论性的文字而已，短时间很难严谨地把前因后果理顺。自己从头读一遍，会发现缺少铺垫、逻辑不顺，毫无阅读性可言，真要写成一篇的话需要时间打磨。</p>\n<p>尝试过抒发内心情感的，可写到一半发现我的心中所想或许并不需要别人知道，我并没有强烈向他人倾诉的需求，别人知道了大概率也只有反面效果，或者从来就对我的想法没什么兴趣，索性搁笔，存做草稿收存。</p>\n<p>想过记录日常，但是大多数时间的日常都是很平淡的重复的事情，记流水账展示出来？完全没有必要。</p>\n<p>尝试用markdown做笔记写了一些了，真的很适合做编程笔记。但是笔记这种东西主观性很强，做笔记的过程也就是学习整理的过程，别人的笔记——特别是零散的笔记，并没有什么价值。反而若是系统性的知识框架则非常有用，若是有合适的会展示出来。</p>","more":"<h1 id=\"接下来的计划\"><a href=\"#接下来的计划\" class=\"headerlink\" title=\"接下来的计划\"></a>接下来的计划</h1><p>接下来计划尝试多写，让自己习惯写作，内容依旧不定，但会尽量使内容完整，零散的草稿多了，整合时相互补全也就完整了。</p>\n<p>网站作为一个展示平台，与QQ空间、朋友圈之类的相比优点在于，更适合大段内容的展示以及更好的展示效果。所以可能会写一些需要给别人看的东西，到时候扔一个网址过去就好。</p>\n<p>另外今天看到了一些老照片，改天会根据照片回想一下有什么有意思的事情记录下来。有意思的事情还是很多的，不过这个就真得看心情写了。</p>"},{"layout":"post","title":"八方旅人-踊子プリムロゼのテーマ（Break Side）","subtitle":"等待重奏改编","date":"2021-03-14T16:00:00.000Z","author":"LW","header-img":"img/post-bg-八方旅人.jpg","catalog":true,"_content":"\n\n口琴主旋律谱\n\n```\n(6)234543632321(6)\n(5)(6)(#6)(6)(#6)1234323212\n(6)234543632321(6)\n(5)(6)(#6)123456#6656\n#123456【1】632321(6)\n(5)(6)(#6)(6)(#6)1234323212\n256#6【1】#66【2】656542\n2#22#24525#665#456\n256#66554\n#22#24525#6#6【1】#66\n```\n\n附上各个版本演奏示例\n\n<!--more-->\n\n# 八方旅人 普利姆萝洁 踊子プリムロゼのテーマ\n\n# 八方旅人 - 舞娘 - 摩訶不思議の舞\n\n# 八方旅人-踊子プリムロゼのテーマ（Break Side）\n\n别名太多日文也看不懂orz，就全部列上来了嘿嘿。\n\n### 音频\n\n这个应该是原版吧。\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=865857528&auto=0&height=66\"></iframe>\n\n手风琴版真的很好听啊\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1376159751&auto=0&height=66\"></iframe>\n\n### 视频\n\n手风琴版本\n\n<iframe height=198     width=352 src=\"//player.bilibili.com/player.html?aid=57689073&bvid=BV1t4411w7Q4&cid=100695977&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n口琴版本\n<iframe height=198     width=352 src=\"//player.bilibili.com/player.html?aid=63245842&bvid=BV194411D7re&cid=109840071&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\nB站上的参考总谱，版本不太一样但问题不大。\n\n<iframe height=198     width=352 src=\"//player.bilibili.com/player.html?aid=245294939&bvid=BV18v411r7V4&cid=258481280&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>  \n\n### 谱\n\n口琴主旋律谱\n\n```\n(6)234543632321(6)\n(5)(6)(#6)(6)(#6)1234323212\n(6)234543632321(6)\n(5)(6)(#6)123456#6656\n#123456【1】632321(6)\n(5)(6)(#6)(6)(#6)1234323212\n256#6【1】#66【2】656542\n2#22#24525#665#456\n256#66554\n#22#24525#6#6【1】#66\n```\n\n最后一个视频里的谱子pdf文件请点击[这里](../../../../file/踊子プリムロゼのテーマ（Break_Side）.pdf)查看，供参考。\n\n或者点击[这里](https://maiimg.com/pdf/?e=ag8XdjcGk9uucm)查看。\n\n---\n\n### 重奏编排\n\n目前已有的资源都列出来了，等待重奏改编。（应该不咕🕊）\n","source":"_posts/2021-03-15-【曲子】八方旅人.md","raw":"---\nlayout:     post\ntitle:      八方旅人-踊子プリムロゼのテーマ（Break Side）\nsubtitle:   等待重奏改编\ndate:       2021-3-15\nauthor:     LW\nheader-img: img/post-bg-八方旅人.jpg\ncatalog: true\n\ntags: \n    - music\n    - 口琴\ncategories: \n    - 收藏\n    - music\n---\n\n\n口琴主旋律谱\n\n```\n(6)234543632321(6)\n(5)(6)(#6)(6)(#6)1234323212\n(6)234543632321(6)\n(5)(6)(#6)123456#6656\n#123456【1】632321(6)\n(5)(6)(#6)(6)(#6)1234323212\n256#6【1】#66【2】656542\n2#22#24525#665#456\n256#66554\n#22#24525#6#6【1】#66\n```\n\n附上各个版本演奏示例\n\n<!--more-->\n\n# 八方旅人 普利姆萝洁 踊子プリムロゼのテーマ\n\n# 八方旅人 - 舞娘 - 摩訶不思議の舞\n\n# 八方旅人-踊子プリムロゼのテーマ（Break Side）\n\n别名太多日文也看不懂orz，就全部列上来了嘿嘿。\n\n### 音频\n\n这个应该是原版吧。\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=865857528&auto=0&height=66\"></iframe>\n\n手风琴版真的很好听啊\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1376159751&auto=0&height=66\"></iframe>\n\n### 视频\n\n手风琴版本\n\n<iframe height=198     width=352 src=\"//player.bilibili.com/player.html?aid=57689073&bvid=BV1t4411w7Q4&cid=100695977&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n口琴版本\n<iframe height=198     width=352 src=\"//player.bilibili.com/player.html?aid=63245842&bvid=BV194411D7re&cid=109840071&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\nB站上的参考总谱，版本不太一样但问题不大。\n\n<iframe height=198     width=352 src=\"//player.bilibili.com/player.html?aid=245294939&bvid=BV18v411r7V4&cid=258481280&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>  \n\n### 谱\n\n口琴主旋律谱\n\n```\n(6)234543632321(6)\n(5)(6)(#6)(6)(#6)1234323212\n(6)234543632321(6)\n(5)(6)(#6)123456#6656\n#123456【1】632321(6)\n(5)(6)(#6)(6)(#6)1234323212\n256#6【1】#66【2】656542\n2#22#24525#665#456\n256#66554\n#22#24525#6#6【1】#66\n```\n\n最后一个视频里的谱子pdf文件请点击[这里](../../../../file/踊子プリムロゼのテーマ（Break_Side）.pdf)查看，供参考。\n\n或者点击[这里](https://maiimg.com/pdf/?e=ag8XdjcGk9uucm)查看。\n\n---\n\n### 重奏编排\n\n目前已有的资源都列出来了，等待重奏改编。（应该不咕🕊）\n","slug":"2021-03-15-【曲子】八方旅人","published":1,"updated":"2022-03-21T09:07:35.000Z","comments":1,"photos":[],"link":"","_id":"cl792rm0w000gtkin7psaay22","content":"<p>口琴主旋律谱</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(6)234543632321(6)</span><br><span class=\"line\">(5)(6)(#6)(6)(#6)1234323212</span><br><span class=\"line\">(6)234543632321(6)</span><br><span class=\"line\">(5)(6)(#6)123456#6656</span><br><span class=\"line\">#123456【1】632321(6)</span><br><span class=\"line\">(5)(6)(#6)(6)(#6)1234323212</span><br><span class=\"line\">256#6【1】#66【2】656542</span><br><span class=\"line\">2#22#24525#665#456</span><br><span class=\"line\">256#66554</span><br><span class=\"line\">#22#24525#6#6【1】#66</span><br></pre></td></tr></table></figure>\n\n<p>附上各个版本演奏示例</p>\n<span id=\"more\"></span>\n\n<h1 id=\"八方旅人-普利姆萝洁-踊子プリムロゼのテーマ\"><a href=\"#八方旅人-普利姆萝洁-踊子プリムロゼのテーマ\" class=\"headerlink\" title=\"八方旅人 普利姆萝洁 踊子プリムロゼのテーマ\"></a>八方旅人 普利姆萝洁 踊子プリムロゼのテーマ</h1><h1 id=\"八方旅人-舞娘-摩訶不思議の舞\"><a href=\"#八方旅人-舞娘-摩訶不思議の舞\" class=\"headerlink\" title=\"八方旅人 - 舞娘 - 摩訶不思議の舞\"></a>八方旅人 - 舞娘 - 摩訶不思議の舞</h1><h1 id=\"八方旅人-踊子プリムロゼのテーマ（Break-Side）\"><a href=\"#八方旅人-踊子プリムロゼのテーマ（Break-Side）\" class=\"headerlink\" title=\"八方旅人-踊子プリムロゼのテーマ（Break Side）\"></a>八方旅人-踊子プリムロゼのテーマ（Break Side）</h1><p>别名太多日文也看不懂orz，就全部列上来了嘿嘿。</p>\n<h3 id=\"音频\"><a href=\"#音频\" class=\"headerlink\" title=\"音频\"></a>音频</h3><p>这个应该是原版吧。</p>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=865857528&auto=0&height=66\"></iframe>\n\n<p>手风琴版真的很好听啊</p>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1376159751&auto=0&height=66\"></iframe>\n\n<h3 id=\"视频\"><a href=\"#视频\" class=\"headerlink\" title=\"视频\"></a>视频</h3><p>手风琴版本</p>\n<iframe height=198     width=352 src=\"//player.bilibili.com/player.html?aid=57689073&bvid=BV1t4411w7Q4&cid=100695977&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<p>口琴版本</p>\n<iframe height=198     width=352 src=\"//player.bilibili.com/player.html?aid=63245842&bvid=BV194411D7re&cid=109840071&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<p>B站上的参考总谱，版本不太一样但问题不大。</p>\n<iframe height=198     width=352 src=\"//player.bilibili.com/player.html?aid=245294939&bvid=BV18v411r7V4&cid=258481280&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>  \n\n<h3 id=\"谱\"><a href=\"#谱\" class=\"headerlink\" title=\"谱\"></a>谱</h3><p>口琴主旋律谱</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(6)234543632321(6)</span><br><span class=\"line\">(5)(6)(#6)(6)(#6)1234323212</span><br><span class=\"line\">(6)234543632321(6)</span><br><span class=\"line\">(5)(6)(#6)123456#6656</span><br><span class=\"line\">#123456【1】632321(6)</span><br><span class=\"line\">(5)(6)(#6)(6)(#6)1234323212</span><br><span class=\"line\">256#6【1】#66【2】656542</span><br><span class=\"line\">2#22#24525#665#456</span><br><span class=\"line\">256#66554</span><br><span class=\"line\">#22#24525#6#6【1】#66</span><br></pre></td></tr></table></figure>\n\n<p>最后一个视频里的谱子pdf文件请点击<a href=\"../../../../file/%E8%B8%8A%E5%AD%90%E3%83%97%E3%83%AA%E3%83%A0%E3%83%AD%E3%82%BC%E3%81%AE%E3%83%86%E3%83%BC%E3%83%9E%EF%BC%88Break_Side%EF%BC%89.pdf\">这里</a>查看，供参考。</p>\n<p>或者点击<a class=\"link\"   href=\"https://maiimg.com/pdf/?e=ag8XdjcGk9uucm\" >这里<i class=\"fas fa-external-link-alt\"></i></a>查看。</p>\n<hr>\n<h3 id=\"重奏编排\"><a href=\"#重奏编排\" class=\"headerlink\" title=\"重奏编排\"></a>重奏编排</h3><p>目前已有的资源都列出来了，等待重奏改编。（应该不咕🕊）</p>\n","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"<p>口琴主旋律谱</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(6)234543632321(6)</span><br><span class=\"line\">(5)(6)(#6)(6)(#6)1234323212</span><br><span class=\"line\">(6)234543632321(6)</span><br><span class=\"line\">(5)(6)(#6)123456#6656</span><br><span class=\"line\">#123456【1】632321(6)</span><br><span class=\"line\">(5)(6)(#6)(6)(#6)1234323212</span><br><span class=\"line\">256#6【1】#66【2】656542</span><br><span class=\"line\">2#22#24525#665#456</span><br><span class=\"line\">256#66554</span><br><span class=\"line\">#22#24525#6#6【1】#66</span><br></pre></td></tr></table></figure>\n\n<p>附上各个版本演奏示例</p>","more":"<h1 id=\"八方旅人-普利姆萝洁-踊子プリムロゼのテーマ\"><a href=\"#八方旅人-普利姆萝洁-踊子プリムロゼのテーマ\" class=\"headerlink\" title=\"八方旅人 普利姆萝洁 踊子プリムロゼのテーマ\"></a>八方旅人 普利姆萝洁 踊子プリムロゼのテーマ</h1><h1 id=\"八方旅人-舞娘-摩訶不思議の舞\"><a href=\"#八方旅人-舞娘-摩訶不思議の舞\" class=\"headerlink\" title=\"八方旅人 - 舞娘 - 摩訶不思議の舞\"></a>八方旅人 - 舞娘 - 摩訶不思議の舞</h1><h1 id=\"八方旅人-踊子プリムロゼのテーマ（Break-Side）\"><a href=\"#八方旅人-踊子プリムロゼのテーマ（Break-Side）\" class=\"headerlink\" title=\"八方旅人-踊子プリムロゼのテーマ（Break Side）\"></a>八方旅人-踊子プリムロゼのテーマ（Break Side）</h1><p>别名太多日文也看不懂orz，就全部列上来了嘿嘿。</p>\n<h3 id=\"音频\"><a href=\"#音频\" class=\"headerlink\" title=\"音频\"></a>音频</h3><p>这个应该是原版吧。</p>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=865857528&auto=0&height=66\"></iframe>\n\n<p>手风琴版真的很好听啊</p>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1376159751&auto=0&height=66\"></iframe>\n\n<h3 id=\"视频\"><a href=\"#视频\" class=\"headerlink\" title=\"视频\"></a>视频</h3><p>手风琴版本</p>\n<iframe height=198     width=352 src=\"//player.bilibili.com/player.html?aid=57689073&bvid=BV1t4411w7Q4&cid=100695977&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<p>口琴版本</p>\n<iframe height=198     width=352 src=\"//player.bilibili.com/player.html?aid=63245842&bvid=BV194411D7re&cid=109840071&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<p>B站上的参考总谱，版本不太一样但问题不大。</p>\n<iframe height=198     width=352 src=\"//player.bilibili.com/player.html?aid=245294939&bvid=BV18v411r7V4&cid=258481280&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>  \n\n<h3 id=\"谱\"><a href=\"#谱\" class=\"headerlink\" title=\"谱\"></a>谱</h3><p>口琴主旋律谱</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(6)234543632321(6)</span><br><span class=\"line\">(5)(6)(#6)(6)(#6)1234323212</span><br><span class=\"line\">(6)234543632321(6)</span><br><span class=\"line\">(5)(6)(#6)123456#6656</span><br><span class=\"line\">#123456【1】632321(6)</span><br><span class=\"line\">(5)(6)(#6)(6)(#6)1234323212</span><br><span class=\"line\">256#6【1】#66【2】656542</span><br><span class=\"line\">2#22#24525#665#456</span><br><span class=\"line\">256#66554</span><br><span class=\"line\">#22#24525#6#6【1】#66</span><br></pre></td></tr></table></figure>\n\n<p>最后一个视频里的谱子pdf文件请点击<a href=\"../../../../file/%E8%B8%8A%E5%AD%90%E3%83%97%E3%83%AA%E3%83%A0%E3%83%AD%E3%82%BC%E3%81%AE%E3%83%86%E3%83%BC%E3%83%9E%EF%BC%88Break_Side%EF%BC%89.pdf\">这里</a>查看，供参考。</p>\n<p>或者点击<a class=\"link\"   href=\"https://maiimg.com/pdf/?e=ag8XdjcGk9uucm\" >这里<i class=\"fas fa-external-link-alt\"></i></a>查看。</p>\n<hr>\n<h3 id=\"重奏编排\"><a href=\"#重奏编排\" class=\"headerlink\" title=\"重奏编排\"></a>重奏编排</h3><p>目前已有的资源都列出来了，等待重奏改编。（应该不咕🕊）</p>"},{"layout":"post","title":"记这两周折腾博客的经历","date":"2021-03-19T16:00:00.000Z","author":"LW","header-img":"img/post-bg-Sakura.jpg","catalog":true,"_content":"\n\n>希望在这时候并不是个好东西，它让我每次在快要放弃的时候，给我一点成就感和坚持下去的信念，让我顺着好奇心和侥幸心理的驱使，在这条看不到前方的路上继续摸索前行——纵使一路荆棘伤痕累累。直到像这次一样撞上南墙，亦或是失足掉下深渊。  \n\n# 记这两周折腾博客的经历\n\n过去的两周里我开始疯狂沉迷于搭建博客，其实这个想法很早之前就有了，想整的时候没时间，有空的时候又太懒。。。所以一直往后拖，到现在终于做了出来。做出来之后写了四篇吧，也没写很多的内容，然后就对搭博客本身的技术起了浓厚的兴趣，从此开始了为期两周多的踩坑之旅。\n\n<!--more-->\n\n## 起初\n\n起初是看到一个教程，教怎么利用GitHub的`GitHub page`功能搭建免费的博客，跟着教程弄了一两天，终于弄出来了一个博客雏形，漂亮简洁的界面加上简单方便的用`git`的文本管理方式，写了几篇尝试一下熟悉流程。\n\n这里就有很多东西可以说了，依托GitHub的技术，得去学习这个“全球最大的同性交友网站”怎么使用吧，注册之后有很完整方便的流程引导，很完善——除了一个问题，网站是全英文的。于是耐着性子本着练习阅读英文文档的想法，老老实实跟着教程走了一遍，总算知道这个神奇的网站大概是个什么样子，还有GitHub的立身根本`git`是个什么技术以及使用流程了。（插个题外话，熟悉GitHub之后我真的感叹它太强了，微软太强了。）\n\n其实GitHub网站和`git`的学习是在寒假进行的，但是由于当时只是学习没有真正使用，忘得很快，再后面搭建blog使用GitHub的时候完全是重新学了一遍，对，就是很耗时间而且效率很低，做了无用功。而且学了一堆`git`的指令后，觉得命令行比较麻烦想试试图形界面，然后就发现了GitHub Desktop这个神奇的软件，终于不用敲命令行了，方便太多，但是使用的时候心中还是得有个完整的`git`思路。\n\n往后就是`markdown`了，作为一种轻量级标记语言，深受广大程序员的喜爱。学习这个倒是不难，语法很简单，但是真正使用起来，去换一个打字书写习惯，还是需要时间去适应的。几乎是在写每一篇的时候都刻意的去实现一些不同的东西，用会了也就能学到了。\n\n- 在csgo的文章中主要学了更新blog推文的方法，以及markdown基本用法；\n- 在襄阳牛肉面的文章中学了插入图片，以及使用图床；\n- 在python装饰器的文章中学习了插入代码块；\n- 在乐谱展示中学了利用插入`html`语言中的`ifram`标签，来尝试插入音乐和视频。\n\n此外，最近在折腾的时候，学了利用GitHub和picgo以及Typora搭建免费便捷的图床。\n\n这就是我的博客初体验，至此一切都还算正常，但后面就慢慢开始不对劲了。\n\n## 折腾\n\n想想也是挺神奇的，本来是想写博客，到头来变成了研究搭建博客本身的技术，而不是专注于博客内容。其实我还是想写博客内容的，甚至专门整了一个利于大文档结构的`Jekyll`模板——`Just-the-docs`，如果写的内容够多，应该能成系统化吧，到时候做一个打的说明文档，亦或是回忆录，都ok。\n\n博客弄出来了会使用了，可我还是不满足，也没有什么大毛病——现在想想都是写无伤大雅的小毛病，但恰恰是这种无法完全掌控的感觉，让我一定要研究个明白才甘心。于是后面尝试修改本地`host`文件提高GitHub访问速度以及显示图片的问题——失败；尝试本地搭建`Jekyll`本地运行环境——失败；因为`Jekyll`官方不支持Windows所以尝试了`wsl`（Windows subsystem for Linux）——成功，但是在Linux环境搭建`Jekyll`本地运行环境失败，Linux我更不会用，所以还是失败，最后电脑重启之后`Jekyll`居然就安装成功了，就，挺突然的，也很无语，但是最后试了很久发现安装的依赖包太多太杂了，和GitHub上托管用的不一样，所以还是失败，最后也还是只能用GitHub线上调试——即本地修改文件，上传到网站，等一会儿刷新几次才能看到结果，非常的低效，为了解决这个低效我饶了这么一大圈，最后还是回到了低效的原点。\n\n最初用的模板有一些小bug，就像去修改——不就是一堆程序嘛。但这是网站前端程序，和我平时熟知的算法程序完全就不是一个领域，太难了，各种尝试、踩坑、根据英文说明文档从头配置文件，但总是有问题无法解决，而且因为上面说过的本地调试环境搭建失败的问题，改动一下看到结果太麻烦了，太低效了，就这样挣扎了好几天，最后压倒我的那根稻草是：本地修改终于好了没有问题了，上传到线上，显示错误，bug，而且是我完全没有头绪的bug。后来我甚至想这种完全没有头绪的问题是不是早点出现比较好，因为前面出现的问题都是有头绪的，跟着那一点头绪多绕绕弯子总有办法解决，但解决之后总是有更多的问题跟在后面。希望在这时候并不是个好东西，它让我每次在快要放弃的时候，给我一点成就感和坚持下去的信念，让我顺着好奇心和侥幸心理的驱使，在这条看不到前方的路上继续摸索前行——纵使一路荆棘伤痕累累。直到像这次一样撞上南墙，亦或是失足掉下深渊。其实我早该知道，对于前端知识异常匮乏的我来说，要把这么一个大项目看懂知道问题出现在哪里并且修改正确，几乎是一个不可能完成的任务。但有时候就是这么不够理智。最后还是拿的别人的源代码，除了文章、图片以及少量的配置修改外，其他的根本不敢动——又回到了原点。\n\n## 总结\n\n总结一下这段时间搞博客的经历：\n\n1. 尝试本地调试环境失败，回归低效的线上调试。\n2. 尝试修改代码配置失败，回归直接用别人的代码。\n\n但也不是完全没成果：\n\n1. 熟悉GitHub流程及使用方式；\n2. 熟悉Jekyll博客的使用方式；\n3. 熟悉markdown语法，不出意外的话今后会经常用它来写东西；\n4. 接触了站点文件的结构，配置方法；\n5. 接触了一些前端知识；\n6. 最终有了三个比较稳定的博客界面：\n   - [https://leiwei.xyz/](https://leiwei.xyz/)主博客主页\n   - [https://leiwei.xyz/music-display/](https://leiwei.xyz/music-display/)社团乐曲展示用\n   - [https://leiwei.xyz/just-the-docs/](https://leiwei.xyz/just-the-docs/)结构化文档框架\n\n## 今后\n\n比较稳定的平台搭建至此告一段落，不出意外的话今后就多写写内容，尽量不再去纠结配置、代码的事情了。写作也是个耗时耗力的事情，比如这一篇到这里2200多字，写的已经很快了，也没有很多的修改，还是花了我快两个小时。这种东西写了留下了终究还是有意义的吧，我也会尽量坚持下去。\n\n这两周的经历，不理智、无用功、低效、产出低，所有的空闲时间几乎都花在这个上面了，B站都很久没刷了。但是这样也有好处，至少我一个人安静瞎捣鼓、踩坑时学到的这些东西，是很难去忘记了。\n\n![](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/post-bg-Sakura.jpg)\n","source":"_posts/2021-03-20-记这两周折腾博客的经历.md","raw":"---\nlayout:     post\ntitle:      记这两周折腾博客的经历\ndate:       2021-3-20\nauthor:     LW\nheader-img: img/post-bg-Sakura.jpg\ncatalog: true\ntags: 心路\ncategories: \n   - 折腾\n---\n\n\n>希望在这时候并不是个好东西，它让我每次在快要放弃的时候，给我一点成就感和坚持下去的信念，让我顺着好奇心和侥幸心理的驱使，在这条看不到前方的路上继续摸索前行——纵使一路荆棘伤痕累累。直到像这次一样撞上南墙，亦或是失足掉下深渊。  \n\n# 记这两周折腾博客的经历\n\n过去的两周里我开始疯狂沉迷于搭建博客，其实这个想法很早之前就有了，想整的时候没时间，有空的时候又太懒。。。所以一直往后拖，到现在终于做了出来。做出来之后写了四篇吧，也没写很多的内容，然后就对搭博客本身的技术起了浓厚的兴趣，从此开始了为期两周多的踩坑之旅。\n\n<!--more-->\n\n## 起初\n\n起初是看到一个教程，教怎么利用GitHub的`GitHub page`功能搭建免费的博客，跟着教程弄了一两天，终于弄出来了一个博客雏形，漂亮简洁的界面加上简单方便的用`git`的文本管理方式，写了几篇尝试一下熟悉流程。\n\n这里就有很多东西可以说了，依托GitHub的技术，得去学习这个“全球最大的同性交友网站”怎么使用吧，注册之后有很完整方便的流程引导，很完善——除了一个问题，网站是全英文的。于是耐着性子本着练习阅读英文文档的想法，老老实实跟着教程走了一遍，总算知道这个神奇的网站大概是个什么样子，还有GitHub的立身根本`git`是个什么技术以及使用流程了。（插个题外话，熟悉GitHub之后我真的感叹它太强了，微软太强了。）\n\n其实GitHub网站和`git`的学习是在寒假进行的，但是由于当时只是学习没有真正使用，忘得很快，再后面搭建blog使用GitHub的时候完全是重新学了一遍，对，就是很耗时间而且效率很低，做了无用功。而且学了一堆`git`的指令后，觉得命令行比较麻烦想试试图形界面，然后就发现了GitHub Desktop这个神奇的软件，终于不用敲命令行了，方便太多，但是使用的时候心中还是得有个完整的`git`思路。\n\n往后就是`markdown`了，作为一种轻量级标记语言，深受广大程序员的喜爱。学习这个倒是不难，语法很简单，但是真正使用起来，去换一个打字书写习惯，还是需要时间去适应的。几乎是在写每一篇的时候都刻意的去实现一些不同的东西，用会了也就能学到了。\n\n- 在csgo的文章中主要学了更新blog推文的方法，以及markdown基本用法；\n- 在襄阳牛肉面的文章中学了插入图片，以及使用图床；\n- 在python装饰器的文章中学习了插入代码块；\n- 在乐谱展示中学了利用插入`html`语言中的`ifram`标签，来尝试插入音乐和视频。\n\n此外，最近在折腾的时候，学了利用GitHub和picgo以及Typora搭建免费便捷的图床。\n\n这就是我的博客初体验，至此一切都还算正常，但后面就慢慢开始不对劲了。\n\n## 折腾\n\n想想也是挺神奇的，本来是想写博客，到头来变成了研究搭建博客本身的技术，而不是专注于博客内容。其实我还是想写博客内容的，甚至专门整了一个利于大文档结构的`Jekyll`模板——`Just-the-docs`，如果写的内容够多，应该能成系统化吧，到时候做一个打的说明文档，亦或是回忆录，都ok。\n\n博客弄出来了会使用了，可我还是不满足，也没有什么大毛病——现在想想都是写无伤大雅的小毛病，但恰恰是这种无法完全掌控的感觉，让我一定要研究个明白才甘心。于是后面尝试修改本地`host`文件提高GitHub访问速度以及显示图片的问题——失败；尝试本地搭建`Jekyll`本地运行环境——失败；因为`Jekyll`官方不支持Windows所以尝试了`wsl`（Windows subsystem for Linux）——成功，但是在Linux环境搭建`Jekyll`本地运行环境失败，Linux我更不会用，所以还是失败，最后电脑重启之后`Jekyll`居然就安装成功了，就，挺突然的，也很无语，但是最后试了很久发现安装的依赖包太多太杂了，和GitHub上托管用的不一样，所以还是失败，最后也还是只能用GitHub线上调试——即本地修改文件，上传到网站，等一会儿刷新几次才能看到结果，非常的低效，为了解决这个低效我饶了这么一大圈，最后还是回到了低效的原点。\n\n最初用的模板有一些小bug，就像去修改——不就是一堆程序嘛。但这是网站前端程序，和我平时熟知的算法程序完全就不是一个领域，太难了，各种尝试、踩坑、根据英文说明文档从头配置文件，但总是有问题无法解决，而且因为上面说过的本地调试环境搭建失败的问题，改动一下看到结果太麻烦了，太低效了，就这样挣扎了好几天，最后压倒我的那根稻草是：本地修改终于好了没有问题了，上传到线上，显示错误，bug，而且是我完全没有头绪的bug。后来我甚至想这种完全没有头绪的问题是不是早点出现比较好，因为前面出现的问题都是有头绪的，跟着那一点头绪多绕绕弯子总有办法解决，但解决之后总是有更多的问题跟在后面。希望在这时候并不是个好东西，它让我每次在快要放弃的时候，给我一点成就感和坚持下去的信念，让我顺着好奇心和侥幸心理的驱使，在这条看不到前方的路上继续摸索前行——纵使一路荆棘伤痕累累。直到像这次一样撞上南墙，亦或是失足掉下深渊。其实我早该知道，对于前端知识异常匮乏的我来说，要把这么一个大项目看懂知道问题出现在哪里并且修改正确，几乎是一个不可能完成的任务。但有时候就是这么不够理智。最后还是拿的别人的源代码，除了文章、图片以及少量的配置修改外，其他的根本不敢动——又回到了原点。\n\n## 总结\n\n总结一下这段时间搞博客的经历：\n\n1. 尝试本地调试环境失败，回归低效的线上调试。\n2. 尝试修改代码配置失败，回归直接用别人的代码。\n\n但也不是完全没成果：\n\n1. 熟悉GitHub流程及使用方式；\n2. 熟悉Jekyll博客的使用方式；\n3. 熟悉markdown语法，不出意外的话今后会经常用它来写东西；\n4. 接触了站点文件的结构，配置方法；\n5. 接触了一些前端知识；\n6. 最终有了三个比较稳定的博客界面：\n   - [https://leiwei.xyz/](https://leiwei.xyz/)主博客主页\n   - [https://leiwei.xyz/music-display/](https://leiwei.xyz/music-display/)社团乐曲展示用\n   - [https://leiwei.xyz/just-the-docs/](https://leiwei.xyz/just-the-docs/)结构化文档框架\n\n## 今后\n\n比较稳定的平台搭建至此告一段落，不出意外的话今后就多写写内容，尽量不再去纠结配置、代码的事情了。写作也是个耗时耗力的事情，比如这一篇到这里2200多字，写的已经很快了，也没有很多的修改，还是花了我快两个小时。这种东西写了留下了终究还是有意义的吧，我也会尽量坚持下去。\n\n这两周的经历，不理智、无用功、低效、产出低，所有的空闲时间几乎都花在这个上面了，B站都很久没刷了。但是这样也有好处，至少我一个人安静瞎捣鼓、踩坑时学到的这些东西，是很难去忘记了。\n\n![](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/post-bg-Sakura.jpg)\n","slug":"2021-03-20-记这两周折腾博客的经历","published":1,"updated":"2022-03-21T09:41:10.000Z","comments":1,"photos":[],"link":"","_id":"cl792rm10000jtkinhuv11cz4","content":"<blockquote>\n<p>希望在这时候并不是个好东西，它让我每次在快要放弃的时候，给我一点成就感和坚持下去的信念，让我顺着好奇心和侥幸心理的驱使，在这条看不到前方的路上继续摸索前行——纵使一路荆棘伤痕累累。直到像这次一样撞上南墙，亦或是失足掉下深渊。  </p>\n</blockquote>\n<h1 id=\"记这两周折腾博客的经历\"><a href=\"#记这两周折腾博客的经历\" class=\"headerlink\" title=\"记这两周折腾博客的经历\"></a>记这两周折腾博客的经历</h1><p>过去的两周里我开始疯狂沉迷于搭建博客，其实这个想法很早之前就有了，想整的时候没时间，有空的时候又太懒。。。所以一直往后拖，到现在终于做了出来。做出来之后写了四篇吧，也没写很多的内容，然后就对搭博客本身的技术起了浓厚的兴趣，从此开始了为期两周多的踩坑之旅。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"起初\"><a href=\"#起初\" class=\"headerlink\" title=\"起初\"></a>起初</h2><p>起初是看到一个教程，教怎么利用GitHub的<code>GitHub page</code>功能搭建免费的博客，跟着教程弄了一两天，终于弄出来了一个博客雏形，漂亮简洁的界面加上简单方便的用<code>git</code>的文本管理方式，写了几篇尝试一下熟悉流程。</p>\n<p>这里就有很多东西可以说了，依托GitHub的技术，得去学习这个“全球最大的同性交友网站”怎么使用吧，注册之后有很完整方便的流程引导，很完善——除了一个问题，网站是全英文的。于是耐着性子本着练习阅读英文文档的想法，老老实实跟着教程走了一遍，总算知道这个神奇的网站大概是个什么样子，还有GitHub的立身根本<code>git</code>是个什么技术以及使用流程了。（插个题外话，熟悉GitHub之后我真的感叹它太强了，微软太强了。）</p>\n<p>其实GitHub网站和<code>git</code>的学习是在寒假进行的，但是由于当时只是学习没有真正使用，忘得很快，再后面搭建blog使用GitHub的时候完全是重新学了一遍，对，就是很耗时间而且效率很低，做了无用功。而且学了一堆<code>git</code>的指令后，觉得命令行比较麻烦想试试图形界面，然后就发现了GitHub Desktop这个神奇的软件，终于不用敲命令行了，方便太多，但是使用的时候心中还是得有个完整的<code>git</code>思路。</p>\n<p>往后就是<code>markdown</code>了，作为一种轻量级标记语言，深受广大程序员的喜爱。学习这个倒是不难，语法很简单，但是真正使用起来，去换一个打字书写习惯，还是需要时间去适应的。几乎是在写每一篇的时候都刻意的去实现一些不同的东西，用会了也就能学到了。</p>\n<ul>\n<li>在csgo的文章中主要学了更新blog推文的方法，以及markdown基本用法；</li>\n<li>在襄阳牛肉面的文章中学了插入图片，以及使用图床；</li>\n<li>在python装饰器的文章中学习了插入代码块；</li>\n<li>在乐谱展示中学了利用插入<code>html</code>语言中的<code>ifram</code>标签，来尝试插入音乐和视频。</li>\n</ul>\n<p>此外，最近在折腾的时候，学了利用GitHub和picgo以及Typora搭建免费便捷的图床。</p>\n<p>这就是我的博客初体验，至此一切都还算正常，但后面就慢慢开始不对劲了。</p>\n<h2 id=\"折腾\"><a href=\"#折腾\" class=\"headerlink\" title=\"折腾\"></a>折腾</h2><p>想想也是挺神奇的，本来是想写博客，到头来变成了研究搭建博客本身的技术，而不是专注于博客内容。其实我还是想写博客内容的，甚至专门整了一个利于大文档结构的<code>Jekyll</code>模板——<code>Just-the-docs</code>，如果写的内容够多，应该能成系统化吧，到时候做一个打的说明文档，亦或是回忆录，都ok。</p>\n<p>博客弄出来了会使用了，可我还是不满足，也没有什么大毛病——现在想想都是写无伤大雅的小毛病，但恰恰是这种无法完全掌控的感觉，让我一定要研究个明白才甘心。于是后面尝试修改本地<code>host</code>文件提高GitHub访问速度以及显示图片的问题——失败；尝试本地搭建<code>Jekyll</code>本地运行环境——失败；因为<code>Jekyll</code>官方不支持Windows所以尝试了<code>wsl</code>（Windows subsystem for Linux）——成功，但是在Linux环境搭建<code>Jekyll</code>本地运行环境失败，Linux我更不会用，所以还是失败，最后电脑重启之后<code>Jekyll</code>居然就安装成功了，就，挺突然的，也很无语，但是最后试了很久发现安装的依赖包太多太杂了，和GitHub上托管用的不一样，所以还是失败，最后也还是只能用GitHub线上调试——即本地修改文件，上传到网站，等一会儿刷新几次才能看到结果，非常的低效，为了解决这个低效我饶了这么一大圈，最后还是回到了低效的原点。</p>\n<p>最初用的模板有一些小bug，就像去修改——不就是一堆程序嘛。但这是网站前端程序，和我平时熟知的算法程序完全就不是一个领域，太难了，各种尝试、踩坑、根据英文说明文档从头配置文件，但总是有问题无法解决，而且因为上面说过的本地调试环境搭建失败的问题，改动一下看到结果太麻烦了，太低效了，就这样挣扎了好几天，最后压倒我的那根稻草是：本地修改终于好了没有问题了，上传到线上，显示错误，bug，而且是我完全没有头绪的bug。后来我甚至想这种完全没有头绪的问题是不是早点出现比较好，因为前面出现的问题都是有头绪的，跟着那一点头绪多绕绕弯子总有办法解决，但解决之后总是有更多的问题跟在后面。希望在这时候并不是个好东西，它让我每次在快要放弃的时候，给我一点成就感和坚持下去的信念，让我顺着好奇心和侥幸心理的驱使，在这条看不到前方的路上继续摸索前行——纵使一路荆棘伤痕累累。直到像这次一样撞上南墙，亦或是失足掉下深渊。其实我早该知道，对于前端知识异常匮乏的我来说，要把这么一个大项目看懂知道问题出现在哪里并且修改正确，几乎是一个不可能完成的任务。但有时候就是这么不够理智。最后还是拿的别人的源代码，除了文章、图片以及少量的配置修改外，其他的根本不敢动——又回到了原点。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>总结一下这段时间搞博客的经历：</p>\n<ol>\n<li>尝试本地调试环境失败，回归低效的线上调试。</li>\n<li>尝试修改代码配置失败，回归直接用别人的代码。</li>\n</ol>\n<p>但也不是完全没成果：</p>\n<ol>\n<li>熟悉GitHub流程及使用方式；</li>\n<li>熟悉Jekyll博客的使用方式；</li>\n<li>熟悉markdown语法，不出意外的话今后会经常用它来写东西；</li>\n<li>接触了站点文件的结构，配置方法；</li>\n<li>接触了一些前端知识；</li>\n<li>最终有了三个比较稳定的博客界面：<ul>\n<li><a href=\"https://leiwei.xyz/\">https://leiwei.xyz/</a>主博客主页</li>\n<li><a href=\"https://leiwei.xyz/music-display/\">https://leiwei.xyz/music-display/</a>社团乐曲展示用</li>\n<li><a href=\"https://leiwei.xyz/just-the-docs/\">https://leiwei.xyz/just-the-docs/</a>结构化文档框架</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"今后\"><a href=\"#今后\" class=\"headerlink\" title=\"今后\"></a>今后</h2><p>比较稳定的平台搭建至此告一段落，不出意外的话今后就多写写内容，尽量不再去纠结配置、代码的事情了。写作也是个耗时耗力的事情，比如这一篇到这里2200多字，写的已经很快了，也没有很多的修改，还是花了我快两个小时。这种东西写了留下了终究还是有意义的吧，我也会尽量坚持下去。</p>\n<p>这两周的经历，不理智、无用功、低效、产出低，所有的空闲时间几乎都花在这个上面了，B站都很久没刷了。但是这样也有好处，至少我一个人安静瞎捣鼓、踩坑时学到的这些东西，是很难去忘记了。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/post-bg-Sakura.jpg\"\n                     \n                ></p>\n","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"<blockquote>\n<p>希望在这时候并不是个好东西，它让我每次在快要放弃的时候，给我一点成就感和坚持下去的信念，让我顺着好奇心和侥幸心理的驱使，在这条看不到前方的路上继续摸索前行——纵使一路荆棘伤痕累累。直到像这次一样撞上南墙，亦或是失足掉下深渊。  </p>\n</blockquote>\n<h1 id=\"记这两周折腾博客的经历\"><a href=\"#记这两周折腾博客的经历\" class=\"headerlink\" title=\"记这两周折腾博客的经历\"></a>记这两周折腾博客的经历</h1><p>过去的两周里我开始疯狂沉迷于搭建博客，其实这个想法很早之前就有了，想整的时候没时间，有空的时候又太懒。。。所以一直往后拖，到现在终于做了出来。做出来之后写了四篇吧，也没写很多的内容，然后就对搭博客本身的技术起了浓厚的兴趣，从此开始了为期两周多的踩坑之旅。</p>","more":"<h2 id=\"起初\"><a href=\"#起初\" class=\"headerlink\" title=\"起初\"></a>起初</h2><p>起初是看到一个教程，教怎么利用GitHub的<code>GitHub page</code>功能搭建免费的博客，跟着教程弄了一两天，终于弄出来了一个博客雏形，漂亮简洁的界面加上简单方便的用<code>git</code>的文本管理方式，写了几篇尝试一下熟悉流程。</p>\n<p>这里就有很多东西可以说了，依托GitHub的技术，得去学习这个“全球最大的同性交友网站”怎么使用吧，注册之后有很完整方便的流程引导，很完善——除了一个问题，网站是全英文的。于是耐着性子本着练习阅读英文文档的想法，老老实实跟着教程走了一遍，总算知道这个神奇的网站大概是个什么样子，还有GitHub的立身根本<code>git</code>是个什么技术以及使用流程了。（插个题外话，熟悉GitHub之后我真的感叹它太强了，微软太强了。）</p>\n<p>其实GitHub网站和<code>git</code>的学习是在寒假进行的，但是由于当时只是学习没有真正使用，忘得很快，再后面搭建blog使用GitHub的时候完全是重新学了一遍，对，就是很耗时间而且效率很低，做了无用功。而且学了一堆<code>git</code>的指令后，觉得命令行比较麻烦想试试图形界面，然后就发现了GitHub Desktop这个神奇的软件，终于不用敲命令行了，方便太多，但是使用的时候心中还是得有个完整的<code>git</code>思路。</p>\n<p>往后就是<code>markdown</code>了，作为一种轻量级标记语言，深受广大程序员的喜爱。学习这个倒是不难，语法很简单，但是真正使用起来，去换一个打字书写习惯，还是需要时间去适应的。几乎是在写每一篇的时候都刻意的去实现一些不同的东西，用会了也就能学到了。</p>\n<ul>\n<li>在csgo的文章中主要学了更新blog推文的方法，以及markdown基本用法；</li>\n<li>在襄阳牛肉面的文章中学了插入图片，以及使用图床；</li>\n<li>在python装饰器的文章中学习了插入代码块；</li>\n<li>在乐谱展示中学了利用插入<code>html</code>语言中的<code>ifram</code>标签，来尝试插入音乐和视频。</li>\n</ul>\n<p>此外，最近在折腾的时候，学了利用GitHub和picgo以及Typora搭建免费便捷的图床。</p>\n<p>这就是我的博客初体验，至此一切都还算正常，但后面就慢慢开始不对劲了。</p>\n<h2 id=\"折腾\"><a href=\"#折腾\" class=\"headerlink\" title=\"折腾\"></a>折腾</h2><p>想想也是挺神奇的，本来是想写博客，到头来变成了研究搭建博客本身的技术，而不是专注于博客内容。其实我还是想写博客内容的，甚至专门整了一个利于大文档结构的<code>Jekyll</code>模板——<code>Just-the-docs</code>，如果写的内容够多，应该能成系统化吧，到时候做一个打的说明文档，亦或是回忆录，都ok。</p>\n<p>博客弄出来了会使用了，可我还是不满足，也没有什么大毛病——现在想想都是写无伤大雅的小毛病，但恰恰是这种无法完全掌控的感觉，让我一定要研究个明白才甘心。于是后面尝试修改本地<code>host</code>文件提高GitHub访问速度以及显示图片的问题——失败；尝试本地搭建<code>Jekyll</code>本地运行环境——失败；因为<code>Jekyll</code>官方不支持Windows所以尝试了<code>wsl</code>（Windows subsystem for Linux）——成功，但是在Linux环境搭建<code>Jekyll</code>本地运行环境失败，Linux我更不会用，所以还是失败，最后电脑重启之后<code>Jekyll</code>居然就安装成功了，就，挺突然的，也很无语，但是最后试了很久发现安装的依赖包太多太杂了，和GitHub上托管用的不一样，所以还是失败，最后也还是只能用GitHub线上调试——即本地修改文件，上传到网站，等一会儿刷新几次才能看到结果，非常的低效，为了解决这个低效我饶了这么一大圈，最后还是回到了低效的原点。</p>\n<p>最初用的模板有一些小bug，就像去修改——不就是一堆程序嘛。但这是网站前端程序，和我平时熟知的算法程序完全就不是一个领域，太难了，各种尝试、踩坑、根据英文说明文档从头配置文件，但总是有问题无法解决，而且因为上面说过的本地调试环境搭建失败的问题，改动一下看到结果太麻烦了，太低效了，就这样挣扎了好几天，最后压倒我的那根稻草是：本地修改终于好了没有问题了，上传到线上，显示错误，bug，而且是我完全没有头绪的bug。后来我甚至想这种完全没有头绪的问题是不是早点出现比较好，因为前面出现的问题都是有头绪的，跟着那一点头绪多绕绕弯子总有办法解决，但解决之后总是有更多的问题跟在后面。希望在这时候并不是个好东西，它让我每次在快要放弃的时候，给我一点成就感和坚持下去的信念，让我顺着好奇心和侥幸心理的驱使，在这条看不到前方的路上继续摸索前行——纵使一路荆棘伤痕累累。直到像这次一样撞上南墙，亦或是失足掉下深渊。其实我早该知道，对于前端知识异常匮乏的我来说，要把这么一个大项目看懂知道问题出现在哪里并且修改正确，几乎是一个不可能完成的任务。但有时候就是这么不够理智。最后还是拿的别人的源代码，除了文章、图片以及少量的配置修改外，其他的根本不敢动——又回到了原点。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>总结一下这段时间搞博客的经历：</p>\n<ol>\n<li>尝试本地调试环境失败，回归低效的线上调试。</li>\n<li>尝试修改代码配置失败，回归直接用别人的代码。</li>\n</ol>\n<p>但也不是完全没成果：</p>\n<ol>\n<li>熟悉GitHub流程及使用方式；</li>\n<li>熟悉Jekyll博客的使用方式；</li>\n<li>熟悉markdown语法，不出意外的话今后会经常用它来写东西；</li>\n<li>接触了站点文件的结构，配置方法；</li>\n<li>接触了一些前端知识；</li>\n<li>最终有了三个比较稳定的博客界面：<ul>\n<li><a href=\"https://leiwei.xyz/\">https://leiwei.xyz/</a>主博客主页</li>\n<li><a href=\"https://leiwei.xyz/music-display/\">https://leiwei.xyz/music-display/</a>社团乐曲展示用</li>\n<li><a href=\"https://leiwei.xyz/just-the-docs/\">https://leiwei.xyz/just-the-docs/</a>结构化文档框架</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"今后\"><a href=\"#今后\" class=\"headerlink\" title=\"今后\"></a>今后</h2><p>比较稳定的平台搭建至此告一段落，不出意外的话今后就多写写内容，尽量不再去纠结配置、代码的事情了。写作也是个耗时耗力的事情，比如这一篇到这里2200多字，写的已经很快了，也没有很多的修改，还是花了我快两个小时。这种东西写了留下了终究还是有意义的吧，我也会尽量坚持下去。</p>\n<p>这两周的经历，不理智、无用功、低效、产出低，所有的空闲时间几乎都花在这个上面了，B站都很久没刷了。但是这样也有好处，至少我一个人安静瞎捣鼓、踩坑时学到的这些东西，是很难去忘记了。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/post-bg-Sakura.jpg\"\n                     \n                ></p>"},{"layout":"post","title":"懒~~缺少源动力ԅ(¯﹃¯ԅ)","date":"2021-03-31T16:00:00.000Z","author":"LW","header-img":"img/post-bg-lan.jpg","catalog":true,"_content":"\n# 懒\n\n最近真的是太懒了，从灵魂深处往外冒，由内而外散发出的懒。懒到不想上课，不想看论文，不想出门，甚至懒得打游戏，就，什么都不想做。仿佛身处两个阶段之间的间隙，两场大战之间的休整，两节课之间的休息一样，可以什么都不做，静静地消磨掉这短暂的时间，只想停下来，喘息一会儿，好迎接接下来随时会将我卷入的一系列大事件之中。但是有什么大事即将来临吗？好像也没有吧，生活还是一如既往，不是事事都在我的掌控之中，但也很难发生什么让我很出乎意料。有什么大事刚刚过去让我一时半会儿很难缓得过来吗？好像有，好像也没有。\n\n<!--more-->\n\n在这个时间点：2021年4月1日，开学刚过去一个月，前后也就发生了这些事情：沉迷了半个月的博客折腾完了，至少是告一段落；想尽我所能再拉一把的社团，弄了一周后意识到没有用（想写没写），同样是告一段落；各种课程？我现在将课程看的越来越淡了，因为我意识到时间和精力应该花在更有价值的，学以后能用得上的东西上；科研？压根没开始，老师评价的很对：完全没有进入状态，但是科研是我要做的事情，这件事持续给我着心理压力，让我懒的同时难以心安。\n\n每天都在发生太多太多事情，但是开学以来这段时间，我能说起的也就的这几件：博客、社团、科研，甚至学业都不能算，其余几件事都是我拿出了全部的精力和热情准备好献身于此。而学业——如果可以的话我根本就不想去上课，以现在的状态（与本科以及之前完全不同），上课只是为了完成这么一个过程，从而拿到学分以达到毕业的目的，而并不是我想做的事情。当然也是因为恰好没有我感兴趣的课。最近我一直在找寻生活的源动力，也就是我热爱的事情，整天想着去做的事情，灵魂深处的内在动力驱使着我去做的事情。缺失了这个源动力，整个人开始迷茫，不知所措，被一种“厌世“的情绪包围，喘不过气来。\n\n就拿最近整的博客来说，做一个博客是我一直以来的想法，开始整了之后，搭建博客的这件事情本身称为了我的一个热爱，每天除了吃饭睡觉上课，我将全部的精力和热情都放在这个事情上，每天坐在电脑前一整天都不会觉得累，甚至觉得时间不够——热爱的时候一直会觉得时间不够。而当我意识到：”做到这一步可以了，目的达到了，再往前一步太难了甚至现阶段做不到，已经可以了“的时候，这个事情就完结了，至少告一段落了，短时间不会再去想这件事了，可以完全放心地抛在脑后。而写内容、更新博客这方面，则更像是我的一个理性的想法，即：”做这件事很对，应该去做。“没有热情的时候只靠理性驱动是不行的，缺乏那种“内在的源动力”，距离上一次更新已经十一天了，更新这件事一直压在我的心上，但就是没有去做，究其原因当然是一样的——没动力。当然，前面关于“热情所在的事情”和“理性驱动的事情”并不是完全分开的，若是没有热情在的话，我现在也不会在写这篇文章了。\n\n有人说：生活的意义在于生活本身，要去热爱，从而发现并赋予生活以意义。我认为生活就是一个又一个的热爱连接在一起，推动着前进，而我现在的状态就像是在两场热爱之间，上一个热爱的末尾我得到了一个清晰的认知，知道它结束了，但下一个不知何时会到来，于是一个空档期出现了，而我此刻正处于这个空档之中。迷茫，进而有些焦虑。迷茫可能是因为暂时缺少了动力，不知该干什么，焦虑应该是因为确实有事情没做好给我留下了压力——学术上毫无进展。这样看来我这段时间感到的不安应该也是正常的了。\n\n一个奇思妙想：人是群居动物，是不是因为对一个人来说光靠个人的理性驱动是不够的，还要靠其他人来不经意间给他激起被称之为热情的东西，让他不断地产生内在的源动力，才能够一直向前进呢？\n\n![lanyangyang](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/lanyangyang.jpg)\n","source":"_posts/2021-04-01-懒.md","raw":"---\nlayout:     post\ntitle:      懒~~缺少源动力ԅ(¯﹃¯ԅ) \ndate:       2021-4-01\nauthor:     LW\nheader-img: img/post-bg-lan.jpg\ncatalog: true\ntags: 心路\n# categories: 心路\n---\n\n# 懒\n\n最近真的是太懒了，从灵魂深处往外冒，由内而外散发出的懒。懒到不想上课，不想看论文，不想出门，甚至懒得打游戏，就，什么都不想做。仿佛身处两个阶段之间的间隙，两场大战之间的休整，两节课之间的休息一样，可以什么都不做，静静地消磨掉这短暂的时间，只想停下来，喘息一会儿，好迎接接下来随时会将我卷入的一系列大事件之中。但是有什么大事即将来临吗？好像也没有吧，生活还是一如既往，不是事事都在我的掌控之中，但也很难发生什么让我很出乎意料。有什么大事刚刚过去让我一时半会儿很难缓得过来吗？好像有，好像也没有。\n\n<!--more-->\n\n在这个时间点：2021年4月1日，开学刚过去一个月，前后也就发生了这些事情：沉迷了半个月的博客折腾完了，至少是告一段落；想尽我所能再拉一把的社团，弄了一周后意识到没有用（想写没写），同样是告一段落；各种课程？我现在将课程看的越来越淡了，因为我意识到时间和精力应该花在更有价值的，学以后能用得上的东西上；科研？压根没开始，老师评价的很对：完全没有进入状态，但是科研是我要做的事情，这件事持续给我着心理压力，让我懒的同时难以心安。\n\n每天都在发生太多太多事情，但是开学以来这段时间，我能说起的也就的这几件：博客、社团、科研，甚至学业都不能算，其余几件事都是我拿出了全部的精力和热情准备好献身于此。而学业——如果可以的话我根本就不想去上课，以现在的状态（与本科以及之前完全不同），上课只是为了完成这么一个过程，从而拿到学分以达到毕业的目的，而并不是我想做的事情。当然也是因为恰好没有我感兴趣的课。最近我一直在找寻生活的源动力，也就是我热爱的事情，整天想着去做的事情，灵魂深处的内在动力驱使着我去做的事情。缺失了这个源动力，整个人开始迷茫，不知所措，被一种“厌世“的情绪包围，喘不过气来。\n\n就拿最近整的博客来说，做一个博客是我一直以来的想法，开始整了之后，搭建博客的这件事情本身称为了我的一个热爱，每天除了吃饭睡觉上课，我将全部的精力和热情都放在这个事情上，每天坐在电脑前一整天都不会觉得累，甚至觉得时间不够——热爱的时候一直会觉得时间不够。而当我意识到：”做到这一步可以了，目的达到了，再往前一步太难了甚至现阶段做不到，已经可以了“的时候，这个事情就完结了，至少告一段落了，短时间不会再去想这件事了，可以完全放心地抛在脑后。而写内容、更新博客这方面，则更像是我的一个理性的想法，即：”做这件事很对，应该去做。“没有热情的时候只靠理性驱动是不行的，缺乏那种“内在的源动力”，距离上一次更新已经十一天了，更新这件事一直压在我的心上，但就是没有去做，究其原因当然是一样的——没动力。当然，前面关于“热情所在的事情”和“理性驱动的事情”并不是完全分开的，若是没有热情在的话，我现在也不会在写这篇文章了。\n\n有人说：生活的意义在于生活本身，要去热爱，从而发现并赋予生活以意义。我认为生活就是一个又一个的热爱连接在一起，推动着前进，而我现在的状态就像是在两场热爱之间，上一个热爱的末尾我得到了一个清晰的认知，知道它结束了，但下一个不知何时会到来，于是一个空档期出现了，而我此刻正处于这个空档之中。迷茫，进而有些焦虑。迷茫可能是因为暂时缺少了动力，不知该干什么，焦虑应该是因为确实有事情没做好给我留下了压力——学术上毫无进展。这样看来我这段时间感到的不安应该也是正常的了。\n\n一个奇思妙想：人是群居动物，是不是因为对一个人来说光靠个人的理性驱动是不够的，还要靠其他人来不经意间给他激起被称之为热情的东西，让他不断地产生内在的源动力，才能够一直向前进呢？\n\n![lanyangyang](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/lanyangyang.jpg)\n","slug":"2021-04-01-懒","published":1,"updated":"2022-03-21T09:38:51.000Z","comments":1,"photos":[],"link":"","_id":"cl792rm13000otkinas4gho3n","content":"<h1 id=\"懒\"><a href=\"#懒\" class=\"headerlink\" title=\"懒\"></a>懒</h1><p>最近真的是太懒了，从灵魂深处往外冒，由内而外散发出的懒。懒到不想上课，不想看论文，不想出门，甚至懒得打游戏，就，什么都不想做。仿佛身处两个阶段之间的间隙，两场大战之间的休整，两节课之间的休息一样，可以什么都不做，静静地消磨掉这短暂的时间，只想停下来，喘息一会儿，好迎接接下来随时会将我卷入的一系列大事件之中。但是有什么大事即将来临吗？好像也没有吧，生活还是一如既往，不是事事都在我的掌控之中，但也很难发生什么让我很出乎意料。有什么大事刚刚过去让我一时半会儿很难缓得过来吗？好像有，好像也没有。</p>\n<span id=\"more\"></span>\n\n<p>在这个时间点：2021年4月1日，开学刚过去一个月，前后也就发生了这些事情：沉迷了半个月的博客折腾完了，至少是告一段落；想尽我所能再拉一把的社团，弄了一周后意识到没有用（想写没写），同样是告一段落；各种课程？我现在将课程看的越来越淡了，因为我意识到时间和精力应该花在更有价值的，学以后能用得上的东西上；科研？压根没开始，老师评价的很对：完全没有进入状态，但是科研是我要做的事情，这件事持续给我着心理压力，让我懒的同时难以心安。</p>\n<p>每天都在发生太多太多事情，但是开学以来这段时间，我能说起的也就的这几件：博客、社团、科研，甚至学业都不能算，其余几件事都是我拿出了全部的精力和热情准备好献身于此。而学业——如果可以的话我根本就不想去上课，以现在的状态（与本科以及之前完全不同），上课只是为了完成这么一个过程，从而拿到学分以达到毕业的目的，而并不是我想做的事情。当然也是因为恰好没有我感兴趣的课。最近我一直在找寻生活的源动力，也就是我热爱的事情，整天想着去做的事情，灵魂深处的内在动力驱使着我去做的事情。缺失了这个源动力，整个人开始迷茫，不知所措，被一种“厌世“的情绪包围，喘不过气来。</p>\n<p>就拿最近整的博客来说，做一个博客是我一直以来的想法，开始整了之后，搭建博客的这件事情本身称为了我的一个热爱，每天除了吃饭睡觉上课，我将全部的精力和热情都放在这个事情上，每天坐在电脑前一整天都不会觉得累，甚至觉得时间不够——热爱的时候一直会觉得时间不够。而当我意识到：”做到这一步可以了，目的达到了，再往前一步太难了甚至现阶段做不到，已经可以了“的时候，这个事情就完结了，至少告一段落了，短时间不会再去想这件事了，可以完全放心地抛在脑后。而写内容、更新博客这方面，则更像是我的一个理性的想法，即：”做这件事很对，应该去做。“没有热情的时候只靠理性驱动是不行的，缺乏那种“内在的源动力”，距离上一次更新已经十一天了，更新这件事一直压在我的心上，但就是没有去做，究其原因当然是一样的——没动力。当然，前面关于“热情所在的事情”和“理性驱动的事情”并不是完全分开的，若是没有热情在的话，我现在也不会在写这篇文章了。</p>\n<p>有人说：生活的意义在于生活本身，要去热爱，从而发现并赋予生活以意义。我认为生活就是一个又一个的热爱连接在一起，推动着前进，而我现在的状态就像是在两场热爱之间，上一个热爱的末尾我得到了一个清晰的认知，知道它结束了，但下一个不知何时会到来，于是一个空档期出现了，而我此刻正处于这个空档之中。迷茫，进而有些焦虑。迷茫可能是因为暂时缺少了动力，不知该干什么，焦虑应该是因为确实有事情没做好给我留下了压力——学术上毫无进展。这样看来我这段时间感到的不安应该也是正常的了。</p>\n<p>一个奇思妙想：人是群居动物，是不是因为对一个人来说光靠个人的理性驱动是不够的，还要靠其他人来不经意间给他激起被称之为热情的东西，让他不断地产生内在的源动力，才能够一直向前进呢？</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/lanyangyang.jpg\"\n                      alt=\"lanyangyang\"\n                ></p>\n","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"<h1 id=\"懒\"><a href=\"#懒\" class=\"headerlink\" title=\"懒\"></a>懒</h1><p>最近真的是太懒了，从灵魂深处往外冒，由内而外散发出的懒。懒到不想上课，不想看论文，不想出门，甚至懒得打游戏，就，什么都不想做。仿佛身处两个阶段之间的间隙，两场大战之间的休整，两节课之间的休息一样，可以什么都不做，静静地消磨掉这短暂的时间，只想停下来，喘息一会儿，好迎接接下来随时会将我卷入的一系列大事件之中。但是有什么大事即将来临吗？好像也没有吧，生活还是一如既往，不是事事都在我的掌控之中，但也很难发生什么让我很出乎意料。有什么大事刚刚过去让我一时半会儿很难缓得过来吗？好像有，好像也没有。</p>","more":"<p>在这个时间点：2021年4月1日，开学刚过去一个月，前后也就发生了这些事情：沉迷了半个月的博客折腾完了，至少是告一段落；想尽我所能再拉一把的社团，弄了一周后意识到没有用（想写没写），同样是告一段落；各种课程？我现在将课程看的越来越淡了，因为我意识到时间和精力应该花在更有价值的，学以后能用得上的东西上；科研？压根没开始，老师评价的很对：完全没有进入状态，但是科研是我要做的事情，这件事持续给我着心理压力，让我懒的同时难以心安。</p>\n<p>每天都在发生太多太多事情，但是开学以来这段时间，我能说起的也就的这几件：博客、社团、科研，甚至学业都不能算，其余几件事都是我拿出了全部的精力和热情准备好献身于此。而学业——如果可以的话我根本就不想去上课，以现在的状态（与本科以及之前完全不同），上课只是为了完成这么一个过程，从而拿到学分以达到毕业的目的，而并不是我想做的事情。当然也是因为恰好没有我感兴趣的课。最近我一直在找寻生活的源动力，也就是我热爱的事情，整天想着去做的事情，灵魂深处的内在动力驱使着我去做的事情。缺失了这个源动力，整个人开始迷茫，不知所措，被一种“厌世“的情绪包围，喘不过气来。</p>\n<p>就拿最近整的博客来说，做一个博客是我一直以来的想法，开始整了之后，搭建博客的这件事情本身称为了我的一个热爱，每天除了吃饭睡觉上课，我将全部的精力和热情都放在这个事情上，每天坐在电脑前一整天都不会觉得累，甚至觉得时间不够——热爱的时候一直会觉得时间不够。而当我意识到：”做到这一步可以了，目的达到了，再往前一步太难了甚至现阶段做不到，已经可以了“的时候，这个事情就完结了，至少告一段落了，短时间不会再去想这件事了，可以完全放心地抛在脑后。而写内容、更新博客这方面，则更像是我的一个理性的想法，即：”做这件事很对，应该去做。“没有热情的时候只靠理性驱动是不行的，缺乏那种“内在的源动力”，距离上一次更新已经十一天了，更新这件事一直压在我的心上，但就是没有去做，究其原因当然是一样的——没动力。当然，前面关于“热情所在的事情”和“理性驱动的事情”并不是完全分开的，若是没有热情在的话，我现在也不会在写这篇文章了。</p>\n<p>有人说：生活的意义在于生活本身，要去热爱，从而发现并赋予生活以意义。我认为生活就是一个又一个的热爱连接在一起，推动着前进，而我现在的状态就像是在两场热爱之间，上一个热爱的末尾我得到了一个清晰的认知，知道它结束了，但下一个不知何时会到来，于是一个空档期出现了，而我此刻正处于这个空档之中。迷茫，进而有些焦虑。迷茫可能是因为暂时缺少了动力，不知该干什么，焦虑应该是因为确实有事情没做好给我留下了压力——学术上毫无进展。这样看来我这段时间感到的不安应该也是正常的了。</p>\n<p>一个奇思妙想：人是群居动物，是不是因为对一个人来说光靠个人的理性驱动是不够的，还要靠其他人来不经意间给他激起被称之为热情的东西，让他不断地产生内在的源动力，才能够一直向前进呢？</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/lanyangyang.jpg\"\n                      alt=\"lanyangyang\"\n                ></p>"},{"layout":"post","title":"Python图片处理模块Pillow","subtitle":"Pillow ~","date":"2021-04-01T16:00:00.000Z","author":"LW","header-img":"img/post-bg-lyy-L.jpg","catalog":true,"_content":"\n# Python图片处理模块Pillow\n\n\nPIL：Python Imaging Library，是Python平台事实上的图像处理标准库，但PIL年久失修，仅支持到Python 2.7。于是一群志愿者在PIL的基础上创建了兼容的版本，名字叫[Pillow](https://github.com/python-pillow/Pillow)，支持最新Python 3.x，作为PIL的替代版本。\n\n\n以这张懒羊羊的图片为例介绍基本用法：\n\n![](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/lanyangyang.jpg)\n\n<!--more-->\n\n\n\n### 1. 安装\n\n\n在命令行下通过pip安装：\n\n```\npip install pillow\n```\n\n\n#### 图片属性\n\n```python\n# 导入模块\nfrom PIL import Image\n\nImageFilePath = 'C:/Users/lei/Desktop/lanyangyang.jpg'\n# 以只读模式打开图片\nimage = Image.open(ImageFilePath, 'r')\n# 获取图片属性\nprint(image)\n# 获取图片大小\nprint(image.size)\n# 获取图片源格式，JPEG，PNG等\nprint(image.format)\n# 获取图片模式,常见有：L（灰度图像），RGB和CMYK（真彩图像）\nprint(image.mode)\n# 转化为灰度图像\nim2 = image.convert('L')\nim2.show()\n\n# 输出结果如下：\n# <PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=1920x1080 at 0x230C953EFA0>\n# (1920, 1080)\n# JPEG\n# RGB\n# L\n```\n\n转化为灰度后：\n\n![lyy-L](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/lyy-L.jpg)\n\n#### 格式转换\n\n```python\n# 导入模块\nfrom PIL import Image\nimport os\n\nImageFilePath = 'C:/Users/lei/Desktop/lanyangyang.jpg'\n# 分割路径名、拓展名\nFilePath, FileExt = os.path.splitext(ImageFilePath)\n# 格式转换\nImage.open(ImageFilePath).save(\"{}.png\".format(FilePath))\n```\n\n#### 制作缩略图、图标\n\n```python\n# 导入模块\nfrom PIL import Image\n\nimage = Image.open(\"lanyangyang.jpg\", 'r')\nsize = 128, 128\n# 缩略图，改变图片大小\nimage.thumbnail(size)\nprint(image.size)  # (128, 72)\nimage.save(\"lyy.ico\", \"JPEG\")\n\n```\n\n缩略图效果：\n\n![](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/lyy.ico)\n\n### 3 案例\n\n#### 生成验证码\n\n```python\nfrom PIL import Image, ImageDraw, ImageFont, ImageFilter\nimport random\n\n\n# 随机生成字符\ndef rndChar():\n    txt_list = list()\n    txt_list.extend([i for i in range(65, 91)])  # 大写字母\n    txt_list.extend([i for i in range(97, 123)])  # 小写字母\n    txt_list.extend([i for i in range(48, 58)])  # 数字\n    select_index = random.choice(txt_list)  # 随机选择\n    return chr(select_index)  # chr返回整数对应的 ASCII 字符\n\n\n# 随机背景颜色\ndef rndBgColor():\n    return tuple(random.randint(64, 255) for i in range(3))\n\n\n# 随机字符颜色\ndef rndTxtColor():\n    return (1, random.randint(32, 127), random.randint(32, 127), random.randint(32, 127))\n\n\ndef go():\n    # 设置图片的宽高：\n    width, height = 60 * 4, 60\n    # 创建新图片，参数分别为：mode, size, color.\n    image = Image.new('RGB', (width, height), color=(255, 255, 255))\n    # 创建Font对象:\n    font = ImageFont.truetype('C:/Windows/Fonts/Arial.ttf', 36)\n    # 创建Draw对象:\n    draw = ImageDraw.Draw(image)\n    # 填充背景，每个像素随机颜色:\n    for x in range(width):\n        for y in range(height):\n            draw.point((x, y), fill=rndBgColor())\n    # 输出随机验证码\n    for t in range(4):\n        draw.text((60 * t + 10, 10), rndChar(), fill=rndTxtColor(), font=font)\n    image.show()\n    image.save(\"Verification-Code.jpg\")\n    # 模糊处理\n    image = image.filter(ImageFilter.BLUR)\n    image.show()\n    image.save(\"Verification-Code-blur.jpg\")\n\n\ngo()\n\n```\n\n生成的验证码图片：\n\n![Verification-Code](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/Verification-Code.jpg)\n\n模糊处理后的：\n\n![Verification-Code-blur](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/Verification-Code-blur.jpg)\n","source":"_posts/2021-04-02-Python图片处理模块Pillow.md","raw":"---\nlayout:     post\ntitle:      Python图片处理模块Pillow\nsubtitle:   Pillow ~\ndate:       2021-04-02\nauthor:     LW\nheader-img: img/post-bg-lyy-L.jpg\ncatalog: true\ntags: \n    - python\ncategories: \n    - 笔记\n    - python\n---\n\n# Python图片处理模块Pillow\n\n\nPIL：Python Imaging Library，是Python平台事实上的图像处理标准库，但PIL年久失修，仅支持到Python 2.7。于是一群志愿者在PIL的基础上创建了兼容的版本，名字叫[Pillow](https://github.com/python-pillow/Pillow)，支持最新Python 3.x，作为PIL的替代版本。\n\n\n以这张懒羊羊的图片为例介绍基本用法：\n\n![](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/lanyangyang.jpg)\n\n<!--more-->\n\n\n\n### 1. 安装\n\n\n在命令行下通过pip安装：\n\n```\npip install pillow\n```\n\n\n#### 图片属性\n\n```python\n# 导入模块\nfrom PIL import Image\n\nImageFilePath = 'C:/Users/lei/Desktop/lanyangyang.jpg'\n# 以只读模式打开图片\nimage = Image.open(ImageFilePath, 'r')\n# 获取图片属性\nprint(image)\n# 获取图片大小\nprint(image.size)\n# 获取图片源格式，JPEG，PNG等\nprint(image.format)\n# 获取图片模式,常见有：L（灰度图像），RGB和CMYK（真彩图像）\nprint(image.mode)\n# 转化为灰度图像\nim2 = image.convert('L')\nim2.show()\n\n# 输出结果如下：\n# <PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=1920x1080 at 0x230C953EFA0>\n# (1920, 1080)\n# JPEG\n# RGB\n# L\n```\n\n转化为灰度后：\n\n![lyy-L](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/lyy-L.jpg)\n\n#### 格式转换\n\n```python\n# 导入模块\nfrom PIL import Image\nimport os\n\nImageFilePath = 'C:/Users/lei/Desktop/lanyangyang.jpg'\n# 分割路径名、拓展名\nFilePath, FileExt = os.path.splitext(ImageFilePath)\n# 格式转换\nImage.open(ImageFilePath).save(\"{}.png\".format(FilePath))\n```\n\n#### 制作缩略图、图标\n\n```python\n# 导入模块\nfrom PIL import Image\n\nimage = Image.open(\"lanyangyang.jpg\", 'r')\nsize = 128, 128\n# 缩略图，改变图片大小\nimage.thumbnail(size)\nprint(image.size)  # (128, 72)\nimage.save(\"lyy.ico\", \"JPEG\")\n\n```\n\n缩略图效果：\n\n![](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/lyy.ico)\n\n### 3 案例\n\n#### 生成验证码\n\n```python\nfrom PIL import Image, ImageDraw, ImageFont, ImageFilter\nimport random\n\n\n# 随机生成字符\ndef rndChar():\n    txt_list = list()\n    txt_list.extend([i for i in range(65, 91)])  # 大写字母\n    txt_list.extend([i for i in range(97, 123)])  # 小写字母\n    txt_list.extend([i for i in range(48, 58)])  # 数字\n    select_index = random.choice(txt_list)  # 随机选择\n    return chr(select_index)  # chr返回整数对应的 ASCII 字符\n\n\n# 随机背景颜色\ndef rndBgColor():\n    return tuple(random.randint(64, 255) for i in range(3))\n\n\n# 随机字符颜色\ndef rndTxtColor():\n    return (1, random.randint(32, 127), random.randint(32, 127), random.randint(32, 127))\n\n\ndef go():\n    # 设置图片的宽高：\n    width, height = 60 * 4, 60\n    # 创建新图片，参数分别为：mode, size, color.\n    image = Image.new('RGB', (width, height), color=(255, 255, 255))\n    # 创建Font对象:\n    font = ImageFont.truetype('C:/Windows/Fonts/Arial.ttf', 36)\n    # 创建Draw对象:\n    draw = ImageDraw.Draw(image)\n    # 填充背景，每个像素随机颜色:\n    for x in range(width):\n        for y in range(height):\n            draw.point((x, y), fill=rndBgColor())\n    # 输出随机验证码\n    for t in range(4):\n        draw.text((60 * t + 10, 10), rndChar(), fill=rndTxtColor(), font=font)\n    image.show()\n    image.save(\"Verification-Code.jpg\")\n    # 模糊处理\n    image = image.filter(ImageFilter.BLUR)\n    image.show()\n    image.save(\"Verification-Code-blur.jpg\")\n\n\ngo()\n\n```\n\n生成的验证码图片：\n\n![Verification-Code](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/Verification-Code.jpg)\n\n模糊处理后的：\n\n![Verification-Code-blur](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/Verification-Code-blur.jpg)\n","slug":"2021-04-02-Python图片处理模块Pillow","published":1,"updated":"2022-03-25T15:30:39.000Z","comments":1,"photos":[],"link":"","_id":"cl792rm15000qtkinaerw5ces","content":"<h1 id=\"Python图片处理模块Pillow\"><a href=\"#Python图片处理模块Pillow\" class=\"headerlink\" title=\"Python图片处理模块Pillow\"></a>Python图片处理模块Pillow</h1><p>PIL：Python Imaging Library，是Python平台事实上的图像处理标准库，但PIL年久失修，仅支持到Python 2.7。于是一群志愿者在PIL的基础上创建了兼容的版本，名字叫<a class=\"link\"   href=\"https://github.com/python-pillow/Pillow\" >Pillow<i class=\"fas fa-external-link-alt\"></i></a>，支持最新Python 3.x，作为PIL的替代版本。</p>\n<p>以这张懒羊羊的图片为例介绍基本用法：</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/lanyangyang.jpg\"\n                     \n                ></p>\n<span id=\"more\"></span>\n\n\n\n<h3 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1. 安装\"></a>1. 安装</h3><p>在命令行下通过pip安装：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install pillow</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"图片属性\"><a href=\"#图片属性\" class=\"headerlink\" title=\"图片属性\"></a>图片属性</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\">ImageFilePath = <span class=\"string\">&#x27;C:/Users/lei/Desktop/lanyangyang.jpg&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 以只读模式打开图片</span></span><br><span class=\"line\">image = Image.<span class=\"built_in\">open</span>(ImageFilePath, <span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 获取图片属性</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(image)</span><br><span class=\"line\"><span class=\"comment\"># 获取图片大小</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(image.size)</span><br><span class=\"line\"><span class=\"comment\"># 获取图片源格式，JPEG，PNG等</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(image.<span class=\"built_in\">format</span>)</span><br><span class=\"line\"><span class=\"comment\"># 获取图片模式,常见有：L（灰度图像），RGB和CMYK（真彩图像）</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(image.mode)</span><br><span class=\"line\"><span class=\"comment\"># 转化为灰度图像</span></span><br><span class=\"line\">im2 = image.convert(<span class=\"string\">&#x27;L&#x27;</span>)</span><br><span class=\"line\">im2.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出结果如下：</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=1920x1080 at 0x230C953EFA0&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># (1920, 1080)</span></span><br><span class=\"line\"><span class=\"comment\"># JPEG</span></span><br><span class=\"line\"><span class=\"comment\"># RGB</span></span><br><span class=\"line\"><span class=\"comment\"># L</span></span><br></pre></td></tr></table></figure>\n\n<p>转化为灰度后：</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/lyy-L.jpg\"\n                      alt=\"lyy-L\"\n                ></p>\n<h4 id=\"格式转换\"><a href=\"#格式转换\" class=\"headerlink\" title=\"格式转换\"></a>格式转换</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\">ImageFilePath = <span class=\"string\">&#x27;C:/Users/lei/Desktop/lanyangyang.jpg&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 分割路径名、拓展名</span></span><br><span class=\"line\">FilePath, FileExt = os.path.splitext(ImageFilePath)</span><br><span class=\"line\"><span class=\"comment\"># 格式转换</span></span><br><span class=\"line\">Image.<span class=\"built_in\">open</span>(ImageFilePath).save(<span class=\"string\">&quot;&#123;&#125;.png&quot;</span>.<span class=\"built_in\">format</span>(FilePath))</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"制作缩略图、图标\"><a href=\"#制作缩略图、图标\" class=\"headerlink\" title=\"制作缩略图、图标\"></a>制作缩略图、图标</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\">image = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;lanyangyang.jpg&quot;</span>, <span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">size = <span class=\"number\">128</span>, <span class=\"number\">128</span></span><br><span class=\"line\"><span class=\"comment\"># 缩略图，改变图片大小</span></span><br><span class=\"line\">image.thumbnail(size)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(image.size)  <span class=\"comment\"># (128, 72)</span></span><br><span class=\"line\">image.save(<span class=\"string\">&quot;lyy.ico&quot;</span>, <span class=\"string\">&quot;JPEG&quot;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>缩略图效果：</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/lyy.ico\"\n                     \n                ></p>\n<h3 id=\"3-案例\"><a href=\"#3-案例\" class=\"headerlink\" title=\"3 案例\"></a>3 案例</h3><h4 id=\"生成验证码\"><a href=\"#生成验证码\" class=\"headerlink\" title=\"生成验证码\"></a>生成验证码</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image, ImageDraw, ImageFont, ImageFilter</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 随机生成字符</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rndChar</span>():</span><br><span class=\"line\">    txt_list = <span class=\"built_in\">list</span>()</span><br><span class=\"line\">    txt_list.extend([i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">65</span>, <span class=\"number\">91</span>)])  <span class=\"comment\"># 大写字母</span></span><br><span class=\"line\">    txt_list.extend([i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">97</span>, <span class=\"number\">123</span>)])  <span class=\"comment\"># 小写字母</span></span><br><span class=\"line\">    txt_list.extend([i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">48</span>, <span class=\"number\">58</span>)])  <span class=\"comment\"># 数字</span></span><br><span class=\"line\">    select_index = random.choice(txt_list)  <span class=\"comment\"># 随机选择</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">chr</span>(select_index)  <span class=\"comment\"># chr返回整数对应的 ASCII 字符</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 随机背景颜色</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rndBgColor</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">tuple</span>(random.randint(<span class=\"number\">64</span>, <span class=\"number\">255</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 随机字符颜色</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rndTxtColor</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (<span class=\"number\">1</span>, random.randint(<span class=\"number\">32</span>, <span class=\"number\">127</span>), random.randint(<span class=\"number\">32</span>, <span class=\"number\">127</span>), random.randint(<span class=\"number\">32</span>, <span class=\"number\">127</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">go</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 设置图片的宽高：</span></span><br><span class=\"line\">    width, height = <span class=\"number\">60</span> * <span class=\"number\">4</span>, <span class=\"number\">60</span></span><br><span class=\"line\">    <span class=\"comment\"># 创建新图片，参数分别为：mode, size, color.</span></span><br><span class=\"line\">    image = Image.new(<span class=\"string\">&#x27;RGB&#x27;</span>, (width, height), color=(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>))</span><br><span class=\"line\">    <span class=\"comment\"># 创建Font对象:</span></span><br><span class=\"line\">    font = ImageFont.truetype(<span class=\"string\">&#x27;C:/Windows/Fonts/Arial.ttf&#x27;</span>, <span class=\"number\">36</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 创建Draw对象:</span></span><br><span class=\"line\">    draw = ImageDraw.Draw(image)</span><br><span class=\"line\">    <span class=\"comment\"># 填充背景，每个像素随机颜色:</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(width):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(height):</span><br><span class=\"line\">            draw.point((x, y), fill=rndBgColor())</span><br><span class=\"line\">    <span class=\"comment\"># 输出随机验证码</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>):</span><br><span class=\"line\">        draw.text((<span class=\"number\">60</span> * t + <span class=\"number\">10</span>, <span class=\"number\">10</span>), rndChar(), fill=rndTxtColor(), font=font)</span><br><span class=\"line\">    image.show()</span><br><span class=\"line\">    image.save(<span class=\"string\">&quot;Verification-Code.jpg&quot;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 模糊处理</span></span><br><span class=\"line\">    image = image.<span class=\"built_in\">filter</span>(ImageFilter.BLUR)</span><br><span class=\"line\">    image.show()</span><br><span class=\"line\">    image.save(<span class=\"string\">&quot;Verification-Code-blur.jpg&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">go()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>生成的验证码图片：</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/Verification-Code.jpg\"\n                      alt=\"Verification-Code\"\n                ></p>\n<p>模糊处理后的：</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/Verification-Code-blur.jpg\"\n                      alt=\"Verification-Code-blur\"\n                ></p>\n","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"<h1 id=\"Python图片处理模块Pillow\"><a href=\"#Python图片处理模块Pillow\" class=\"headerlink\" title=\"Python图片处理模块Pillow\"></a>Python图片处理模块Pillow</h1><p>PIL：Python Imaging Library，是Python平台事实上的图像处理标准库，但PIL年久失修，仅支持到Python 2.7。于是一群志愿者在PIL的基础上创建了兼容的版本，名字叫<a class=\"link\"   href=\"https://github.com/python-pillow/Pillow\" >Pillow<i class=\"fas fa-external-link-alt\"></i></a>，支持最新Python 3.x，作为PIL的替代版本。</p>\n<p>以这张懒羊羊的图片为例介绍基本用法：</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/lanyangyang.jpg\"\n                     \n                ></p>","more":"<h3 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1. 安装\"></a>1. 安装</h3><p>在命令行下通过pip安装：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install pillow</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"图片属性\"><a href=\"#图片属性\" class=\"headerlink\" title=\"图片属性\"></a>图片属性</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\">ImageFilePath = <span class=\"string\">&#x27;C:/Users/lei/Desktop/lanyangyang.jpg&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 以只读模式打开图片</span></span><br><span class=\"line\">image = Image.<span class=\"built_in\">open</span>(ImageFilePath, <span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 获取图片属性</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(image)</span><br><span class=\"line\"><span class=\"comment\"># 获取图片大小</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(image.size)</span><br><span class=\"line\"><span class=\"comment\"># 获取图片源格式，JPEG，PNG等</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(image.<span class=\"built_in\">format</span>)</span><br><span class=\"line\"><span class=\"comment\"># 获取图片模式,常见有：L（灰度图像），RGB和CMYK（真彩图像）</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(image.mode)</span><br><span class=\"line\"><span class=\"comment\"># 转化为灰度图像</span></span><br><span class=\"line\">im2 = image.convert(<span class=\"string\">&#x27;L&#x27;</span>)</span><br><span class=\"line\">im2.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出结果如下：</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=1920x1080 at 0x230C953EFA0&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># (1920, 1080)</span></span><br><span class=\"line\"><span class=\"comment\"># JPEG</span></span><br><span class=\"line\"><span class=\"comment\"># RGB</span></span><br><span class=\"line\"><span class=\"comment\"># L</span></span><br></pre></td></tr></table></figure>\n\n<p>转化为灰度后：</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/lyy-L.jpg\"\n                      alt=\"lyy-L\"\n                ></p>\n<h4 id=\"格式转换\"><a href=\"#格式转换\" class=\"headerlink\" title=\"格式转换\"></a>格式转换</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\">ImageFilePath = <span class=\"string\">&#x27;C:/Users/lei/Desktop/lanyangyang.jpg&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 分割路径名、拓展名</span></span><br><span class=\"line\">FilePath, FileExt = os.path.splitext(ImageFilePath)</span><br><span class=\"line\"><span class=\"comment\"># 格式转换</span></span><br><span class=\"line\">Image.<span class=\"built_in\">open</span>(ImageFilePath).save(<span class=\"string\">&quot;&#123;&#125;.png&quot;</span>.<span class=\"built_in\">format</span>(FilePath))</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"制作缩略图、图标\"><a href=\"#制作缩略图、图标\" class=\"headerlink\" title=\"制作缩略图、图标\"></a>制作缩略图、图标</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\">image = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;lanyangyang.jpg&quot;</span>, <span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">size = <span class=\"number\">128</span>, <span class=\"number\">128</span></span><br><span class=\"line\"><span class=\"comment\"># 缩略图，改变图片大小</span></span><br><span class=\"line\">image.thumbnail(size)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(image.size)  <span class=\"comment\"># (128, 72)</span></span><br><span class=\"line\">image.save(<span class=\"string\">&quot;lyy.ico&quot;</span>, <span class=\"string\">&quot;JPEG&quot;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>缩略图效果：</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/lyy.ico\"\n                     \n                ></p>\n<h3 id=\"3-案例\"><a href=\"#3-案例\" class=\"headerlink\" title=\"3 案例\"></a>3 案例</h3><h4 id=\"生成验证码\"><a href=\"#生成验证码\" class=\"headerlink\" title=\"生成验证码\"></a>生成验证码</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image, ImageDraw, ImageFont, ImageFilter</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 随机生成字符</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rndChar</span>():</span><br><span class=\"line\">    txt_list = <span class=\"built_in\">list</span>()</span><br><span class=\"line\">    txt_list.extend([i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">65</span>, <span class=\"number\">91</span>)])  <span class=\"comment\"># 大写字母</span></span><br><span class=\"line\">    txt_list.extend([i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">97</span>, <span class=\"number\">123</span>)])  <span class=\"comment\"># 小写字母</span></span><br><span class=\"line\">    txt_list.extend([i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">48</span>, <span class=\"number\">58</span>)])  <span class=\"comment\"># 数字</span></span><br><span class=\"line\">    select_index = random.choice(txt_list)  <span class=\"comment\"># 随机选择</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">chr</span>(select_index)  <span class=\"comment\"># chr返回整数对应的 ASCII 字符</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 随机背景颜色</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rndBgColor</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">tuple</span>(random.randint(<span class=\"number\">64</span>, <span class=\"number\">255</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 随机字符颜色</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rndTxtColor</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (<span class=\"number\">1</span>, random.randint(<span class=\"number\">32</span>, <span class=\"number\">127</span>), random.randint(<span class=\"number\">32</span>, <span class=\"number\">127</span>), random.randint(<span class=\"number\">32</span>, <span class=\"number\">127</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">go</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 设置图片的宽高：</span></span><br><span class=\"line\">    width, height = <span class=\"number\">60</span> * <span class=\"number\">4</span>, <span class=\"number\">60</span></span><br><span class=\"line\">    <span class=\"comment\"># 创建新图片，参数分别为：mode, size, color.</span></span><br><span class=\"line\">    image = Image.new(<span class=\"string\">&#x27;RGB&#x27;</span>, (width, height), color=(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>))</span><br><span class=\"line\">    <span class=\"comment\"># 创建Font对象:</span></span><br><span class=\"line\">    font = ImageFont.truetype(<span class=\"string\">&#x27;C:/Windows/Fonts/Arial.ttf&#x27;</span>, <span class=\"number\">36</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 创建Draw对象:</span></span><br><span class=\"line\">    draw = ImageDraw.Draw(image)</span><br><span class=\"line\">    <span class=\"comment\"># 填充背景，每个像素随机颜色:</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(width):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(height):</span><br><span class=\"line\">            draw.point((x, y), fill=rndBgColor())</span><br><span class=\"line\">    <span class=\"comment\"># 输出随机验证码</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>):</span><br><span class=\"line\">        draw.text((<span class=\"number\">60</span> * t + <span class=\"number\">10</span>, <span class=\"number\">10</span>), rndChar(), fill=rndTxtColor(), font=font)</span><br><span class=\"line\">    image.show()</span><br><span class=\"line\">    image.save(<span class=\"string\">&quot;Verification-Code.jpg&quot;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 模糊处理</span></span><br><span class=\"line\">    image = image.<span class=\"built_in\">filter</span>(ImageFilter.BLUR)</span><br><span class=\"line\">    image.show()</span><br><span class=\"line\">    image.save(<span class=\"string\">&quot;Verification-Code-blur.jpg&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">go()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>生成的验证码图片：</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/Verification-Code.jpg\"\n                      alt=\"Verification-Code\"\n                ></p>\n<p>模糊处理后的：</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/Verification-Code-blur.jpg\"\n                      alt=\"Verification-Code-blur\"\n                ></p>"},{"layout":"post","title":"拓扑排序","subtitle":"orz","date":"2021-04-10T16:00:00.000Z","catalog":true,"_content":"\n# 拓扑排序\n\n之前做本科毕设的时候，不知道复杂的调度前后约束怎么编码输入到程序里，为此苦恼了许久，现在想想答案就在那里只是我没有去想罢了，它就是——拓扑排序。\n\n>对一个有向无环图(Directed Acyclic Graph简称DAG)G进行拓扑排序，是将G中所有顶点排成一个线性序列，使得图中任意一对顶点u和v，若边<u,v>∈E(G)，则u在线性序列中出现在v之前。通常，这样的线性序列称为满足拓扑次序(Topological Order)的序列，简称拓扑序列。\n\n<!--more-->\n\n## 1. 理论知识\n\n### 1.1 有向无环图\n\n**有向无环图**(Directed Acyclic Graph简称DAG)指的是一个无回路的有向图。其中：\n\n- 有向：两个节点之间的链接有方向\n- 无环：图中不存在闭环\n\n如下就是一个有向无环图。\n\n![image-20210411161658673](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/image-20210411161658673.png)\n\n拓扑图，拓扑结构图（TOPOLOGY）\n\n### 1.2 拓扑排序\n\n即对DAG中的节点排序，\n\n#### 条件\n\n1. 每个顶点出现且只出现一次。\n\n2. 若存在一条从顶点 A 到顶点 B 的路径，那么在序列中顶点 A 出现在顶点 B 的前面。\n\n只有对有向无环图（DAG）才有拓扑排序。\n\n#### 步骤\n\n1. 将边与边的关系确定，建立好入度表和邻接表。\n2. 从入度为0的点开始删除，如上图显然是1的入度为0，先删除。\n3. 更新入度表，若存在入度为0的点回到第二步。\n4. 若节点删除完，则得到拓扑排序结果，如下图得到排序结果为{ 1, 2, 4, 3, 5 }。\n\n![img](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/1414839-20190218145707887-2116959534.png)\n\n5. 若某一步存在所有点入度都不为0，则此图为有环图，如下图环中的节点入度都为1。\n\n![img](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/1414839-20190218150029800-726572364.png)\n\n通常，一个有向无环图可以有一个或多个拓扑排序序列。因为同一入度级别的点可以有不同的排序方式。\n\n## 2. python实现\n\n### 2.1 介绍\n\n`networkx`是`Python`的一个包，用于构建和操作复杂的图结构，提供分析图的算法。图是由顶点、边和可选的属性构成的数据结构，顶点表示数据，边是由两个顶点唯一确定的，表示两个顶点之间的关系。\n\n`matplotlib`是从`matlab`移植过来的用于数学计算画图的包，这里不做过多介绍。\n\n在命令行下通过`pip`安装`networkx`：\n\n```\npip install pillow\n```\n\n### 2.2 基本用法\n\n这里仅限于拓扑图相关的用法。\n\n```python\nimport networkx as nx\nimport matplotlib.pyplot as plt\n\n# 构建图\n# G = nx.Graph() # 无向图\nG = nx.DiGraph()  # 有向图\nG.add_node('A')  # 添加点\nG.add_nodes_from(['B', 'C', 'D'])  # 批量添加点\nG.add_edge('A', 'B')  # 添加边\nG.add_edges_from([('A', 'D'), ('C', 'B')])  # 批量添加边\n\n# 拓扑排序\nprint(G.in_degree)  # 入度\n# [('A', 0), ('B', 1), ('C', 1), ('D', 1)]\ns = list(topological_sort(G))  # 拓扑排序\nprint(s)  # ['A', 'D', 'B', 'C']\nall_s = list(all_topological_sorts(G))  # 所有拓扑排序\nprint(all_s)  # [['A', 'D', 'B', 'C'], ['A', 'B', 'C', 'D'], ['A', 'B', 'D', 'C']]\n\n\n#画图\nnx.draw(\n    G,\n    with_labels=True,\n    node_color='y',\n)\nplt.show()\n\n```\n\n![Figure_1](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/Figure_1.png)\n\n画出的图并不美观，每次运行都不一样，但结构是一样的。\n\n## 3 解决实际问题\n\n### 3.1 用矩阵表示前后约束关系\n\n以下图所示的生产问题为例，节点表示工序，节点间的顺序表示前后约束关系。节点上的数字不用管。\n\n![image-20210411165808220](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/image-20210411165808220.png)\n\n节点之间约束关系可以用01矩阵可以很好的表达并编码。如下所示，`a[0][3]==1`表示节点1和4之间存在顺序约束，0表示没有约束。\n\n```python\na = np.array([[0, 0, 0, 1, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 1, 1, 0, 0, 0],\n            [0, 0, 0, 0, 0, 1, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 1, 0, 0],\n            [0, 0, 0, 0, 0, 0, 1, 1, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 1],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0]])\n```\n\n### 3.2 通过计算入度，结合递归的思想来进行拓扑排序\n\n如下：\n\n```flow\nst=>start: 开始\ninit=>operation: 初始化有向无环图DAG\nselect=>operation: 1.计寻找所有入度为0的点作为候选集\n2.在候选集中选择点，记录作为路径\n3.在DAG图中删除该节点\ncond=>condition: 是否遍历完成\ne=>end: 结束\n\nst->init->select->cond\ncond(no)->select\ncond(yes)->e\n\n```\n","source":"_posts/2021-04-11-拓扑排序.md","raw":"---\nlayout:     post\ntitle:      拓扑排序\nsubtitle:   orz\ndate:       2021-04-11\n# author:     LW\n# header-img: img/post-bg-dark.jpg\ncatalog: true\n\ntags: \n    - 笔记\ncategories: \n    - 笔记\n---\n\n# 拓扑排序\n\n之前做本科毕设的时候，不知道复杂的调度前后约束怎么编码输入到程序里，为此苦恼了许久，现在想想答案就在那里只是我没有去想罢了，它就是——拓扑排序。\n\n>对一个有向无环图(Directed Acyclic Graph简称DAG)G进行拓扑排序，是将G中所有顶点排成一个线性序列，使得图中任意一对顶点u和v，若边<u,v>∈E(G)，则u在线性序列中出现在v之前。通常，这样的线性序列称为满足拓扑次序(Topological Order)的序列，简称拓扑序列。\n\n<!--more-->\n\n## 1. 理论知识\n\n### 1.1 有向无环图\n\n**有向无环图**(Directed Acyclic Graph简称DAG)指的是一个无回路的有向图。其中：\n\n- 有向：两个节点之间的链接有方向\n- 无环：图中不存在闭环\n\n如下就是一个有向无环图。\n\n![image-20210411161658673](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/image-20210411161658673.png)\n\n拓扑图，拓扑结构图（TOPOLOGY）\n\n### 1.2 拓扑排序\n\n即对DAG中的节点排序，\n\n#### 条件\n\n1. 每个顶点出现且只出现一次。\n\n2. 若存在一条从顶点 A 到顶点 B 的路径，那么在序列中顶点 A 出现在顶点 B 的前面。\n\n只有对有向无环图（DAG）才有拓扑排序。\n\n#### 步骤\n\n1. 将边与边的关系确定，建立好入度表和邻接表。\n2. 从入度为0的点开始删除，如上图显然是1的入度为0，先删除。\n3. 更新入度表，若存在入度为0的点回到第二步。\n4. 若节点删除完，则得到拓扑排序结果，如下图得到排序结果为{ 1, 2, 4, 3, 5 }。\n\n![img](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/1414839-20190218145707887-2116959534.png)\n\n5. 若某一步存在所有点入度都不为0，则此图为有环图，如下图环中的节点入度都为1。\n\n![img](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/1414839-20190218150029800-726572364.png)\n\n通常，一个有向无环图可以有一个或多个拓扑排序序列。因为同一入度级别的点可以有不同的排序方式。\n\n## 2. python实现\n\n### 2.1 介绍\n\n`networkx`是`Python`的一个包，用于构建和操作复杂的图结构，提供分析图的算法。图是由顶点、边和可选的属性构成的数据结构，顶点表示数据，边是由两个顶点唯一确定的，表示两个顶点之间的关系。\n\n`matplotlib`是从`matlab`移植过来的用于数学计算画图的包，这里不做过多介绍。\n\n在命令行下通过`pip`安装`networkx`：\n\n```\npip install pillow\n```\n\n### 2.2 基本用法\n\n这里仅限于拓扑图相关的用法。\n\n```python\nimport networkx as nx\nimport matplotlib.pyplot as plt\n\n# 构建图\n# G = nx.Graph() # 无向图\nG = nx.DiGraph()  # 有向图\nG.add_node('A')  # 添加点\nG.add_nodes_from(['B', 'C', 'D'])  # 批量添加点\nG.add_edge('A', 'B')  # 添加边\nG.add_edges_from([('A', 'D'), ('C', 'B')])  # 批量添加边\n\n# 拓扑排序\nprint(G.in_degree)  # 入度\n# [('A', 0), ('B', 1), ('C', 1), ('D', 1)]\ns = list(topological_sort(G))  # 拓扑排序\nprint(s)  # ['A', 'D', 'B', 'C']\nall_s = list(all_topological_sorts(G))  # 所有拓扑排序\nprint(all_s)  # [['A', 'D', 'B', 'C'], ['A', 'B', 'C', 'D'], ['A', 'B', 'D', 'C']]\n\n\n#画图\nnx.draw(\n    G,\n    with_labels=True,\n    node_color='y',\n)\nplt.show()\n\n```\n\n![Figure_1](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/Figure_1.png)\n\n画出的图并不美观，每次运行都不一样，但结构是一样的。\n\n## 3 解决实际问题\n\n### 3.1 用矩阵表示前后约束关系\n\n以下图所示的生产问题为例，节点表示工序，节点间的顺序表示前后约束关系。节点上的数字不用管。\n\n![image-20210411165808220](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/image-20210411165808220.png)\n\n节点之间约束关系可以用01矩阵可以很好的表达并编码。如下所示，`a[0][3]==1`表示节点1和4之间存在顺序约束，0表示没有约束。\n\n```python\na = np.array([[0, 0, 0, 1, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 1, 1, 0, 0, 0],\n            [0, 0, 0, 0, 0, 1, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 1, 0, 0],\n            [0, 0, 0, 0, 0, 0, 1, 1, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 1],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0]])\n```\n\n### 3.2 通过计算入度，结合递归的思想来进行拓扑排序\n\n如下：\n\n```flow\nst=>start: 开始\ninit=>operation: 初始化有向无环图DAG\nselect=>operation: 1.计寻找所有入度为0的点作为候选集\n2.在候选集中选择点，记录作为路径\n3.在DAG图中删除该节点\ncond=>condition: 是否遍历完成\ne=>end: 结束\n\nst->init->select->cond\ncond(no)->select\ncond(yes)->e\n\n```\n","slug":"2021-04-11-拓扑排序","published":1,"updated":"2022-04-01T18:08:39.000Z","comments":1,"photos":[],"link":"","_id":"cl792rm18000ttkinapvp1aht","content":"<h1 id=\"拓扑排序\"><a href=\"#拓扑排序\" class=\"headerlink\" title=\"拓扑排序\"></a>拓扑排序</h1><p>之前做本科毕设的时候，不知道复杂的调度前后约束怎么编码输入到程序里，为此苦恼了许久，现在想想答案就在那里只是我没有去想罢了，它就是——拓扑排序。</p>\n<blockquote>\n<p>对一个有向无环图(Directed Acyclic Graph简称DAG)G进行拓扑排序，是将G中所有顶点排成一个线性序列，使得图中任意一对顶点u和v，若边&lt;u,v&gt;∈E(G)，则u在线性序列中出现在v之前。通常，这样的线性序列称为满足拓扑次序(Topological Order)的序列，简称拓扑序列。</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<h2 id=\"1-理论知识\"><a href=\"#1-理论知识\" class=\"headerlink\" title=\"1. 理论知识\"></a>1. 理论知识</h2><h3 id=\"1-1-有向无环图\"><a href=\"#1-1-有向无环图\" class=\"headerlink\" title=\"1.1 有向无环图\"></a>1.1 有向无环图</h3><p><strong>有向无环图</strong>(Directed Acyclic Graph简称DAG)指的是一个无回路的有向图。其中：</p>\n<ul>\n<li>有向：两个节点之间的链接有方向</li>\n<li>无环：图中不存在闭环</li>\n</ul>\n<p>如下就是一个有向无环图。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/image-20210411161658673.png\"\n                      alt=\"image-20210411161658673\"\n                ></p>\n<p>拓扑图，拓扑结构图（TOPOLOGY）</p>\n<h3 id=\"1-2-拓扑排序\"><a href=\"#1-2-拓扑排序\" class=\"headerlink\" title=\"1.2 拓扑排序\"></a>1.2 拓扑排序</h3><p>即对DAG中的节点排序，</p>\n<h4 id=\"条件\"><a href=\"#条件\" class=\"headerlink\" title=\"条件\"></a>条件</h4><ol>\n<li><p>每个顶点出现且只出现一次。</p>\n</li>\n<li><p>若存在一条从顶点 A 到顶点 B 的路径，那么在序列中顶点 A 出现在顶点 B 的前面。</p>\n</li>\n</ol>\n<p>只有对有向无环图（DAG）才有拓扑排序。</p>\n<h4 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h4><ol>\n<li>将边与边的关系确定，建立好入度表和邻接表。</li>\n<li>从入度为0的点开始删除，如上图显然是1的入度为0，先删除。</li>\n<li>更新入度表，若存在入度为0的点回到第二步。</li>\n<li>若节点删除完，则得到拓扑排序结果，如下图得到排序结果为{ 1, 2, 4, 3, 5 }。</li>\n</ol>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/1414839-20190218145707887-2116959534.png\"\n                      alt=\"img\"\n                ></p>\n<ol start=\"5\">\n<li>若某一步存在所有点入度都不为0，则此图为有环图，如下图环中的节点入度都为1。</li>\n</ol>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/1414839-20190218150029800-726572364.png\"\n                      alt=\"img\"\n                ></p>\n<p>通常，一个有向无环图可以有一个或多个拓扑排序序列。因为同一入度级别的点可以有不同的排序方式。</p>\n<h2 id=\"2-python实现\"><a href=\"#2-python实现\" class=\"headerlink\" title=\"2. python实现\"></a>2. python实现</h2><h3 id=\"2-1-介绍\"><a href=\"#2-1-介绍\" class=\"headerlink\" title=\"2.1 介绍\"></a>2.1 介绍</h3><p><code>networkx</code>是<code>Python</code>的一个包，用于构建和操作复杂的图结构，提供分析图的算法。图是由顶点、边和可选的属性构成的数据结构，顶点表示数据，边是由两个顶点唯一确定的，表示两个顶点之间的关系。</p>\n<p><code>matplotlib</code>是从<code>matlab</code>移植过来的用于数学计算画图的包，这里不做过多介绍。</p>\n<p>在命令行下通过<code>pip</code>安装<code>networkx</code>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install pillow</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-基本用法\"><a href=\"#2-2-基本用法\" class=\"headerlink\" title=\"2.2 基本用法\"></a>2.2 基本用法</h3><p>这里仅限于拓扑图相关的用法。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> networkx <span class=\"keyword\">as</span> nx</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建图</span></span><br><span class=\"line\"><span class=\"comment\"># G = nx.Graph() # 无向图</span></span><br><span class=\"line\">G = nx.DiGraph()  <span class=\"comment\"># 有向图</span></span><br><span class=\"line\">G.add_node(<span class=\"string\">&#x27;A&#x27;</span>)  <span class=\"comment\"># 添加点</span></span><br><span class=\"line\">G.add_nodes_from([<span class=\"string\">&#x27;B&#x27;</span>, <span class=\"string\">&#x27;C&#x27;</span>, <span class=\"string\">&#x27;D&#x27;</span>])  <span class=\"comment\"># 批量添加点</span></span><br><span class=\"line\">G.add_edge(<span class=\"string\">&#x27;A&#x27;</span>, <span class=\"string\">&#x27;B&#x27;</span>)  <span class=\"comment\"># 添加边</span></span><br><span class=\"line\">G.add_edges_from([(<span class=\"string\">&#x27;A&#x27;</span>, <span class=\"string\">&#x27;D&#x27;</span>), (<span class=\"string\">&#x27;C&#x27;</span>, <span class=\"string\">&#x27;B&#x27;</span>)])  <span class=\"comment\"># 批量添加边</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 拓扑排序</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(G.in_degree)  <span class=\"comment\"># 入度</span></span><br><span class=\"line\"><span class=\"comment\"># [(&#x27;A&#x27;, 0), (&#x27;B&#x27;, 1), (&#x27;C&#x27;, 1), (&#x27;D&#x27;, 1)]</span></span><br><span class=\"line\">s = <span class=\"built_in\">list</span>(topological_sort(G))  <span class=\"comment\"># 拓扑排序</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(s)  <span class=\"comment\"># [&#x27;A&#x27;, &#x27;D&#x27;, &#x27;B&#x27;, &#x27;C&#x27;]</span></span><br><span class=\"line\">all_s = <span class=\"built_in\">list</span>(all_topological_sorts(G))  <span class=\"comment\"># 所有拓扑排序</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(all_s)  <span class=\"comment\"># [[&#x27;A&#x27;, &#x27;D&#x27;, &#x27;B&#x27;, &#x27;C&#x27;], [&#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;, &#x27;D&#x27;], [&#x27;A&#x27;, &#x27;B&#x27;, &#x27;D&#x27;, &#x27;C&#x27;]]</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#画图</span></span><br><span class=\"line\">nx.draw(</span><br><span class=\"line\">    G,</span><br><span class=\"line\">    with_labels=<span class=\"literal\">True</span>,</span><br><span class=\"line\">    node_color=<span class=\"string\">&#x27;y&#x27;</span>,</span><br><span class=\"line\">)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/Figure_1.png\"\n                      alt=\"Figure_1\"\n                ></p>\n<p>画出的图并不美观，每次运行都不一样，但结构是一样的。</p>\n<h2 id=\"3-解决实际问题\"><a href=\"#3-解决实际问题\" class=\"headerlink\" title=\"3 解决实际问题\"></a>3 解决实际问题</h2><h3 id=\"3-1-用矩阵表示前后约束关系\"><a href=\"#3-1-用矩阵表示前后约束关系\" class=\"headerlink\" title=\"3.1 用矩阵表示前后约束关系\"></a>3.1 用矩阵表示前后约束关系</h3><p>以下图所示的生产问题为例，节点表示工序，节点间的顺序表示前后约束关系。节点上的数字不用管。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/image-20210411165808220.png\"\n                      alt=\"image-20210411165808220\"\n                ></p>\n<p>节点之间约束关系可以用01矩阵可以很好的表达并编码。如下所示，<code>a[0][3]==1</code>表示节点1和4之间存在顺序约束，0表示没有约束。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = np.array([[<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">            [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">            [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">            [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">            [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">            [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">            [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">            [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">            [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]])</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-通过计算入度，结合递归的思想来进行拓扑排序\"><a href=\"#3-2-通过计算入度，结合递归的思想来进行拓扑排序\" class=\"headerlink\" title=\"3.2 通过计算入度，结合递归的思想来进行拓扑排序\"></a>3.2 通过计算入度，结合递归的思想来进行拓扑排序</h3><p>如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st=&gt;start: 开始</span><br><span class=\"line\">init=&gt;operation: 初始化有向无环图DAG</span><br><span class=\"line\">select=&gt;operation: 1.计寻找所有入度为0的点作为候选集</span><br><span class=\"line\">2.在候选集中选择点，记录作为路径</span><br><span class=\"line\">3.在DAG图中删除该节点</span><br><span class=\"line\">cond=&gt;condition: 是否遍历完成</span><br><span class=\"line\">e=&gt;end: 结束</span><br><span class=\"line\"></span><br><span class=\"line\">st-&gt;init-&gt;select-&gt;cond</span><br><span class=\"line\">cond(no)-&gt;select</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"<h1 id=\"拓扑排序\"><a href=\"#拓扑排序\" class=\"headerlink\" title=\"拓扑排序\"></a>拓扑排序</h1><p>之前做本科毕设的时候，不知道复杂的调度前后约束怎么编码输入到程序里，为此苦恼了许久，现在想想答案就在那里只是我没有去想罢了，它就是——拓扑排序。</p>\n<blockquote>\n<p>对一个有向无环图(Directed Acyclic Graph简称DAG)G进行拓扑排序，是将G中所有顶点排成一个线性序列，使得图中任意一对顶点u和v，若边&lt;u,v&gt;∈E(G)，则u在线性序列中出现在v之前。通常，这样的线性序列称为满足拓扑次序(Topological Order)的序列，简称拓扑序列。</p>\n</blockquote>","more":"<h2 id=\"1-理论知识\"><a href=\"#1-理论知识\" class=\"headerlink\" title=\"1. 理论知识\"></a>1. 理论知识</h2><h3 id=\"1-1-有向无环图\"><a href=\"#1-1-有向无环图\" class=\"headerlink\" title=\"1.1 有向无环图\"></a>1.1 有向无环图</h3><p><strong>有向无环图</strong>(Directed Acyclic Graph简称DAG)指的是一个无回路的有向图。其中：</p>\n<ul>\n<li>有向：两个节点之间的链接有方向</li>\n<li>无环：图中不存在闭环</li>\n</ul>\n<p>如下就是一个有向无环图。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/image-20210411161658673.png\"\n                      alt=\"image-20210411161658673\"\n                ></p>\n<p>拓扑图，拓扑结构图（TOPOLOGY）</p>\n<h3 id=\"1-2-拓扑排序\"><a href=\"#1-2-拓扑排序\" class=\"headerlink\" title=\"1.2 拓扑排序\"></a>1.2 拓扑排序</h3><p>即对DAG中的节点排序，</p>\n<h4 id=\"条件\"><a href=\"#条件\" class=\"headerlink\" title=\"条件\"></a>条件</h4><ol>\n<li><p>每个顶点出现且只出现一次。</p>\n</li>\n<li><p>若存在一条从顶点 A 到顶点 B 的路径，那么在序列中顶点 A 出现在顶点 B 的前面。</p>\n</li>\n</ol>\n<p>只有对有向无环图（DAG）才有拓扑排序。</p>\n<h4 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h4><ol>\n<li>将边与边的关系确定，建立好入度表和邻接表。</li>\n<li>从入度为0的点开始删除，如上图显然是1的入度为0，先删除。</li>\n<li>更新入度表，若存在入度为0的点回到第二步。</li>\n<li>若节点删除完，则得到拓扑排序结果，如下图得到排序结果为{ 1, 2, 4, 3, 5 }。</li>\n</ol>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/1414839-20190218145707887-2116959534.png\"\n                      alt=\"img\"\n                ></p>\n<ol start=\"5\">\n<li>若某一步存在所有点入度都不为0，则此图为有环图，如下图环中的节点入度都为1。</li>\n</ol>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/1414839-20190218150029800-726572364.png\"\n                      alt=\"img\"\n                ></p>\n<p>通常，一个有向无环图可以有一个或多个拓扑排序序列。因为同一入度级别的点可以有不同的排序方式。</p>\n<h2 id=\"2-python实现\"><a href=\"#2-python实现\" class=\"headerlink\" title=\"2. python实现\"></a>2. python实现</h2><h3 id=\"2-1-介绍\"><a href=\"#2-1-介绍\" class=\"headerlink\" title=\"2.1 介绍\"></a>2.1 介绍</h3><p><code>networkx</code>是<code>Python</code>的一个包，用于构建和操作复杂的图结构，提供分析图的算法。图是由顶点、边和可选的属性构成的数据结构，顶点表示数据，边是由两个顶点唯一确定的，表示两个顶点之间的关系。</p>\n<p><code>matplotlib</code>是从<code>matlab</code>移植过来的用于数学计算画图的包，这里不做过多介绍。</p>\n<p>在命令行下通过<code>pip</code>安装<code>networkx</code>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install pillow</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-基本用法\"><a href=\"#2-2-基本用法\" class=\"headerlink\" title=\"2.2 基本用法\"></a>2.2 基本用法</h3><p>这里仅限于拓扑图相关的用法。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> networkx <span class=\"keyword\">as</span> nx</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建图</span></span><br><span class=\"line\"><span class=\"comment\"># G = nx.Graph() # 无向图</span></span><br><span class=\"line\">G = nx.DiGraph()  <span class=\"comment\"># 有向图</span></span><br><span class=\"line\">G.add_node(<span class=\"string\">&#x27;A&#x27;</span>)  <span class=\"comment\"># 添加点</span></span><br><span class=\"line\">G.add_nodes_from([<span class=\"string\">&#x27;B&#x27;</span>, <span class=\"string\">&#x27;C&#x27;</span>, <span class=\"string\">&#x27;D&#x27;</span>])  <span class=\"comment\"># 批量添加点</span></span><br><span class=\"line\">G.add_edge(<span class=\"string\">&#x27;A&#x27;</span>, <span class=\"string\">&#x27;B&#x27;</span>)  <span class=\"comment\"># 添加边</span></span><br><span class=\"line\">G.add_edges_from([(<span class=\"string\">&#x27;A&#x27;</span>, <span class=\"string\">&#x27;D&#x27;</span>), (<span class=\"string\">&#x27;C&#x27;</span>, <span class=\"string\">&#x27;B&#x27;</span>)])  <span class=\"comment\"># 批量添加边</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 拓扑排序</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(G.in_degree)  <span class=\"comment\"># 入度</span></span><br><span class=\"line\"><span class=\"comment\"># [(&#x27;A&#x27;, 0), (&#x27;B&#x27;, 1), (&#x27;C&#x27;, 1), (&#x27;D&#x27;, 1)]</span></span><br><span class=\"line\">s = <span class=\"built_in\">list</span>(topological_sort(G))  <span class=\"comment\"># 拓扑排序</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(s)  <span class=\"comment\"># [&#x27;A&#x27;, &#x27;D&#x27;, &#x27;B&#x27;, &#x27;C&#x27;]</span></span><br><span class=\"line\">all_s = <span class=\"built_in\">list</span>(all_topological_sorts(G))  <span class=\"comment\"># 所有拓扑排序</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(all_s)  <span class=\"comment\"># [[&#x27;A&#x27;, &#x27;D&#x27;, &#x27;B&#x27;, &#x27;C&#x27;], [&#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;, &#x27;D&#x27;], [&#x27;A&#x27;, &#x27;B&#x27;, &#x27;D&#x27;, &#x27;C&#x27;]]</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#画图</span></span><br><span class=\"line\">nx.draw(</span><br><span class=\"line\">    G,</span><br><span class=\"line\">    with_labels=<span class=\"literal\">True</span>,</span><br><span class=\"line\">    node_color=<span class=\"string\">&#x27;y&#x27;</span>,</span><br><span class=\"line\">)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/Figure_1.png\"\n                      alt=\"Figure_1\"\n                ></p>\n<p>画出的图并不美观，每次运行都不一样，但结构是一样的。</p>\n<h2 id=\"3-解决实际问题\"><a href=\"#3-解决实际问题\" class=\"headerlink\" title=\"3 解决实际问题\"></a>3 解决实际问题</h2><h3 id=\"3-1-用矩阵表示前后约束关系\"><a href=\"#3-1-用矩阵表示前后约束关系\" class=\"headerlink\" title=\"3.1 用矩阵表示前后约束关系\"></a>3.1 用矩阵表示前后约束关系</h3><p>以下图所示的生产问题为例，节点表示工序，节点间的顺序表示前后约束关系。节点上的数字不用管。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/image-20210411165808220.png\"\n                      alt=\"image-20210411165808220\"\n                ></p>\n<p>节点之间约束关系可以用01矩阵可以很好的表达并编码。如下所示，<code>a[0][3]==1</code>表示节点1和4之间存在顺序约束，0表示没有约束。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = np.array([[<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">            [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">            [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">            [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">            [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">            [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">            [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">            [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">            [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]])</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-通过计算入度，结合递归的思想来进行拓扑排序\"><a href=\"#3-2-通过计算入度，结合递归的思想来进行拓扑排序\" class=\"headerlink\" title=\"3.2 通过计算入度，结合递归的思想来进行拓扑排序\"></a>3.2 通过计算入度，结合递归的思想来进行拓扑排序</h3><p>如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st=&gt;start: 开始</span><br><span class=\"line\">init=&gt;operation: 初始化有向无环图DAG</span><br><span class=\"line\">select=&gt;operation: 1.计寻找所有入度为0的点作为候选集</span><br><span class=\"line\">2.在候选集中选择点，记录作为路径</span><br><span class=\"line\">3.在DAG图中删除该节点</span><br><span class=\"line\">cond=&gt;condition: 是否遍历完成</span><br><span class=\"line\">e=&gt;end: 结束</span><br><span class=\"line\"></span><br><span class=\"line\">st-&gt;init-&gt;select-&gt;cond</span><br><span class=\"line\">cond(no)-&gt;select</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"最近想听的歌（长期更新）","subtitle":"把想听的歌做成的一个合集","date":"2021-04-25T16:00:00.000Z","author":"LW","header-img":"img/post-bg-music.jpg","catalog":true,"_content":"\n因为都分布在不同平台不同形式，这样可以做一个合集方便看hhh\n\n能放在这里的，都是最近我认为很有味道还没听腻的那种，若是哪天听腻了就会默默删掉了。\n\n当然有些歌是听不腻的，若是听多了印在脑子里了，可以独自慢慢回味，也就没有放在这里的必要了。\n\n<!--more-->\n\n### 《亡命之徒》（《出发》）——纵贯线\n\n<iframe src=\"//player.bilibili.com/player.html?aid=247954746&bvid=BV1bv411j72a&cid=332732947&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n### Plastic Love 塑料爱\n\n<iframe src=\"//player.bilibili.com/player.html?aid=31206044&bvid=BV1JW411d7GA&cid=54519736&page=2\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<iframe src=\"//player.bilibili.com/player.html?aid=75885850&bvid=BV1vJ411U7Ji&cid=132451138&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n### 《恋爱中的犀牛》+《氧气》\n\n03版恋爱的犀牛唱段，郝蕾演唱。\n\n<iframe src=\"//player.bilibili.com/player.html?aid=7285048&bvid=BV1Gs411s7Mi&cid=11908586&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n### 《白日梦蓝》——刺猬乐队\n\n特指这个现场版，大提琴和吉他的配合听着有一种梦幻的感觉。\n\n<iframe src=\"//player.bilibili.com/player.html?aid=668247016&bvid=BV1ia4y1e79T&cid=191610558&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n### 《生之响往》——刺猬乐队\n\n<iframe src=\"//player.bilibili.com/player.html?aid=797892538&bvid=BV18y4y167pk&cid=260758347&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n### 《生如夏花》《Forever Young》《平凡之路》——朴树\n\n朴树身上总有一种令人向往的纯真和真挚。\n\n<iframe src=\"//player.bilibili.com/player.html?aid=841303764&bvid=BV1u54y1q79i&cid=211384045&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n### 《 No Fear In My Heart 》——朴树\n\n你在害怕什么 ~\n\n神级现场版，每次看和看上面的刺猬乐队的歌的时候，总感觉得去补一补《乐队的夏天》第一季。\n\n<iframe src=\"//player.bilibili.com/player.html?aid=83340529&bvid=BV1tJ411H7h4&cid=142435321&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n### 《波西米亚狂想曲》——Queen\n\n我曾在这首歌和《 No Fear In My Heart 》中寻找救赎——记忆中也就只有这两首歌。\n\n<iframe src=\"//player.bilibili.com/player.html?aid=501148064&bvid=BV1VK411u7vy&cid=282062140&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n","source":"_posts/2021-04-26-最近想听的歌.md","raw":"---\nlayout:     post\ntitle:      最近想听的歌（长期更新）\nsubtitle:   把想听的歌做成的一个合集\ndate:       2021-04-26\nauthor:     LW\nheader-img: img/post-bg-music.jpg\ncatalog: true\ntags: \n    - 音乐\n    - 娱乐\ncategories: \n    - 收藏\n    - music\n---\n\n因为都分布在不同平台不同形式，这样可以做一个合集方便看hhh\n\n能放在这里的，都是最近我认为很有味道还没听腻的那种，若是哪天听腻了就会默默删掉了。\n\n当然有些歌是听不腻的，若是听多了印在脑子里了，可以独自慢慢回味，也就没有放在这里的必要了。\n\n<!--more-->\n\n### 《亡命之徒》（《出发》）——纵贯线\n\n<iframe src=\"//player.bilibili.com/player.html?aid=247954746&bvid=BV1bv411j72a&cid=332732947&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n### Plastic Love 塑料爱\n\n<iframe src=\"//player.bilibili.com/player.html?aid=31206044&bvid=BV1JW411d7GA&cid=54519736&page=2\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<iframe src=\"//player.bilibili.com/player.html?aid=75885850&bvid=BV1vJ411U7Ji&cid=132451138&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n### 《恋爱中的犀牛》+《氧气》\n\n03版恋爱的犀牛唱段，郝蕾演唱。\n\n<iframe src=\"//player.bilibili.com/player.html?aid=7285048&bvid=BV1Gs411s7Mi&cid=11908586&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n### 《白日梦蓝》——刺猬乐队\n\n特指这个现场版，大提琴和吉他的配合听着有一种梦幻的感觉。\n\n<iframe src=\"//player.bilibili.com/player.html?aid=668247016&bvid=BV1ia4y1e79T&cid=191610558&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n### 《生之响往》——刺猬乐队\n\n<iframe src=\"//player.bilibili.com/player.html?aid=797892538&bvid=BV18y4y167pk&cid=260758347&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n### 《生如夏花》《Forever Young》《平凡之路》——朴树\n\n朴树身上总有一种令人向往的纯真和真挚。\n\n<iframe src=\"//player.bilibili.com/player.html?aid=841303764&bvid=BV1u54y1q79i&cid=211384045&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n### 《 No Fear In My Heart 》——朴树\n\n你在害怕什么 ~\n\n神级现场版，每次看和看上面的刺猬乐队的歌的时候，总感觉得去补一补《乐队的夏天》第一季。\n\n<iframe src=\"//player.bilibili.com/player.html?aid=83340529&bvid=BV1tJ411H7h4&cid=142435321&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n### 《波西米亚狂想曲》——Queen\n\n我曾在这首歌和《 No Fear In My Heart 》中寻找救赎——记忆中也就只有这两首歌。\n\n<iframe src=\"//player.bilibili.com/player.html?aid=501148064&bvid=BV1VK411u7vy&cid=282062140&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n","slug":"2021-04-26-最近想听的歌","published":1,"updated":"2022-03-21T09:16:57.000Z","comments":1,"photos":[],"link":"","_id":"cl792rm1a000wtkin5vteek0o","content":"<p>因为都分布在不同平台不同形式，这样可以做一个合集方便看hhh</p>\n<p>能放在这里的，都是最近我认为很有味道还没听腻的那种，若是哪天听腻了就会默默删掉了。</p>\n<p>当然有些歌是听不腻的，若是听多了印在脑子里了，可以独自慢慢回味，也就没有放在这里的必要了。</p>\n<span id=\"more\"></span>\n\n<h3 id=\"《亡命之徒》（《出发》）——纵贯线\"><a href=\"#《亡命之徒》（《出发》）——纵贯线\" class=\"headerlink\" title=\"《亡命之徒》（《出发》）——纵贯线\"></a>《亡命之徒》（《出发》）——纵贯线</h3><iframe src=\"//player.bilibili.com/player.html?aid=247954746&bvid=BV1bv411j72a&cid=332732947&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<h3 id=\"Plastic-Love-塑料爱\"><a href=\"#Plastic-Love-塑料爱\" class=\"headerlink\" title=\"Plastic Love 塑料爱\"></a>Plastic Love 塑料爱</h3><iframe src=\"//player.bilibili.com/player.html?aid=31206044&bvid=BV1JW411d7GA&cid=54519736&page=2\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<iframe src=\"//player.bilibili.com/player.html?aid=75885850&bvid=BV1vJ411U7Ji&cid=132451138&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<h3 id=\"《恋爱中的犀牛》-《氧气》\"><a href=\"#《恋爱中的犀牛》-《氧气》\" class=\"headerlink\" title=\"《恋爱中的犀牛》+《氧气》\"></a>《恋爱中的犀牛》+《氧气》</h3><p>03版恋爱的犀牛唱段，郝蕾演唱。</p>\n<iframe src=\"//player.bilibili.com/player.html?aid=7285048&bvid=BV1Gs411s7Mi&cid=11908586&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<h3 id=\"《白日梦蓝》——刺猬乐队\"><a href=\"#《白日梦蓝》——刺猬乐队\" class=\"headerlink\" title=\"《白日梦蓝》——刺猬乐队\"></a>《白日梦蓝》——刺猬乐队</h3><p>特指这个现场版，大提琴和吉他的配合听着有一种梦幻的感觉。</p>\n<iframe src=\"//player.bilibili.com/player.html?aid=668247016&bvid=BV1ia4y1e79T&cid=191610558&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<h3 id=\"《生之响往》——刺猬乐队\"><a href=\"#《生之响往》——刺猬乐队\" class=\"headerlink\" title=\"《生之响往》——刺猬乐队\"></a>《生之响往》——刺猬乐队</h3><iframe src=\"//player.bilibili.com/player.html?aid=797892538&bvid=BV18y4y167pk&cid=260758347&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<h3 id=\"《生如夏花》《Forever-Young》《平凡之路》——朴树\"><a href=\"#《生如夏花》《Forever-Young》《平凡之路》——朴树\" class=\"headerlink\" title=\"《生如夏花》《Forever Young》《平凡之路》——朴树\"></a>《生如夏花》《Forever Young》《平凡之路》——朴树</h3><p>朴树身上总有一种令人向往的纯真和真挚。</p>\n<iframe src=\"//player.bilibili.com/player.html?aid=841303764&bvid=BV1u54y1q79i&cid=211384045&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<h3 id=\"《-No-Fear-In-My-Heart-》——朴树\"><a href=\"#《-No-Fear-In-My-Heart-》——朴树\" class=\"headerlink\" title=\"《 No Fear In My Heart 》——朴树\"></a>《 No Fear In My Heart 》——朴树</h3><p>你在害怕什么 ~</p>\n<p>神级现场版，每次看和看上面的刺猬乐队的歌的时候，总感觉得去补一补《乐队的夏天》第一季。</p>\n<iframe src=\"//player.bilibili.com/player.html?aid=83340529&bvid=BV1tJ411H7h4&cid=142435321&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<h3 id=\"《波西米亚狂想曲》——Queen\"><a href=\"#《波西米亚狂想曲》——Queen\" class=\"headerlink\" title=\"《波西米亚狂想曲》——Queen\"></a>《波西米亚狂想曲》——Queen</h3><p>我曾在这首歌和《 No Fear In My Heart 》中寻找救赎——记忆中也就只有这两首歌。</p>\n<iframe src=\"//player.bilibili.com/player.html?aid=501148064&bvid=BV1VK411u7vy&cid=282062140&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"<p>因为都分布在不同平台不同形式，这样可以做一个合集方便看hhh</p>\n<p>能放在这里的，都是最近我认为很有味道还没听腻的那种，若是哪天听腻了就会默默删掉了。</p>\n<p>当然有些歌是听不腻的，若是听多了印在脑子里了，可以独自慢慢回味，也就没有放在这里的必要了。</p>","more":"<h3 id=\"《亡命之徒》（《出发》）——纵贯线\"><a href=\"#《亡命之徒》（《出发》）——纵贯线\" class=\"headerlink\" title=\"《亡命之徒》（《出发》）——纵贯线\"></a>《亡命之徒》（《出发》）——纵贯线</h3><iframe src=\"//player.bilibili.com/player.html?aid=247954746&bvid=BV1bv411j72a&cid=332732947&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<h3 id=\"Plastic-Love-塑料爱\"><a href=\"#Plastic-Love-塑料爱\" class=\"headerlink\" title=\"Plastic Love 塑料爱\"></a>Plastic Love 塑料爱</h3><iframe src=\"//player.bilibili.com/player.html?aid=31206044&bvid=BV1JW411d7GA&cid=54519736&page=2\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<iframe src=\"//player.bilibili.com/player.html?aid=75885850&bvid=BV1vJ411U7Ji&cid=132451138&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<h3 id=\"《恋爱中的犀牛》-《氧气》\"><a href=\"#《恋爱中的犀牛》-《氧气》\" class=\"headerlink\" title=\"《恋爱中的犀牛》+《氧气》\"></a>《恋爱中的犀牛》+《氧气》</h3><p>03版恋爱的犀牛唱段，郝蕾演唱。</p>\n<iframe src=\"//player.bilibili.com/player.html?aid=7285048&bvid=BV1Gs411s7Mi&cid=11908586&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<h3 id=\"《白日梦蓝》——刺猬乐队\"><a href=\"#《白日梦蓝》——刺猬乐队\" class=\"headerlink\" title=\"《白日梦蓝》——刺猬乐队\"></a>《白日梦蓝》——刺猬乐队</h3><p>特指这个现场版，大提琴和吉他的配合听着有一种梦幻的感觉。</p>\n<iframe src=\"//player.bilibili.com/player.html?aid=668247016&bvid=BV1ia4y1e79T&cid=191610558&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<h3 id=\"《生之响往》——刺猬乐队\"><a href=\"#《生之响往》——刺猬乐队\" class=\"headerlink\" title=\"《生之响往》——刺猬乐队\"></a>《生之响往》——刺猬乐队</h3><iframe src=\"//player.bilibili.com/player.html?aid=797892538&bvid=BV18y4y167pk&cid=260758347&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<h3 id=\"《生如夏花》《Forever-Young》《平凡之路》——朴树\"><a href=\"#《生如夏花》《Forever-Young》《平凡之路》——朴树\" class=\"headerlink\" title=\"《生如夏花》《Forever Young》《平凡之路》——朴树\"></a>《生如夏花》《Forever Young》《平凡之路》——朴树</h3><p>朴树身上总有一种令人向往的纯真和真挚。</p>\n<iframe src=\"//player.bilibili.com/player.html?aid=841303764&bvid=BV1u54y1q79i&cid=211384045&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<h3 id=\"《-No-Fear-In-My-Heart-》——朴树\"><a href=\"#《-No-Fear-In-My-Heart-》——朴树\" class=\"headerlink\" title=\"《 No Fear In My Heart 》——朴树\"></a>《 No Fear In My Heart 》——朴树</h3><p>你在害怕什么 ~</p>\n<p>神级现场版，每次看和看上面的刺猬乐队的歌的时候，总感觉得去补一补《乐队的夏天》第一季。</p>\n<iframe src=\"//player.bilibili.com/player.html?aid=83340529&bvid=BV1tJ411H7h4&cid=142435321&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<h3 id=\"《波西米亚狂想曲》——Queen\"><a href=\"#《波西米亚狂想曲》——Queen\" class=\"headerlink\" title=\"《波西米亚狂想曲》——Queen\"></a>《波西米亚狂想曲》——Queen</h3><p>我曾在这首歌和《 No Fear In My Heart 》中寻找救赎——记忆中也就只有这两首歌。</p>\n<iframe src=\"//player.bilibili.com/player.html?aid=501148064&bvid=BV1VK411u7vy&cid=282062140&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>"},{"layout":"post","title":"C++学习笔记","subtitle":"零碎的笔记","date":"2021-05-07T16:00:00.000Z","author":"LW","header-img":"img/post-bg-code1.jpg","catalog":true,"_content":"\n比较乱，有空再整理~\n\n<!--more-->\n\n# C++学习笔记\n\n## 命名空间的`using`声明\n\n一般用到标准输入输出流的时候，库函数属于命名空间`std`，用作`std::cout`、`std::cin`\n或者在开头声明：`using namespace std;`\n或者单独声明：`using std::cin;`、`using std::cout;`\n\n## 类型说明符`auto`\n\n`auto`：让编译器去分析表达式所属的类型。\n\n```c++\nauto cnt = 0;\nauto pi = 3.14;\n```\n\n### 类型指示符`decltype`\n\n`decltype`是`declare type`的缩写，译为声明类型。\n能从表达式的类型推断出变量的类型，如：\n\n```c++\ndecltype(sizeof(arr)) length;\n```\n\n### 基于范围的`for`语句(range for)\n\nfor (*declaration* : *expression*)\n\n​ *statement*\n\n```c++\n// 将string中的字符分隔输出\nfor (auto c : str)\n{\n    cout << c << “ ”;\n}\ncout << str; // h e l l o   w o r l d\n\n// 将string中字符编程大写\n// 用上引用符 &\nfor (auto &c : str)\n{\n    c = toupper(c);\n}\ncout << str; // HELLO WORLD\n```\n\n# cpp中类相关\n\n### 静态成员变量和静态成员函数\n\n类中定义的静态成员、函数，为整个类所有，所有对象共享。所以可以直接通过类名访问，当然也可以通过对象直接访问。\n\n静态成员函数只能直接访问静态变量和静态函数（因为不能实例化）。\n\n```cpp\n#include <iostream>\n#include <string>\n \nusing namespace std;\n \nclass test\n{\nprivate:\n    static int m_value;  //定义私有类的静态成员变量\npublic:\n    test()\n    {\n     m_value++;\n    }\n    static int getValue()  //定义类的静态成员函数\n    {\n     return m_value;\n    }\n};\n \nint test::m_value = 0;  //类的静态成员变量需要在类外分配内存空间，需要单独初始化。const则在声明的同时初始化。\n \nint main()\n{\n    test t1;\n    test t2;\n    test t3;\n \n    cout << \"test::m_value2 = \" << test::getValue() << endl; //通过类名直接调用公有静态成员函数，获取对象个数\n    cout << \"t3.getValue() = \" << t3.getValue() << endl;  //通过对象名调用静态成员函数获取对象个数\n    system(\"pause\");\n}\n// 结果为3\n```\n\n![img](https://img-blog.csdn.net/20180804112453261?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtczEwMDg2MTE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n|                          | 静态成员函数 | 普通成员函数 |\n| ------------------------ | ------------ | ------------ |\n| 所有对象共享             | yes          | yes          |\n| 隐含`this`指针           | no           | yes          |\n| 访问普通成员变量（函数） | no           | yes          |\n| 访问静态成员变量（函数） | yes          | yes          |\n\n### 类的继承\n\n相应的构造函数也可以继承。\n\n```cpp\nclass Gene\n{\npublic:\n int index;\n int dir;\n Gene(int _index, int _dir) :index(_index), dir(_dir) {};\n};\nclass Res :public Gene\n{\npublic:\n int station;\n double st;\n double pt;\n Res(int _station, int _index, int _dir, double _st, double _pt) :Gene(_index, _dir), station(_station), st(_st), pt(_pt) {};\n string fout()const;\n};\n```\n\n# 读取CSV文件，表格型\n\n```cpp\n ifstream inFile(filePath, ios::in);\n string lineStr;\n getline(inFile, lineStr);//跳过第一行\n while (getline(inFile, lineStr))\n {\n  // 打印整行字符串\n  //cout << lineStr << endl;\n  // 存成二维表结构\n  stringstream ss(lineStr);\n  string str;\n  vector<string> lineArray;\n  // 按照逗号分隔\n  while (getline(ss, str, ','))\n   lineArray.push_back(str);\n  strArray.push_back(lineArray);\n    }\n```\n\n# 判断字符串是否是数字\n\nc++比较愚蠢，只能一个字符一个字符的判断\n\n### 方法一：判断字符的ASCII范围\n\n（数字的ASCII范围为48~57）\n\n![img](https://raw.githubusercontent.com/lei-wei/pic_bed/main/img/1012444-20161118130400795-373092178.jpg)\n\n![ascll](https://raw.githubusercontent.com/lei-wei/pic_bed/main/img/ascll.jpg)\n\n```cpp\nbool AllisNum(string str)  \n{  \n    for (int i = 0; i < str.size(); i++)\n    {\n        int tmp = (int)str[i];\n        if (tmp >= 48 && tmp <= 57)\n        {\n            continue;\n        }\n        else\n        {\n            return false;\n        }\n    } \n    return true;\n}\n```\n\n### 方法二：使用C++提供的stringstream对象\n\n```cpp\nstringstream sin(str);  \n double d;  \n char c;  \n if(!(sin >> d))  \n {\n  /*解释： \n            sin>>t表示把sin转换成double的变量（其实对于int和float型的都会接收），\n   如果转换成功，则值为非0，如果转换不成功就返回为0 \n        */\n  return false;\n }\n if (sin >> c) \n {\n  /*解释：\n  此部分用于检测错误输入中，数字加字符串的输入形式（例如：34.f），在上面的的部分（sin>>t）\n  已经接收并转换了输入的数字部分，在stringstream中相应也会把那一部分给清除，\n  此时接收的是.f这部分，所以条件成立，返回false \n          */ \n  return false;\n }  \n return true;  \n}\n```\n\n### 方法三：使用`std::isdigit`来判断\n\n有一个大坑，若字符是中文可能会报错。\n\n```cpp\nbool isNumber(const string& str)\n{\n    for (char const &c : str) {\n        if (std::isdigit(c) == 0) return false;\n    }\n    return true;\n}\n```\n\n## 数字取整取小数\n\n- `ceil()`函数，向上取整，天花板函数\n\n- `floor()`函数，向下取整，地板函数\n\n- `round()`函数，四舍五入，取值不受正负号影响。\n\n# 程序运行时间计时⏲\n\n`clock()`有毫秒级的精度，直接上例子：\n\n```cpp\n#include<time.h>\nint main()\n{\n time_t startTime, endTime;\n startTime = clock();\n    func();//程序运行\n    endTime = clock();\n    cout << \"运行时间：\" << (endTime - startTime) / CLOCKS_PER_SEC << \" s\" << endl;\n}\n```\n\n# cpp运算符重载\n\n## C++重载相等运算符\n\n```cpp\n#include <iostream>\n\nclass Person\n{\nprivate:\n int m_age;\npublic:\n bool operator==(const Person& other)\n {\n  std::cout << \"call member function operator==\" << std::endl;\n  if (this->m_age == other.m_age)  \n  {\n   return true;\n  }\n  return false;\n }\n};\n\nint main()\n{\n Person p1(10);\n Person p2(10);\n\n if (p1 == p2)\n {\n  std::cout << \"p1 is equal with p2.\" << std::endl;\n }\n}\n```\n\n## C++ 输入/输出运算符重载\n\n```cpp\nclass MyClass\n{\npublic:\n    int a = 0;\n    MyClass(/* args */){};\n    friend ostream &operator<<(ostream &output, const MyClass my)\n    {\n        output << my.a << endl;\n        return output;\n    }\n    friend istream &operator>>(istream &input, MyClass &my)\n    {\n        input >> my.a;\n        return input;\n    }\n};\n\nint main()\n{\n    MyClass my;\n    cout << my.a << endl;\n    cout << my;\n    cin >> my;\n    cout << my;\n    return 0;\n}\n```\n\n---\n\n# cpp匿名函数\n\n### lambda函数的一般形式\n\ncpp中的匿名函数用Lambda表达式实现，又称为lambda函数\n\n可以这样来定义一个lambda函数\n\n```cpp\n auto func = []() { std::cout << \"Hello world\"; };\n    func(); // now call the function\n```\n\n正常情况下，只要函数体中所有return都是同一个类型的话，编译器就会自行判断函数的返回类型。也可以显示地指定lambda函数的返回类型。这个需要用到函数返回值后置的功能,比如这个例子\n\n```cpp\n[] () -> int { return 1; }\n```\n\n所以总的来说lambda函数的一般形式就是：\n\n```cpp\n[captures] (params) -> ret {Statments;}\n```\n\n### lambda函数的变量截取\n\n- [] 不截取任何变量\n- [&} 截取外部作用域中所有变量，并作为引用在函数体中使用\n- [=] 截取外部作用域中所有变量，并拷贝一份在函数体中使用\n- [=, &foo] 截取外部作用域中所有变量，并拷贝一份在函数体中使用，但是对foo变量使用引用\n- [bar] 截取bar变量并且拷贝一份在函数体重使用，同时不截取其他变量\n- [this] 截取当前类中的this指针。如果已经使用了&或者=就默认添加此选项。\n\n### lambda函数的使用\n\n在类似`find_if`函数中需要人工定义一个`cmp`函数的情况，用lambda函数就会很方便，一行代码不用另外再显示定义一个函数。示例如下：\n\n```cpp\n#include <algorithm>\n//类的列表，要按其中某个属性排序\nvector<Solution> resArray; \n//自定义排序函数\nbool TALBP::cmp_fitness(Solution ind1, Solution ind2)\n{\n    return ind1.fitness < ind2.fitness;\n}\nsort(resArray.begin(), resArray.end(), cmp_fitness);\n//或用lambda函数（匿名函数）更方便\nsort(resArray.begin(), resArray.end(), [](const Solution& s1, const Solution& s2) {return s1.fitness < s2.fitness; });\n\n//同理\nint target_index;\nauto it = find_if(resArray.begin(), resArray.end(), [&](const Solution & s) {return s.op.index == target_index; });\n\nfor_each( v.begin(), v.end(), [] (int val)  \n{  \n    cout << val;  \n} );\n```\n\n---\n\n# cpp中vector相关\n\n## 初始化\n\n### 初始化其大小\n\n```cpp\n//默认初始化，size = 0\nvector<int> v1;\n//规定长度，以下操作等价\nvector<int> v2(2);\nv1.resize(2);\n//规定长度并赋初值，以下操作等价\nvector<int> v3(3, 4);\nv1.resize(3, 4);\n```\n\n### 二维数组的初始化\n\n```cpp\nvector<vector<int>> v6(m, vector<int>(n, 0));//m*n大小，值为0\n```\n\n### 用已有数值初始化\n\n```cpp\n//用另一个数组初始化，以下操作等价\nvector<int> v4(v1);\nvector<int> v4 = v1;\n//用另外一个数组的指针来初始化\nint a[3] = {1, 2, 3};\nvector<int> v5(a, a + 2);//数组指针\nvector<int> v5(v1.begin(), v1.end() - 1);//容器指针\n```\n\n## 插入数据\n\n单个在最前面，即第一个位置插入\n\n```cpp\nv.insert(v.begin(),val)\n```\n\n两个vector合并，也用`insert`，即后一个在前一个的最后插入。\n\n```cpp\nresStaList.insert(resStaList.end(), temp.begin(), temp.end());\n```\n\n## 排序\n\n### 简单排序\n\n从小到大排序比较简单，使用sort()函数既可\n\n```cpp\n#include <algorithm>\n\nsort(v.begin(),v.end()); //从小到大\nsort(vec.rbegin(), vec.rend());//从大到小，逆向，等价于下式\nreverse(arr.begin(), arr.end());\n```\n\n### 自定义排序\n\n```cpp\n#include <algorithm>\n//类的列表，要按其中某个属性排序\nvector<Solution> resArray; \n//自定义排序函数\nbool TALBP::cmp_fitness(Solution ind1, Solution ind2)\n{\n    return ind1.fitness < ind2.fitness;\n}\nsort(resArray.begin(), resArray.end(), cmp_fitness);\n或用lambda函数（匿名函数）更方便\nsort(resArray.begin(), resArray.end(),[](const Solution& s1, const Solution& s2) {return s1.fitness < s2.fitness; });\n```\n\n## 删除\n\n[Untitled](https://www.notion.so/391b7baf50134eb38a7603b2efaa85e7)\n\n![image-20210914210322302](https://raw.githubusercontent.com/lei-wei/pic_bed/main/img/image-20210914210322302.png)\n\n### 查找并删除\n\n```cpp\nauto it = find(opr_left.begin(), opr_left.end(), value);\nauto it = find_if(opr_left.begin(), opr_left.end(), cmp);\nopr_left.erase(it);\n```\n\n## 去重\n\n用`unique`函数来帮忙\n\n查找相邻并且相同的，将之移到容器末尾\n\n最后返回非重复的的迭代器处。\n\n再将返回值到末尾的重复值用`erase`删除就可以得到去重后的结果了\n\n```cpp\nauto last = std::unique(v.begin(), v.end());\nv.erase(last, v.end()); \n```\n\n# 正则表达式\n\n| 符号  | 意义                           |\n| ----- | ------------------------------ |\n| ^     | 匹配行的开头                   |\n| $     | 匹配行的结尾                   |\n| .     | 匹配任意单个字符               |\n| […]   | 匹配[]中的任意一个字符         |\n| (…)   | 设定分组                       |\n| \\     | 转义字符                       |\n| \\d    | 匹配数字[0-9]                  |\n| \\w    | 匹配字母[a-z]，数字，下划线    |\n| \\s    | 匹配空格                       |\n| \\W    | \\w 取反                        |\n| \\D    | \\d 取反                        |\n| \\S    | \\s 取反                        |\n| +     | 前面的元素重复1次或多次        |\n| *     | 前面的元素重复任意次           |\n| ?     | 前面的元素重复0次或1次         |\n| {n}   | 前面的元素重复n次              |\n| {n,}  | 前面的元素重复至少n次          |\n| {n,m} | 前面的元素重复至少n次，至多m次 |\n| \\|    | 逻辑或                         |\n\n```cpp\n#include<iostream>\n#include<regex>\n\nusing namespace std;\n\n//regex_match 匹配\n//regex_search 查找\n//regex_replace 替换\n\nint main1()\n{\n    regex reg(\"([a-zA-Z]*) ([a-zA-Z]*)$\");\n    cmatch what; //匹配的词语检索出来\n    bool isit = regex_match(\"id admin\", what, reg); //\n    for(int i = 0; i !=what.size(); ++i) //输出匹配信息\n    {\n        cout << what[i+1].first << \"\\t\";\n    }\n    cout << \"match\" << endl;\n}\n```\n\n有个坑，`regex_match`方法需要输入`const char*`，这时就需要类型转化\n\n```cpp\n//string与const char*转换\nstring s = \"string_To_const char* \";\nconst char *c_s=s.c_str();\n//还可以直接使用string类中的data()函数，直接对const char *赋值\nconst char *c_ss = s.data();\n\n//const char*转换string\nconst char* p = \"const char* _To_string\";\nstring y(p);\n```\n\n# 键值对，哈希表\n\n`unordered_map`容器，直译过来就是\"无序 map 容器\"的意思。所谓“无序”，指的是 unordered_map 容器不会像 map 容器那样对存储的数据进行排序。换句话说，unordered_map 容器和 map 容器仅有一点不同，即 map 容器中存储的数据是有序的，而 unordered_map 容器中是无序的。\n\n具体来讲，unordered_map 容器和 map 容器一样，以键值对（pair类型）的形式存储数据，存储的各个键值对的键互不相同且不允许被修改。但由于 unordered_map 容器底层采用的是哈希表存储结构，该结构本身不具有对数据的排序功能，所以此容器内部不会自行对存储的键值对进行排序。\n\n值得一提的是，unordered_map 容器在`<unordered_map>`头文件中，并位于`std`命名空间中。因此，如果想使用该容器，代码中应包含如下语句：\n\n```cpp\n#include <unordered_map>\nusing namespace std;\n\nint main()\n{\n    //创建空 umap 容器\n    unordered_map<int, int> umap;\n\n    //向 umap 容器添加新键值对\n    umap[6] = 77;       //方式一\n    umap.emplace(3, 5); //方式二\n\n    //输出 umap 存储键值对的数量\n    cout << \"umap size = \" << umap.size() << endl;\n    \n    //使用迭代器输出 umap 容器存储的所有键值对\n    for (auto iter = umap.begin(); iter != umap.end(); ++iter)\n    {\n        cout << iter->first << \" \" << iter->second << endl;\n    }\n    \n    //使用forrange输出 umap 容器存储的所有键值对\n    for (auto &&it : umap) //方式一\n    {\n        cout << it.first << \" \" << it.second << endl;\n    }\n    for (const auto &[fir, sec] : umap) //方式二\n    {\n        cout << fir << \" \" << sec << endl;\n    }\n    return 0;\n}\n```\n\n# 栈\n\n很简单，记住是**先入后出**的结构。操作时压入一个新成员，返回栈顶成员，或弹出栈顶成员。\n\n### 基本用法\n\n1. `push()`: 向栈内压入一个成员；\n2. `pop()`: 从栈顶弹出一个成员；\n3. `empty()`: 如果栈为空返回true，否则返回false；\n4. `top()`: 返回栈顶，但不删除成员；\n5. `size()`: 返回栈内元素的大小；\n\n```cpp\n#include <iostream>\n#include <stack>\nusing namespace std;\n\nint main()\n{\n    stack<int> stk;\n    for (int i = 0; i < 50; i++)\n    {\n        stk.push(i);//入栈\n    }\n    cout << \"栈的大小:\" << stk.size() << endl;\n    while (!stk.empty())\n    {\n        cout << stk.top() << endl;//返回栈顶成员\n        stk.pop();//出栈\n    }\n    cout << \"栈的大小:\" << stk.size() << endl;\n    return 0;\n}\n```\n","source":"_posts/2021-05-08-C++学习笔记.md","raw":"---\nlayout:     post\ntitle:      C++学习笔记\nsubtitle:   零碎的笔记\ndate:       2021-05-08\nauthor:     LW\nheader-img: img/post-bg-code1.jpg\ncatalog: true\ntags: \n    - code\n    - cpp\ncategories: \n    - 笔记\n    - cpp\n---\n\n比较乱，有空再整理~\n\n<!--more-->\n\n# C++学习笔记\n\n## 命名空间的`using`声明\n\n一般用到标准输入输出流的时候，库函数属于命名空间`std`，用作`std::cout`、`std::cin`\n或者在开头声明：`using namespace std;`\n或者单独声明：`using std::cin;`、`using std::cout;`\n\n## 类型说明符`auto`\n\n`auto`：让编译器去分析表达式所属的类型。\n\n```c++\nauto cnt = 0;\nauto pi = 3.14;\n```\n\n### 类型指示符`decltype`\n\n`decltype`是`declare type`的缩写，译为声明类型。\n能从表达式的类型推断出变量的类型，如：\n\n```c++\ndecltype(sizeof(arr)) length;\n```\n\n### 基于范围的`for`语句(range for)\n\nfor (*declaration* : *expression*)\n\n​ *statement*\n\n```c++\n// 将string中的字符分隔输出\nfor (auto c : str)\n{\n    cout << c << “ ”;\n}\ncout << str; // h e l l o   w o r l d\n\n// 将string中字符编程大写\n// 用上引用符 &\nfor (auto &c : str)\n{\n    c = toupper(c);\n}\ncout << str; // HELLO WORLD\n```\n\n# cpp中类相关\n\n### 静态成员变量和静态成员函数\n\n类中定义的静态成员、函数，为整个类所有，所有对象共享。所以可以直接通过类名访问，当然也可以通过对象直接访问。\n\n静态成员函数只能直接访问静态变量和静态函数（因为不能实例化）。\n\n```cpp\n#include <iostream>\n#include <string>\n \nusing namespace std;\n \nclass test\n{\nprivate:\n    static int m_value;  //定义私有类的静态成员变量\npublic:\n    test()\n    {\n     m_value++;\n    }\n    static int getValue()  //定义类的静态成员函数\n    {\n     return m_value;\n    }\n};\n \nint test::m_value = 0;  //类的静态成员变量需要在类外分配内存空间，需要单独初始化。const则在声明的同时初始化。\n \nint main()\n{\n    test t1;\n    test t2;\n    test t3;\n \n    cout << \"test::m_value2 = \" << test::getValue() << endl; //通过类名直接调用公有静态成员函数，获取对象个数\n    cout << \"t3.getValue() = \" << t3.getValue() << endl;  //通过对象名调用静态成员函数获取对象个数\n    system(\"pause\");\n}\n// 结果为3\n```\n\n![img](https://img-blog.csdn.net/20180804112453261?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtczEwMDg2MTE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n|                          | 静态成员函数 | 普通成员函数 |\n| ------------------------ | ------------ | ------------ |\n| 所有对象共享             | yes          | yes          |\n| 隐含`this`指针           | no           | yes          |\n| 访问普通成员变量（函数） | no           | yes          |\n| 访问静态成员变量（函数） | yes          | yes          |\n\n### 类的继承\n\n相应的构造函数也可以继承。\n\n```cpp\nclass Gene\n{\npublic:\n int index;\n int dir;\n Gene(int _index, int _dir) :index(_index), dir(_dir) {};\n};\nclass Res :public Gene\n{\npublic:\n int station;\n double st;\n double pt;\n Res(int _station, int _index, int _dir, double _st, double _pt) :Gene(_index, _dir), station(_station), st(_st), pt(_pt) {};\n string fout()const;\n};\n```\n\n# 读取CSV文件，表格型\n\n```cpp\n ifstream inFile(filePath, ios::in);\n string lineStr;\n getline(inFile, lineStr);//跳过第一行\n while (getline(inFile, lineStr))\n {\n  // 打印整行字符串\n  //cout << lineStr << endl;\n  // 存成二维表结构\n  stringstream ss(lineStr);\n  string str;\n  vector<string> lineArray;\n  // 按照逗号分隔\n  while (getline(ss, str, ','))\n   lineArray.push_back(str);\n  strArray.push_back(lineArray);\n    }\n```\n\n# 判断字符串是否是数字\n\nc++比较愚蠢，只能一个字符一个字符的判断\n\n### 方法一：判断字符的ASCII范围\n\n（数字的ASCII范围为48~57）\n\n![img](https://raw.githubusercontent.com/lei-wei/pic_bed/main/img/1012444-20161118130400795-373092178.jpg)\n\n![ascll](https://raw.githubusercontent.com/lei-wei/pic_bed/main/img/ascll.jpg)\n\n```cpp\nbool AllisNum(string str)  \n{  \n    for (int i = 0; i < str.size(); i++)\n    {\n        int tmp = (int)str[i];\n        if (tmp >= 48 && tmp <= 57)\n        {\n            continue;\n        }\n        else\n        {\n            return false;\n        }\n    } \n    return true;\n}\n```\n\n### 方法二：使用C++提供的stringstream对象\n\n```cpp\nstringstream sin(str);  \n double d;  \n char c;  \n if(!(sin >> d))  \n {\n  /*解释： \n            sin>>t表示把sin转换成double的变量（其实对于int和float型的都会接收），\n   如果转换成功，则值为非0，如果转换不成功就返回为0 \n        */\n  return false;\n }\n if (sin >> c) \n {\n  /*解释：\n  此部分用于检测错误输入中，数字加字符串的输入形式（例如：34.f），在上面的的部分（sin>>t）\n  已经接收并转换了输入的数字部分，在stringstream中相应也会把那一部分给清除，\n  此时接收的是.f这部分，所以条件成立，返回false \n          */ \n  return false;\n }  \n return true;  \n}\n```\n\n### 方法三：使用`std::isdigit`来判断\n\n有一个大坑，若字符是中文可能会报错。\n\n```cpp\nbool isNumber(const string& str)\n{\n    for (char const &c : str) {\n        if (std::isdigit(c) == 0) return false;\n    }\n    return true;\n}\n```\n\n## 数字取整取小数\n\n- `ceil()`函数，向上取整，天花板函数\n\n- `floor()`函数，向下取整，地板函数\n\n- `round()`函数，四舍五入，取值不受正负号影响。\n\n# 程序运行时间计时⏲\n\n`clock()`有毫秒级的精度，直接上例子：\n\n```cpp\n#include<time.h>\nint main()\n{\n time_t startTime, endTime;\n startTime = clock();\n    func();//程序运行\n    endTime = clock();\n    cout << \"运行时间：\" << (endTime - startTime) / CLOCKS_PER_SEC << \" s\" << endl;\n}\n```\n\n# cpp运算符重载\n\n## C++重载相等运算符\n\n```cpp\n#include <iostream>\n\nclass Person\n{\nprivate:\n int m_age;\npublic:\n bool operator==(const Person& other)\n {\n  std::cout << \"call member function operator==\" << std::endl;\n  if (this->m_age == other.m_age)  \n  {\n   return true;\n  }\n  return false;\n }\n};\n\nint main()\n{\n Person p1(10);\n Person p2(10);\n\n if (p1 == p2)\n {\n  std::cout << \"p1 is equal with p2.\" << std::endl;\n }\n}\n```\n\n## C++ 输入/输出运算符重载\n\n```cpp\nclass MyClass\n{\npublic:\n    int a = 0;\n    MyClass(/* args */){};\n    friend ostream &operator<<(ostream &output, const MyClass my)\n    {\n        output << my.a << endl;\n        return output;\n    }\n    friend istream &operator>>(istream &input, MyClass &my)\n    {\n        input >> my.a;\n        return input;\n    }\n};\n\nint main()\n{\n    MyClass my;\n    cout << my.a << endl;\n    cout << my;\n    cin >> my;\n    cout << my;\n    return 0;\n}\n```\n\n---\n\n# cpp匿名函数\n\n### lambda函数的一般形式\n\ncpp中的匿名函数用Lambda表达式实现，又称为lambda函数\n\n可以这样来定义一个lambda函数\n\n```cpp\n auto func = []() { std::cout << \"Hello world\"; };\n    func(); // now call the function\n```\n\n正常情况下，只要函数体中所有return都是同一个类型的话，编译器就会自行判断函数的返回类型。也可以显示地指定lambda函数的返回类型。这个需要用到函数返回值后置的功能,比如这个例子\n\n```cpp\n[] () -> int { return 1; }\n```\n\n所以总的来说lambda函数的一般形式就是：\n\n```cpp\n[captures] (params) -> ret {Statments;}\n```\n\n### lambda函数的变量截取\n\n- [] 不截取任何变量\n- [&} 截取外部作用域中所有变量，并作为引用在函数体中使用\n- [=] 截取外部作用域中所有变量，并拷贝一份在函数体中使用\n- [=, &foo] 截取外部作用域中所有变量，并拷贝一份在函数体中使用，但是对foo变量使用引用\n- [bar] 截取bar变量并且拷贝一份在函数体重使用，同时不截取其他变量\n- [this] 截取当前类中的this指针。如果已经使用了&或者=就默认添加此选项。\n\n### lambda函数的使用\n\n在类似`find_if`函数中需要人工定义一个`cmp`函数的情况，用lambda函数就会很方便，一行代码不用另外再显示定义一个函数。示例如下：\n\n```cpp\n#include <algorithm>\n//类的列表，要按其中某个属性排序\nvector<Solution> resArray; \n//自定义排序函数\nbool TALBP::cmp_fitness(Solution ind1, Solution ind2)\n{\n    return ind1.fitness < ind2.fitness;\n}\nsort(resArray.begin(), resArray.end(), cmp_fitness);\n//或用lambda函数（匿名函数）更方便\nsort(resArray.begin(), resArray.end(), [](const Solution& s1, const Solution& s2) {return s1.fitness < s2.fitness; });\n\n//同理\nint target_index;\nauto it = find_if(resArray.begin(), resArray.end(), [&](const Solution & s) {return s.op.index == target_index; });\n\nfor_each( v.begin(), v.end(), [] (int val)  \n{  \n    cout << val;  \n} );\n```\n\n---\n\n# cpp中vector相关\n\n## 初始化\n\n### 初始化其大小\n\n```cpp\n//默认初始化，size = 0\nvector<int> v1;\n//规定长度，以下操作等价\nvector<int> v2(2);\nv1.resize(2);\n//规定长度并赋初值，以下操作等价\nvector<int> v3(3, 4);\nv1.resize(3, 4);\n```\n\n### 二维数组的初始化\n\n```cpp\nvector<vector<int>> v6(m, vector<int>(n, 0));//m*n大小，值为0\n```\n\n### 用已有数值初始化\n\n```cpp\n//用另一个数组初始化，以下操作等价\nvector<int> v4(v1);\nvector<int> v4 = v1;\n//用另外一个数组的指针来初始化\nint a[3] = {1, 2, 3};\nvector<int> v5(a, a + 2);//数组指针\nvector<int> v5(v1.begin(), v1.end() - 1);//容器指针\n```\n\n## 插入数据\n\n单个在最前面，即第一个位置插入\n\n```cpp\nv.insert(v.begin(),val)\n```\n\n两个vector合并，也用`insert`，即后一个在前一个的最后插入。\n\n```cpp\nresStaList.insert(resStaList.end(), temp.begin(), temp.end());\n```\n\n## 排序\n\n### 简单排序\n\n从小到大排序比较简单，使用sort()函数既可\n\n```cpp\n#include <algorithm>\n\nsort(v.begin(),v.end()); //从小到大\nsort(vec.rbegin(), vec.rend());//从大到小，逆向，等价于下式\nreverse(arr.begin(), arr.end());\n```\n\n### 自定义排序\n\n```cpp\n#include <algorithm>\n//类的列表，要按其中某个属性排序\nvector<Solution> resArray; \n//自定义排序函数\nbool TALBP::cmp_fitness(Solution ind1, Solution ind2)\n{\n    return ind1.fitness < ind2.fitness;\n}\nsort(resArray.begin(), resArray.end(), cmp_fitness);\n或用lambda函数（匿名函数）更方便\nsort(resArray.begin(), resArray.end(),[](const Solution& s1, const Solution& s2) {return s1.fitness < s2.fitness; });\n```\n\n## 删除\n\n[Untitled](https://www.notion.so/391b7baf50134eb38a7603b2efaa85e7)\n\n![image-20210914210322302](https://raw.githubusercontent.com/lei-wei/pic_bed/main/img/image-20210914210322302.png)\n\n### 查找并删除\n\n```cpp\nauto it = find(opr_left.begin(), opr_left.end(), value);\nauto it = find_if(opr_left.begin(), opr_left.end(), cmp);\nopr_left.erase(it);\n```\n\n## 去重\n\n用`unique`函数来帮忙\n\n查找相邻并且相同的，将之移到容器末尾\n\n最后返回非重复的的迭代器处。\n\n再将返回值到末尾的重复值用`erase`删除就可以得到去重后的结果了\n\n```cpp\nauto last = std::unique(v.begin(), v.end());\nv.erase(last, v.end()); \n```\n\n# 正则表达式\n\n| 符号  | 意义                           |\n| ----- | ------------------------------ |\n| ^     | 匹配行的开头                   |\n| $     | 匹配行的结尾                   |\n| .     | 匹配任意单个字符               |\n| […]   | 匹配[]中的任意一个字符         |\n| (…)   | 设定分组                       |\n| \\     | 转义字符                       |\n| \\d    | 匹配数字[0-9]                  |\n| \\w    | 匹配字母[a-z]，数字，下划线    |\n| \\s    | 匹配空格                       |\n| \\W    | \\w 取反                        |\n| \\D    | \\d 取反                        |\n| \\S    | \\s 取反                        |\n| +     | 前面的元素重复1次或多次        |\n| *     | 前面的元素重复任意次           |\n| ?     | 前面的元素重复0次或1次         |\n| {n}   | 前面的元素重复n次              |\n| {n,}  | 前面的元素重复至少n次          |\n| {n,m} | 前面的元素重复至少n次，至多m次 |\n| \\|    | 逻辑或                         |\n\n```cpp\n#include<iostream>\n#include<regex>\n\nusing namespace std;\n\n//regex_match 匹配\n//regex_search 查找\n//regex_replace 替换\n\nint main1()\n{\n    regex reg(\"([a-zA-Z]*) ([a-zA-Z]*)$\");\n    cmatch what; //匹配的词语检索出来\n    bool isit = regex_match(\"id admin\", what, reg); //\n    for(int i = 0; i !=what.size(); ++i) //输出匹配信息\n    {\n        cout << what[i+1].first << \"\\t\";\n    }\n    cout << \"match\" << endl;\n}\n```\n\n有个坑，`regex_match`方法需要输入`const char*`，这时就需要类型转化\n\n```cpp\n//string与const char*转换\nstring s = \"string_To_const char* \";\nconst char *c_s=s.c_str();\n//还可以直接使用string类中的data()函数，直接对const char *赋值\nconst char *c_ss = s.data();\n\n//const char*转换string\nconst char* p = \"const char* _To_string\";\nstring y(p);\n```\n\n# 键值对，哈希表\n\n`unordered_map`容器，直译过来就是\"无序 map 容器\"的意思。所谓“无序”，指的是 unordered_map 容器不会像 map 容器那样对存储的数据进行排序。换句话说，unordered_map 容器和 map 容器仅有一点不同，即 map 容器中存储的数据是有序的，而 unordered_map 容器中是无序的。\n\n具体来讲，unordered_map 容器和 map 容器一样，以键值对（pair类型）的形式存储数据，存储的各个键值对的键互不相同且不允许被修改。但由于 unordered_map 容器底层采用的是哈希表存储结构，该结构本身不具有对数据的排序功能，所以此容器内部不会自行对存储的键值对进行排序。\n\n值得一提的是，unordered_map 容器在`<unordered_map>`头文件中，并位于`std`命名空间中。因此，如果想使用该容器，代码中应包含如下语句：\n\n```cpp\n#include <unordered_map>\nusing namespace std;\n\nint main()\n{\n    //创建空 umap 容器\n    unordered_map<int, int> umap;\n\n    //向 umap 容器添加新键值对\n    umap[6] = 77;       //方式一\n    umap.emplace(3, 5); //方式二\n\n    //输出 umap 存储键值对的数量\n    cout << \"umap size = \" << umap.size() << endl;\n    \n    //使用迭代器输出 umap 容器存储的所有键值对\n    for (auto iter = umap.begin(); iter != umap.end(); ++iter)\n    {\n        cout << iter->first << \" \" << iter->second << endl;\n    }\n    \n    //使用forrange输出 umap 容器存储的所有键值对\n    for (auto &&it : umap) //方式一\n    {\n        cout << it.first << \" \" << it.second << endl;\n    }\n    for (const auto &[fir, sec] : umap) //方式二\n    {\n        cout << fir << \" \" << sec << endl;\n    }\n    return 0;\n}\n```\n\n# 栈\n\n很简单，记住是**先入后出**的结构。操作时压入一个新成员，返回栈顶成员，或弹出栈顶成员。\n\n### 基本用法\n\n1. `push()`: 向栈内压入一个成员；\n2. `pop()`: 从栈顶弹出一个成员；\n3. `empty()`: 如果栈为空返回true，否则返回false；\n4. `top()`: 返回栈顶，但不删除成员；\n5. `size()`: 返回栈内元素的大小；\n\n```cpp\n#include <iostream>\n#include <stack>\nusing namespace std;\n\nint main()\n{\n    stack<int> stk;\n    for (int i = 0; i < 50; i++)\n    {\n        stk.push(i);//入栈\n    }\n    cout << \"栈的大小:\" << stk.size() << endl;\n    while (!stk.empty())\n    {\n        cout << stk.top() << endl;//返回栈顶成员\n        stk.pop();//出栈\n    }\n    cout << \"栈的大小:\" << stk.size() << endl;\n    return 0;\n}\n```\n","slug":"2021-05-08-C++学习笔记","published":1,"updated":"2022-03-21T09:34:23.000Z","comments":1,"photos":[],"link":"","_id":"cl792rm1c0010tkindsneck2p","content":"<p>比较乱，有空再整理~</p>\n<span id=\"more\"></span>\n\n<h1 id=\"C-学习笔记\"><a href=\"#C-学习笔记\" class=\"headerlink\" title=\"C++学习笔记\"></a>C++学习笔记</h1><h2 id=\"命名空间的using声明\"><a href=\"#命名空间的using声明\" class=\"headerlink\" title=\"命名空间的using声明\"></a>命名空间的<code>using</code>声明</h2><p>一般用到标准输入输出流的时候，库函数属于命名空间<code>std</code>，用作<code>std::cout</code>、<code>std::cin</code><br>或者在开头声明：<code>using namespace std;</code><br>或者单独声明：<code>using std::cin;</code>、<code>using std::cout;</code></p>\n<h2 id=\"类型说明符auto\"><a href=\"#类型说明符auto\" class=\"headerlink\" title=\"类型说明符auto\"></a>类型说明符<code>auto</code></h2><p><code>auto</code>：让编译器去分析表达式所属的类型。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">auto</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">auto</span> pi = <span class=\"number\">3.14</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"类型指示符decltype\"><a href=\"#类型指示符decltype\" class=\"headerlink\" title=\"类型指示符decltype\"></a>类型指示符<code>decltype</code></h3><p><code>decltype</code>是<code>declare type</code>的缩写，译为声明类型。<br>能从表达式的类型推断出变量的类型，如：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">decltype</span>(<span class=\"built_in\">sizeof</span>(arr)) length;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"基于范围的for语句-range-for\"><a href=\"#基于范围的for语句-range-for\" class=\"headerlink\" title=\"基于范围的for语句(range for)\"></a>基于范围的<code>for</code>语句(range for)</h3><p>for (<em>declaration</em> : <em>expression</em>)</p>\n<p>​ <em>statement</em></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 将string中的字符分隔输出</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> c : str)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    cout &lt;&lt; c &lt;&lt; “ ”;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">cout &lt;&lt; str; <span class=\"comment\">// h e l l o   w o r l d</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将string中字符编程大写</span></span><br><span class=\"line\"><span class=\"comment\">// 用上引用符 &amp;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> &amp;c : str)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    c = <span class=\"built_in\">toupper</span>(c);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">cout &lt;&lt; str; <span class=\"comment\">// HELLO WORLD</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"cpp中类相关\"><a href=\"#cpp中类相关\" class=\"headerlink\" title=\"cpp中类相关\"></a>cpp中类相关</h1><h3 id=\"静态成员变量和静态成员函数\"><a href=\"#静态成员变量和静态成员函数\" class=\"headerlink\" title=\"静态成员变量和静态成员函数\"></a>静态成员变量和静态成员函数</h3><p>类中定义的静态成员、函数，为整个类所有，所有对象共享。所以可以直接通过类名访问，当然也可以通过对象直接访问。</p>\n<p>静态成员函数只能直接访问静态变量和静态函数（因为不能实例化）。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">test</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"type\">static</span> <span class=\"type\">int</span> m_value;  <span class=\"comment\">//定义私有类的静态成员变量</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">test</span>()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">     m_value++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">int</span> <span class=\"title\">getValue</span><span class=\"params\">()</span>  <span class=\"comment\">//定义类的静态成员函数</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> m_value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"type\">int</span> test::m_value = <span class=\"number\">0</span>;  <span class=\"comment\">//类的静态成员变量需要在类外分配内存空间，需要单独初始化。const则在声明的同时初始化。</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    test t1;</span><br><span class=\"line\">    test t2;</span><br><span class=\"line\">    test t3;</span><br><span class=\"line\"> </span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;test::m_value2 = &quot;</span> &lt;&lt; test::<span class=\"built_in\">getValue</span>() &lt;&lt; endl; <span class=\"comment\">//通过类名直接调用公有静态成员函数，获取对象个数</span></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;t3.getValue() = &quot;</span> &lt;&lt; t3.<span class=\"built_in\">getValue</span>() &lt;&lt; endl;  <span class=\"comment\">//通过对象名调用静态成员函数获取对象个数</span></span><br><span class=\"line\">    <span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 结果为3</span></span><br></pre></td></tr></table></figure>\n\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://img-blog.csdn.net/20180804112453261?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtczEwMDg2MTE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\"\n                      alt=\"img\"\n                ></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>静态成员函数</th>\n<th>普通成员函数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>所有对象共享</td>\n<td>yes</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>隐含<code>this</code>指针</td>\n<td>no</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>访问普通成员变量（函数）</td>\n<td>no</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>访问静态成员变量（函数）</td>\n<td>yes</td>\n<td>yes</td>\n</tr>\n</tbody></table>\n<h3 id=\"类的继承\"><a href=\"#类的继承\" class=\"headerlink\" title=\"类的继承\"></a>类的继承</h3><p>相应的构造函数也可以继承。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Gene</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\"> <span class=\"type\">int</span> index;</span><br><span class=\"line\"> <span class=\"type\">int</span> dir;</span><br><span class=\"line\"> <span class=\"built_in\">Gene</span>(<span class=\"type\">int</span> _index, <span class=\"type\">int</span> _dir) :<span class=\"built_in\">index</span>(_index), <span class=\"built_in\">dir</span>(_dir) &#123;&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Res</span> :<span class=\"keyword\">public</span> Gene</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\"> <span class=\"type\">int</span> station;</span><br><span class=\"line\"> <span class=\"type\">double</span> st;</span><br><span class=\"line\"> <span class=\"type\">double</span> pt;</span><br><span class=\"line\"> <span class=\"built_in\">Res</span>(<span class=\"type\">int</span> _station, <span class=\"type\">int</span> _index, <span class=\"type\">int</span> _dir, <span class=\"type\">double</span> _st, <span class=\"type\">double</span> _pt) :<span class=\"built_in\">Gene</span>(_index, _dir), <span class=\"built_in\">station</span>(_station), <span class=\"built_in\">st</span>(_st), <span class=\"built_in\">pt</span>(_pt) &#123;&#125;;</span><br><span class=\"line\"> <span class=\"function\">string <span class=\"title\">fout</span><span class=\"params\">()</span><span class=\"type\">const</span></span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"读取CSV文件，表格型\"><a href=\"#读取CSV文件，表格型\" class=\"headerlink\" title=\"读取CSV文件，表格型\"></a>读取CSV文件，表格型</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">ifstream <span class=\"title\">inFile</span><span class=\"params\">(filePath, ios::in)</span></span>;</span><br><span class=\"line\">string lineStr;</span><br><span class=\"line\"><span class=\"built_in\">getline</span>(inFile, lineStr);<span class=\"comment\">//跳过第一行</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> (<span class=\"built_in\">getline</span>(inFile, lineStr))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"comment\">// 打印整行字符串</span></span><br><span class=\"line\"> <span class=\"comment\">//cout &lt;&lt; lineStr &lt;&lt; endl;</span></span><br><span class=\"line\"> <span class=\"comment\">// 存成二维表结构</span></span><br><span class=\"line\"> <span class=\"function\">stringstream <span class=\"title\">ss</span><span class=\"params\">(lineStr)</span></span>;</span><br><span class=\"line\"> string str;</span><br><span class=\"line\"> vector&lt;string&gt; lineArray;</span><br><span class=\"line\"> <span class=\"comment\">// 按照逗号分隔</span></span><br><span class=\"line\"> <span class=\"keyword\">while</span> (<span class=\"built_in\">getline</span>(ss, str, <span class=\"string\">&#x27;,&#x27;</span>))</span><br><span class=\"line\">  lineArray.<span class=\"built_in\">push_back</span>(str);</span><br><span class=\"line\"> strArray.<span class=\"built_in\">push_back</span>(lineArray);</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"判断字符串是否是数字\"><a href=\"#判断字符串是否是数字\" class=\"headerlink\" title=\"判断字符串是否是数字\"></a>判断字符串是否是数字</h1><p>c++比较愚蠢，只能一个字符一个字符的判断</p>\n<h3 id=\"方法一：判断字符的ASCII范围\"><a href=\"#方法一：判断字符的ASCII范围\" class=\"headerlink\" title=\"方法一：判断字符的ASCII范围\"></a>方法一：判断字符的ASCII范围</h3><p>（数字的ASCII范围为48~57）</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/img/1012444-20161118130400795-373092178.jpg\"\n                      alt=\"img\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/img/ascll.jpg\"\n                      alt=\"ascll\"\n                ></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">AllisNum</span><span class=\"params\">(string str)</span>  </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; str.<span class=\"built_in\">size</span>(); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> tmp = (<span class=\"type\">int</span>)str[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (tmp &gt;= <span class=\"number\">48</span> &amp;&amp; tmp &lt;= <span class=\"number\">57</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方法二：使用C-提供的stringstream对象\"><a href=\"#方法二：使用C-提供的stringstream对象\" class=\"headerlink\" title=\"方法二：使用C++提供的stringstream对象\"></a>方法二：使用C++提供的stringstream对象</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">stringstream <span class=\"title\">sin</span><span class=\"params\">(str)</span></span>;  </span><br><span class=\"line\"> <span class=\"type\">double</span> d;  </span><br><span class=\"line\"> <span class=\"type\">char</span> c;  </span><br><span class=\"line\"> <span class=\"keyword\">if</span>(!(sin &gt;&gt; d))  </span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*解释： </span></span><br><span class=\"line\"><span class=\"comment\">            sin&gt;&gt;t表示把sin转换成double的变量（其实对于int和float型的都会接收），</span></span><br><span class=\"line\"><span class=\"comment\">   如果转换成功，则值为非0，如果转换不成功就返回为0 </span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">if</span> (sin &gt;&gt; c) </span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*解释：</span></span><br><span class=\"line\"><span class=\"comment\">  此部分用于检测错误输入中，数字加字符串的输入形式（例如：34.f），在上面的的部分（sin&gt;&gt;t）</span></span><br><span class=\"line\"><span class=\"comment\">  已经接收并转换了输入的数字部分，在stringstream中相应也会把那一部分给清除，</span></span><br><span class=\"line\"><span class=\"comment\">  此时接收的是.f这部分，所以条件成立，返回false </span></span><br><span class=\"line\"><span class=\"comment\">          */</span> </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"> &#125;  </span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方法三：使用std-isdigit来判断\"><a href=\"#方法三：使用std-isdigit来判断\" class=\"headerlink\" title=\"方法三：使用std::isdigit来判断\"></a>方法三：使用<code>std::isdigit</code>来判断</h3><p>有一个大坑，若字符是中文可能会报错。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">isNumber</span><span class=\"params\">(<span class=\"type\">const</span> string&amp; str)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">char</span> <span class=\"type\">const</span> &amp;c : str) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (std::<span class=\"built_in\">isdigit</span>(c) == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数字取整取小数\"><a href=\"#数字取整取小数\" class=\"headerlink\" title=\"数字取整取小数\"></a>数字取整取小数</h2><ul>\n<li><p><code>ceil()</code>函数，向上取整，天花板函数</p>\n</li>\n<li><p><code>floor()</code>函数，向下取整，地板函数</p>\n</li>\n<li><p><code>round()</code>函数，四舍五入，取值不受正负号影响。</p>\n</li>\n</ul>\n<h1 id=\"程序运行时间计时⏲\"><a href=\"#程序运行时间计时⏲\" class=\"headerlink\" title=\"程序运行时间计时⏲\"></a>程序运行时间计时⏲</h1><p><code>clock()</code>有毫秒级的精度，直接上例子：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;time.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"> <span class=\"type\">time_t</span> startTime, endTime;</span><br><span class=\"line\"> startTime = <span class=\"built_in\">clock</span>();</span><br><span class=\"line\">    <span class=\"built_in\">func</span>();<span class=\"comment\">//程序运行</span></span><br><span class=\"line\">    endTime = <span class=\"built_in\">clock</span>();</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;运行时间：&quot;</span> &lt;&lt; (endTime - startTime) / CLOCKS_PER_SEC &lt;&lt; <span class=\"string\">&quot; s&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"cpp运算符重载\"><a href=\"#cpp运算符重载\" class=\"headerlink\" title=\"cpp运算符重载\"></a>cpp运算符重载</h1><h2 id=\"C-重载相等运算符\"><a href=\"#C-重载相等运算符\" class=\"headerlink\" title=\"C++重载相等运算符\"></a>C++重载相等运算符</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\"> <span class=\"type\">int</span> m_age;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\"> <span class=\"type\">bool</span> <span class=\"keyword\">operator</span>==(<span class=\"type\">const</span> Person&amp; other)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  std::cout &lt;&lt; <span class=\"string\">&quot;call member function operator==&quot;</span> &lt;&lt; std::endl;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>-&gt;m_age == other.m_age)  </span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"> <span class=\"function\">Person <span class=\"title\">p1</span><span class=\"params\">(<span class=\"number\">10</span>)</span></span>;</span><br><span class=\"line\"> <span class=\"function\">Person <span class=\"title\">p2</span><span class=\"params\">(<span class=\"number\">10</span>)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">if</span> (p1 == p2)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  std::cout &lt;&lt; <span class=\"string\">&quot;p1 is equal with p2.&quot;</span> &lt;&lt; std::endl;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"C-输入-输出运算符重载\"><a href=\"#C-输入-输出运算符重载\" class=\"headerlink\" title=\"C++ 输入/输出运算符重载\"></a>C++ 输入/输出运算符重载</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyClass</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">MyClass</span>(<span class=\"comment\">/* args */</span>)&#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">friend</span> ostream &amp;<span class=\"keyword\">operator</span>&lt;&lt;(ostream &amp;output, <span class=\"type\">const</span> MyClass my)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        output &lt;&lt; my.a &lt;&lt; endl;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> output;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">friend</span> istream &amp;<span class=\"keyword\">operator</span>&gt;&gt;(istream &amp;input, MyClass &amp;my)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        input &gt;&gt; my.a;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> input;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    MyClass my;</span><br><span class=\"line\">    cout &lt;&lt; my.a &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; my;</span><br><span class=\"line\">    cin &gt;&gt; my;</span><br><span class=\"line\">    cout &lt;&lt; my;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"cpp匿名函数\"><a href=\"#cpp匿名函数\" class=\"headerlink\" title=\"cpp匿名函数\"></a>cpp匿名函数</h1><h3 id=\"lambda函数的一般形式\"><a href=\"#lambda函数的一般形式\" class=\"headerlink\" title=\"lambda函数的一般形式\"></a>lambda函数的一般形式</h3><p>cpp中的匿名函数用Lambda表达式实现，又称为lambda函数</p>\n<p>可以这样来定义一个lambda函数</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">auto</span> func = []() &#123; std::cout &lt;&lt; <span class=\"string\">&quot;Hello world&quot;</span>; &#125;;</span><br><span class=\"line\">   <span class=\"built_in\">func</span>(); <span class=\"comment\">// now call the function</span></span><br></pre></td></tr></table></figure>\n\n<p>正常情况下，只要函数体中所有return都是同一个类型的话，编译器就会自行判断函数的返回类型。也可以显示地指定lambda函数的返回类型。这个需要用到函数返回值后置的功能,比如这个例子</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[] () -&gt; <span class=\"type\">int</span> &#123; <span class=\"keyword\">return</span> <span class=\"number\">1</span>; &#125;</span><br></pre></td></tr></table></figure>\n\n<p>所以总的来说lambda函数的一般形式就是：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[captures] (params) -&gt; ret &#123;Statments;&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"lambda函数的变量截取\"><a href=\"#lambda函数的变量截取\" class=\"headerlink\" title=\"lambda函数的变量截取\"></a>lambda函数的变量截取</h3><ul>\n<li>[] 不截取任何变量</li>\n<li>[&amp;} 截取外部作用域中所有变量，并作为引用在函数体中使用</li>\n<li>[=] 截取外部作用域中所有变量，并拷贝一份在函数体中使用</li>\n<li>[=, &amp;foo] 截取外部作用域中所有变量，并拷贝一份在函数体中使用，但是对foo变量使用引用</li>\n<li>[bar] 截取bar变量并且拷贝一份在函数体重使用，同时不截取其他变量</li>\n<li>[this] 截取当前类中的this指针。如果已经使用了&amp;或者=就默认添加此选项。</li>\n</ul>\n<h3 id=\"lambda函数的使用\"><a href=\"#lambda函数的使用\" class=\"headerlink\" title=\"lambda函数的使用\"></a>lambda函数的使用</h3><p>在类似<code>find_if</code>函数中需要人工定义一个<code>cmp</code>函数的情况，用lambda函数就会很方便，一行代码不用另外再显示定义一个函数。示例如下：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">//类的列表，要按其中某个属性排序</span></span><br><span class=\"line\">vector&lt;Solution&gt; resArray; </span><br><span class=\"line\"><span class=\"comment\">//自定义排序函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">TALBP::cmp_fitness</span><span class=\"params\">(Solution ind1, Solution ind2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ind1.fitness &lt; ind2.fitness;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">sort</span>(resArray.<span class=\"built_in\">begin</span>(), resArray.<span class=\"built_in\">end</span>(), cmp_fitness);</span><br><span class=\"line\"><span class=\"comment\">//或用lambda函数（匿名函数）更方便</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span>(resArray.<span class=\"built_in\">begin</span>(), resArray.<span class=\"built_in\">end</span>(), [](<span class=\"type\">const</span> Solution&amp; s1, <span class=\"type\">const</span> Solution&amp; s2) &#123;<span class=\"keyword\">return</span> s1.fitness &lt; s2.fitness; &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//同理</span></span><br><span class=\"line\"><span class=\"type\">int</span> target_index;</span><br><span class=\"line\"><span class=\"keyword\">auto</span> it = <span class=\"built_in\">find_if</span>(resArray.<span class=\"built_in\">begin</span>(), resArray.<span class=\"built_in\">end</span>(), [&amp;](<span class=\"type\">const</span> Solution &amp; s) &#123;<span class=\"keyword\">return</span> s.op.index == target_index; &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">for_each( v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), [] (<span class=\"type\">int</span> val)  </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    cout &lt;&lt; val;  </span><br><span class=\"line\">&#125; );</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"cpp中vector相关\"><a href=\"#cpp中vector相关\" class=\"headerlink\" title=\"cpp中vector相关\"></a>cpp中vector相关</h1><h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><h3 id=\"初始化其大小\"><a href=\"#初始化其大小\" class=\"headerlink\" title=\"初始化其大小\"></a>初始化其大小</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//默认初始化，size = 0</span></span><br><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt; v1;</span><br><span class=\"line\"><span class=\"comment\">//规定长度，以下操作等价</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v2</span><span class=\"params\">(<span class=\"number\">2</span>)</span></span>;</span><br><span class=\"line\">v1.<span class=\"built_in\">resize</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"comment\">//规定长度并赋初值，以下操作等价</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v3</span><span class=\"params\">(<span class=\"number\">3</span>, <span class=\"number\">4</span>)</span></span>;</span><br><span class=\"line\">v1.<span class=\"built_in\">resize</span>(<span class=\"number\">3</span>, <span class=\"number\">4</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二维数组的初始化\"><a href=\"#二维数组的初始化\" class=\"headerlink\" title=\"二维数组的初始化\"></a>二维数组的初始化</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; <span class=\"built_in\">v6</span>(m, <span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(n, <span class=\"number\">0</span>));<span class=\"comment\">//m*n大小，值为0</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"用已有数值初始化\"><a href=\"#用已有数值初始化\" class=\"headerlink\" title=\"用已有数值初始化\"></a>用已有数值初始化</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//用另一个数组初始化，以下操作等价</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v4</span><span class=\"params\">(v1)</span></span>;</span><br><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt; v4 = v1;</span><br><span class=\"line\"><span class=\"comment\">//用另外一个数组的指针来初始化</span></span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">3</span>] = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;;</span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v5</span><span class=\"params\">(a, a + <span class=\"number\">2</span>)</span></span>;<span class=\"comment\">//数组指针</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v5</span><span class=\"params\">(v1.begin(), v1.end() - <span class=\"number\">1</span>)</span></span>;<span class=\"comment\">//容器指针</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"插入数据\"><a href=\"#插入数据\" class=\"headerlink\" title=\"插入数据\"></a>插入数据</h2><p>单个在最前面，即第一个位置插入</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v.<span class=\"built_in\">insert</span>(v.<span class=\"built_in\">begin</span>(),val)</span><br></pre></td></tr></table></figure>\n\n<p>两个vector合并，也用<code>insert</code>，即后一个在前一个的最后插入。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resStaList.<span class=\"built_in\">insert</span>(resStaList.<span class=\"built_in\">end</span>(), temp.<span class=\"built_in\">begin</span>(), temp.<span class=\"built_in\">end</span>());</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h2><h3 id=\"简单排序\"><a href=\"#简单排序\" class=\"headerlink\" title=\"简单排序\"></a>简单排序</h3><p>从小到大排序比较简单，使用sort()函数既可</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sort</span>(v.<span class=\"built_in\">begin</span>(),v.<span class=\"built_in\">end</span>()); <span class=\"comment\">//从小到大</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span>(vec.<span class=\"built_in\">rbegin</span>(), vec.<span class=\"built_in\">rend</span>());<span class=\"comment\">//从大到小，逆向，等价于下式</span></span><br><span class=\"line\"><span class=\"built_in\">reverse</span>(arr.<span class=\"built_in\">begin</span>(), arr.<span class=\"built_in\">end</span>());</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自定义排序\"><a href=\"#自定义排序\" class=\"headerlink\" title=\"自定义排序\"></a>自定义排序</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">//类的列表，要按其中某个属性排序</span></span><br><span class=\"line\">vector&lt;Solution&gt; resArray; </span><br><span class=\"line\"><span class=\"comment\">//自定义排序函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">TALBP::cmp_fitness</span><span class=\"params\">(Solution ind1, Solution ind2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ind1.fitness &lt; ind2.fitness;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">sort</span>(resArray.<span class=\"built_in\">begin</span>(), resArray.<span class=\"built_in\">end</span>(), cmp_fitness);</span><br><span class=\"line\">或用lambda函数（匿名函数）更方便</span><br><span class=\"line\"><span class=\"built_in\">sort</span>(resArray.<span class=\"built_in\">begin</span>(), resArray.<span class=\"built_in\">end</span>(),[](<span class=\"type\">const</span> Solution&amp; s1, <span class=\"type\">const</span> Solution&amp; s2) &#123;<span class=\"keyword\">return</span> s1.fitness &lt; s2.fitness; &#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h2><p><a class=\"link\"   href=\"https://www.notion.so/391b7baf50134eb38a7603b2efaa85e7\" >Untitled<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/img/image-20210914210322302.png\"\n                      alt=\"image-20210914210322302\"\n                ></p>\n<h3 id=\"查找并删除\"><a href=\"#查找并删除\" class=\"headerlink\" title=\"查找并删除\"></a>查找并删除</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">auto</span> it = <span class=\"built_in\">find</span>(opr_left.<span class=\"built_in\">begin</span>(), opr_left.<span class=\"built_in\">end</span>(), value);</span><br><span class=\"line\"><span class=\"keyword\">auto</span> it = <span class=\"built_in\">find_if</span>(opr_left.<span class=\"built_in\">begin</span>(), opr_left.<span class=\"built_in\">end</span>(), cmp);</span><br><span class=\"line\">opr_left.<span class=\"built_in\">erase</span>(it);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"去重\"><a href=\"#去重\" class=\"headerlink\" title=\"去重\"></a>去重</h2><p>用<code>unique</code>函数来帮忙</p>\n<p>查找相邻并且相同的，将之移到容器末尾</p>\n<p>最后返回非重复的的迭代器处。</p>\n<p>再将返回值到末尾的重复值用<code>erase</code>删除就可以得到去重后的结果了</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">auto</span> last = std::<span class=\"built_in\">unique</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">v.<span class=\"built_in\">erase</span>(last, v.<span class=\"built_in\">end</span>()); </span><br></pre></td></tr></table></figure>\n\n<h1 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h1><table>\n<thead>\n<tr>\n<th>符号</th>\n<th>意义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>^</td>\n<td>匹配行的开头</td>\n</tr>\n<tr>\n<td>$</td>\n<td>匹配行的结尾</td>\n</tr>\n<tr>\n<td>.</td>\n<td>匹配任意单个字符</td>\n</tr>\n<tr>\n<td>[…]</td>\n<td>匹配[]中的任意一个字符</td>\n</tr>\n<tr>\n<td>(…)</td>\n<td>设定分组</td>\n</tr>\n<tr>\n<td>\\</td>\n<td>转义字符</td>\n</tr>\n<tr>\n<td>\\d</td>\n<td>匹配数字[0-9]</td>\n</tr>\n<tr>\n<td>\\w</td>\n<td>匹配字母[a-z]，数字，下划线</td>\n</tr>\n<tr>\n<td>\\s</td>\n<td>匹配空格</td>\n</tr>\n<tr>\n<td>\\W</td>\n<td>\\w 取反</td>\n</tr>\n<tr>\n<td>\\D</td>\n<td>\\d 取反</td>\n</tr>\n<tr>\n<td>\\S</td>\n<td>\\s 取反</td>\n</tr>\n<tr>\n<td>+</td>\n<td>前面的元素重复1次或多次</td>\n</tr>\n<tr>\n<td>*</td>\n<td>前面的元素重复任意次</td>\n</tr>\n<tr>\n<td>?</td>\n<td>前面的元素重复0次或1次</td>\n</tr>\n<tr>\n<td>{n}</td>\n<td>前面的元素重复n次</td>\n</tr>\n<tr>\n<td>{n,}</td>\n<td>前面的元素重复至少n次</td>\n</tr>\n<tr>\n<td>{n,m}</td>\n<td>前面的元素重复至少n次，至多m次</td>\n</tr>\n<tr>\n<td>|</td>\n<td>逻辑或</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;regex&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//regex_match 匹配</span></span><br><span class=\"line\"><span class=\"comment\">//regex_search 查找</span></span><br><span class=\"line\"><span class=\"comment\">//regex_replace 替换</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main1</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">regex <span class=\"title\">reg</span><span class=\"params\">(<span class=\"string\">&quot;([a-zA-Z]*) ([a-zA-Z]*)$&quot;</span>)</span></span>;</span><br><span class=\"line\">    cmatch what; <span class=\"comment\">//匹配的词语检索出来</span></span><br><span class=\"line\">    <span class=\"type\">bool</span> isit = <span class=\"built_in\">regex_match</span>(<span class=\"string\">&quot;id admin&quot;</span>, what, reg); <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i !=what.<span class=\"built_in\">size</span>(); ++i) <span class=\"comment\">//输出匹配信息</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; what[i+<span class=\"number\">1</span>].first &lt;&lt; <span class=\"string\">&quot;\\t&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;match&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>有个坑，<code>regex_match</code>方法需要输入<code>const char*</code>，这时就需要类型转化</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//string与const char*转换</span></span><br><span class=\"line\">string s = <span class=\"string\">&quot;string_To_const char* &quot;</span>;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">char</span> *c_s=s.<span class=\"built_in\">c_str</span>();</span><br><span class=\"line\"><span class=\"comment\">//还可以直接使用string类中的data()函数，直接对const char *赋值</span></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">char</span> *c_ss = s.<span class=\"built_in\">data</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//const char*转换string</span></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">char</span>* p = <span class=\"string\">&quot;const char* _To_string&quot;</span>;</span><br><span class=\"line\"><span class=\"function\">string <span class=\"title\">y</span><span class=\"params\">(p)</span></span>;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"键值对，哈希表\"><a href=\"#键值对，哈希表\" class=\"headerlink\" title=\"键值对，哈希表\"></a>键值对，哈希表</h1><p><code>unordered_map</code>容器，直译过来就是”无序 map 容器”的意思。所谓“无序”，指的是 unordered_map 容器不会像 map 容器那样对存储的数据进行排序。换句话说，unordered_map 容器和 map 容器仅有一点不同，即 map 容器中存储的数据是有序的，而 unordered_map 容器中是无序的。</p>\n<p>具体来讲，unordered_map 容器和 map 容器一样，以键值对（pair类型）的形式存储数据，存储的各个键值对的键互不相同且不允许被修改。但由于 unordered_map 容器底层采用的是哈希表存储结构，该结构本身不具有对数据的排序功能，所以此容器内部不会自行对存储的键值对进行排序。</p>\n<p>值得一提的是，unordered_map 容器在<code>&lt;unordered_map&gt;</code>头文件中，并位于<code>std</code>命名空间中。因此，如果想使用该容器，代码中应包含如下语句：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;unordered_map&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//创建空 umap 容器</span></span><br><span class=\"line\">    unordered_map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; umap;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//向 umap 容器添加新键值对</span></span><br><span class=\"line\">    umap[<span class=\"number\">6</span>] = <span class=\"number\">77</span>;       <span class=\"comment\">//方式一</span></span><br><span class=\"line\">    umap.<span class=\"built_in\">emplace</span>(<span class=\"number\">3</span>, <span class=\"number\">5</span>); <span class=\"comment\">//方式二</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//输出 umap 存储键值对的数量</span></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;umap size = &quot;</span> &lt;&lt; umap.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//使用迭代器输出 umap 容器存储的所有键值对</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> iter = umap.<span class=\"built_in\">begin</span>(); iter != umap.<span class=\"built_in\">end</span>(); ++iter)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; iter-&gt;first &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; iter-&gt;second &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//使用forrange输出 umap 容器存储的所有键值对</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> &amp;&amp;it : umap) <span class=\"comment\">//方式一</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; it.first &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; it.second &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span> &amp;[fir, sec] : umap) <span class=\"comment\">//方式二</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; fir &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; sec &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"栈\"><a href=\"#栈\" class=\"headerlink\" title=\"栈\"></a>栈</h1><p>很简单，记住是<strong>先入后出</strong>的结构。操作时压入一个新成员，返回栈顶成员，或弹出栈顶成员。</p>\n<h3 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h3><ol>\n<li><code>push()</code>: 向栈内压入一个成员；</li>\n<li><code>pop()</code>: 从栈顶弹出一个成员；</li>\n<li><code>empty()</code>: 如果栈为空返回true，否则返回false；</li>\n<li><code>top()</code>: 返回栈顶，但不删除成员；</li>\n<li><code>size()</code>: 返回栈内元素的大小；</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stack&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    stack&lt;<span class=\"type\">int</span>&gt; stk;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">50</span>; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        stk.<span class=\"built_in\">push</span>(i);<span class=\"comment\">//入栈</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;栈的大小:&quot;</span> &lt;&lt; stk.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!stk.<span class=\"built_in\">empty</span>())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; stk.<span class=\"built_in\">top</span>() &lt;&lt; endl;<span class=\"comment\">//返回栈顶成员</span></span><br><span class=\"line\">        stk.<span class=\"built_in\">pop</span>();<span class=\"comment\">//出栈</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;栈的大小:&quot;</span> &lt;&lt; stk.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"<p>比较乱，有空再整理~</p>","more":"<h1 id=\"C-学习笔记\"><a href=\"#C-学习笔记\" class=\"headerlink\" title=\"C++学习笔记\"></a>C++学习笔记</h1><h2 id=\"命名空间的using声明\"><a href=\"#命名空间的using声明\" class=\"headerlink\" title=\"命名空间的using声明\"></a>命名空间的<code>using</code>声明</h2><p>一般用到标准输入输出流的时候，库函数属于命名空间<code>std</code>，用作<code>std::cout</code>、<code>std::cin</code><br>或者在开头声明：<code>using namespace std;</code><br>或者单独声明：<code>using std::cin;</code>、<code>using std::cout;</code></p>\n<h2 id=\"类型说明符auto\"><a href=\"#类型说明符auto\" class=\"headerlink\" title=\"类型说明符auto\"></a>类型说明符<code>auto</code></h2><p><code>auto</code>：让编译器去分析表达式所属的类型。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">auto</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">auto</span> pi = <span class=\"number\">3.14</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"类型指示符decltype\"><a href=\"#类型指示符decltype\" class=\"headerlink\" title=\"类型指示符decltype\"></a>类型指示符<code>decltype</code></h3><p><code>decltype</code>是<code>declare type</code>的缩写，译为声明类型。<br>能从表达式的类型推断出变量的类型，如：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">decltype</span>(<span class=\"built_in\">sizeof</span>(arr)) length;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"基于范围的for语句-range-for\"><a href=\"#基于范围的for语句-range-for\" class=\"headerlink\" title=\"基于范围的for语句(range for)\"></a>基于范围的<code>for</code>语句(range for)</h3><p>for (<em>declaration</em> : <em>expression</em>)</p>\n<p>​ <em>statement</em></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 将string中的字符分隔输出</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> c : str)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    cout &lt;&lt; c &lt;&lt; “ ”;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">cout &lt;&lt; str; <span class=\"comment\">// h e l l o   w o r l d</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将string中字符编程大写</span></span><br><span class=\"line\"><span class=\"comment\">// 用上引用符 &amp;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> &amp;c : str)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    c = <span class=\"built_in\">toupper</span>(c);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">cout &lt;&lt; str; <span class=\"comment\">// HELLO WORLD</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"cpp中类相关\"><a href=\"#cpp中类相关\" class=\"headerlink\" title=\"cpp中类相关\"></a>cpp中类相关</h1><h3 id=\"静态成员变量和静态成员函数\"><a href=\"#静态成员变量和静态成员函数\" class=\"headerlink\" title=\"静态成员变量和静态成员函数\"></a>静态成员变量和静态成员函数</h3><p>类中定义的静态成员、函数，为整个类所有，所有对象共享。所以可以直接通过类名访问，当然也可以通过对象直接访问。</p>\n<p>静态成员函数只能直接访问静态变量和静态函数（因为不能实例化）。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">test</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"type\">static</span> <span class=\"type\">int</span> m_value;  <span class=\"comment\">//定义私有类的静态成员变量</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">test</span>()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">     m_value++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">int</span> <span class=\"title\">getValue</span><span class=\"params\">()</span>  <span class=\"comment\">//定义类的静态成员函数</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> m_value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"type\">int</span> test::m_value = <span class=\"number\">0</span>;  <span class=\"comment\">//类的静态成员变量需要在类外分配内存空间，需要单独初始化。const则在声明的同时初始化。</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    test t1;</span><br><span class=\"line\">    test t2;</span><br><span class=\"line\">    test t3;</span><br><span class=\"line\"> </span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;test::m_value2 = &quot;</span> &lt;&lt; test::<span class=\"built_in\">getValue</span>() &lt;&lt; endl; <span class=\"comment\">//通过类名直接调用公有静态成员函数，获取对象个数</span></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;t3.getValue() = &quot;</span> &lt;&lt; t3.<span class=\"built_in\">getValue</span>() &lt;&lt; endl;  <span class=\"comment\">//通过对象名调用静态成员函数获取对象个数</span></span><br><span class=\"line\">    <span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 结果为3</span></span><br></pre></td></tr></table></figure>\n\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://img-blog.csdn.net/20180804112453261?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtczEwMDg2MTE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\"\n                      alt=\"img\"\n                ></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>静态成员函数</th>\n<th>普通成员函数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>所有对象共享</td>\n<td>yes</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>隐含<code>this</code>指针</td>\n<td>no</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>访问普通成员变量（函数）</td>\n<td>no</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>访问静态成员变量（函数）</td>\n<td>yes</td>\n<td>yes</td>\n</tr>\n</tbody></table>\n<h3 id=\"类的继承\"><a href=\"#类的继承\" class=\"headerlink\" title=\"类的继承\"></a>类的继承</h3><p>相应的构造函数也可以继承。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Gene</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\"> <span class=\"type\">int</span> index;</span><br><span class=\"line\"> <span class=\"type\">int</span> dir;</span><br><span class=\"line\"> <span class=\"built_in\">Gene</span>(<span class=\"type\">int</span> _index, <span class=\"type\">int</span> _dir) :<span class=\"built_in\">index</span>(_index), <span class=\"built_in\">dir</span>(_dir) &#123;&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Res</span> :<span class=\"keyword\">public</span> Gene</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\"> <span class=\"type\">int</span> station;</span><br><span class=\"line\"> <span class=\"type\">double</span> st;</span><br><span class=\"line\"> <span class=\"type\">double</span> pt;</span><br><span class=\"line\"> <span class=\"built_in\">Res</span>(<span class=\"type\">int</span> _station, <span class=\"type\">int</span> _index, <span class=\"type\">int</span> _dir, <span class=\"type\">double</span> _st, <span class=\"type\">double</span> _pt) :<span class=\"built_in\">Gene</span>(_index, _dir), <span class=\"built_in\">station</span>(_station), <span class=\"built_in\">st</span>(_st), <span class=\"built_in\">pt</span>(_pt) &#123;&#125;;</span><br><span class=\"line\"> <span class=\"function\">string <span class=\"title\">fout</span><span class=\"params\">()</span><span class=\"type\">const</span></span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"读取CSV文件，表格型\"><a href=\"#读取CSV文件，表格型\" class=\"headerlink\" title=\"读取CSV文件，表格型\"></a>读取CSV文件，表格型</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">ifstream <span class=\"title\">inFile</span><span class=\"params\">(filePath, ios::in)</span></span>;</span><br><span class=\"line\">string lineStr;</span><br><span class=\"line\"><span class=\"built_in\">getline</span>(inFile, lineStr);<span class=\"comment\">//跳过第一行</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> (<span class=\"built_in\">getline</span>(inFile, lineStr))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"comment\">// 打印整行字符串</span></span><br><span class=\"line\"> <span class=\"comment\">//cout &lt;&lt; lineStr &lt;&lt; endl;</span></span><br><span class=\"line\"> <span class=\"comment\">// 存成二维表结构</span></span><br><span class=\"line\"> <span class=\"function\">stringstream <span class=\"title\">ss</span><span class=\"params\">(lineStr)</span></span>;</span><br><span class=\"line\"> string str;</span><br><span class=\"line\"> vector&lt;string&gt; lineArray;</span><br><span class=\"line\"> <span class=\"comment\">// 按照逗号分隔</span></span><br><span class=\"line\"> <span class=\"keyword\">while</span> (<span class=\"built_in\">getline</span>(ss, str, <span class=\"string\">&#x27;,&#x27;</span>))</span><br><span class=\"line\">  lineArray.<span class=\"built_in\">push_back</span>(str);</span><br><span class=\"line\"> strArray.<span class=\"built_in\">push_back</span>(lineArray);</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"判断字符串是否是数字\"><a href=\"#判断字符串是否是数字\" class=\"headerlink\" title=\"判断字符串是否是数字\"></a>判断字符串是否是数字</h1><p>c++比较愚蠢，只能一个字符一个字符的判断</p>\n<h3 id=\"方法一：判断字符的ASCII范围\"><a href=\"#方法一：判断字符的ASCII范围\" class=\"headerlink\" title=\"方法一：判断字符的ASCII范围\"></a>方法一：判断字符的ASCII范围</h3><p>（数字的ASCII范围为48~57）</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/img/1012444-20161118130400795-373092178.jpg\"\n                      alt=\"img\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/img/ascll.jpg\"\n                      alt=\"ascll\"\n                ></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">AllisNum</span><span class=\"params\">(string str)</span>  </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; str.<span class=\"built_in\">size</span>(); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> tmp = (<span class=\"type\">int</span>)str[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (tmp &gt;= <span class=\"number\">48</span> &amp;&amp; tmp &lt;= <span class=\"number\">57</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方法二：使用C-提供的stringstream对象\"><a href=\"#方法二：使用C-提供的stringstream对象\" class=\"headerlink\" title=\"方法二：使用C++提供的stringstream对象\"></a>方法二：使用C++提供的stringstream对象</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">stringstream <span class=\"title\">sin</span><span class=\"params\">(str)</span></span>;  </span><br><span class=\"line\"> <span class=\"type\">double</span> d;  </span><br><span class=\"line\"> <span class=\"type\">char</span> c;  </span><br><span class=\"line\"> <span class=\"keyword\">if</span>(!(sin &gt;&gt; d))  </span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*解释： </span></span><br><span class=\"line\"><span class=\"comment\">            sin&gt;&gt;t表示把sin转换成double的变量（其实对于int和float型的都会接收），</span></span><br><span class=\"line\"><span class=\"comment\">   如果转换成功，则值为非0，如果转换不成功就返回为0 </span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">if</span> (sin &gt;&gt; c) </span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*解释：</span></span><br><span class=\"line\"><span class=\"comment\">  此部分用于检测错误输入中，数字加字符串的输入形式（例如：34.f），在上面的的部分（sin&gt;&gt;t）</span></span><br><span class=\"line\"><span class=\"comment\">  已经接收并转换了输入的数字部分，在stringstream中相应也会把那一部分给清除，</span></span><br><span class=\"line\"><span class=\"comment\">  此时接收的是.f这部分，所以条件成立，返回false </span></span><br><span class=\"line\"><span class=\"comment\">          */</span> </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"> &#125;  </span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方法三：使用std-isdigit来判断\"><a href=\"#方法三：使用std-isdigit来判断\" class=\"headerlink\" title=\"方法三：使用std::isdigit来判断\"></a>方法三：使用<code>std::isdigit</code>来判断</h3><p>有一个大坑，若字符是中文可能会报错。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">isNumber</span><span class=\"params\">(<span class=\"type\">const</span> string&amp; str)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">char</span> <span class=\"type\">const</span> &amp;c : str) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (std::<span class=\"built_in\">isdigit</span>(c) == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数字取整取小数\"><a href=\"#数字取整取小数\" class=\"headerlink\" title=\"数字取整取小数\"></a>数字取整取小数</h2><ul>\n<li><p><code>ceil()</code>函数，向上取整，天花板函数</p>\n</li>\n<li><p><code>floor()</code>函数，向下取整，地板函数</p>\n</li>\n<li><p><code>round()</code>函数，四舍五入，取值不受正负号影响。</p>\n</li>\n</ul>\n<h1 id=\"程序运行时间计时⏲\"><a href=\"#程序运行时间计时⏲\" class=\"headerlink\" title=\"程序运行时间计时⏲\"></a>程序运行时间计时⏲</h1><p><code>clock()</code>有毫秒级的精度，直接上例子：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;time.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"> <span class=\"type\">time_t</span> startTime, endTime;</span><br><span class=\"line\"> startTime = <span class=\"built_in\">clock</span>();</span><br><span class=\"line\">    <span class=\"built_in\">func</span>();<span class=\"comment\">//程序运行</span></span><br><span class=\"line\">    endTime = <span class=\"built_in\">clock</span>();</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;运行时间：&quot;</span> &lt;&lt; (endTime - startTime) / CLOCKS_PER_SEC &lt;&lt; <span class=\"string\">&quot; s&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"cpp运算符重载\"><a href=\"#cpp运算符重载\" class=\"headerlink\" title=\"cpp运算符重载\"></a>cpp运算符重载</h1><h2 id=\"C-重载相等运算符\"><a href=\"#C-重载相等运算符\" class=\"headerlink\" title=\"C++重载相等运算符\"></a>C++重载相等运算符</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\"> <span class=\"type\">int</span> m_age;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\"> <span class=\"type\">bool</span> <span class=\"keyword\">operator</span>==(<span class=\"type\">const</span> Person&amp; other)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  std::cout &lt;&lt; <span class=\"string\">&quot;call member function operator==&quot;</span> &lt;&lt; std::endl;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>-&gt;m_age == other.m_age)  </span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"> <span class=\"function\">Person <span class=\"title\">p1</span><span class=\"params\">(<span class=\"number\">10</span>)</span></span>;</span><br><span class=\"line\"> <span class=\"function\">Person <span class=\"title\">p2</span><span class=\"params\">(<span class=\"number\">10</span>)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">if</span> (p1 == p2)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  std::cout &lt;&lt; <span class=\"string\">&quot;p1 is equal with p2.&quot;</span> &lt;&lt; std::endl;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"C-输入-输出运算符重载\"><a href=\"#C-输入-输出运算符重载\" class=\"headerlink\" title=\"C++ 输入/输出运算符重载\"></a>C++ 输入/输出运算符重载</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyClass</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">MyClass</span>(<span class=\"comment\">/* args */</span>)&#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">friend</span> ostream &amp;<span class=\"keyword\">operator</span>&lt;&lt;(ostream &amp;output, <span class=\"type\">const</span> MyClass my)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        output &lt;&lt; my.a &lt;&lt; endl;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> output;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">friend</span> istream &amp;<span class=\"keyword\">operator</span>&gt;&gt;(istream &amp;input, MyClass &amp;my)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        input &gt;&gt; my.a;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> input;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    MyClass my;</span><br><span class=\"line\">    cout &lt;&lt; my.a &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; my;</span><br><span class=\"line\">    cin &gt;&gt; my;</span><br><span class=\"line\">    cout &lt;&lt; my;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"cpp匿名函数\"><a href=\"#cpp匿名函数\" class=\"headerlink\" title=\"cpp匿名函数\"></a>cpp匿名函数</h1><h3 id=\"lambda函数的一般形式\"><a href=\"#lambda函数的一般形式\" class=\"headerlink\" title=\"lambda函数的一般形式\"></a>lambda函数的一般形式</h3><p>cpp中的匿名函数用Lambda表达式实现，又称为lambda函数</p>\n<p>可以这样来定义一个lambda函数</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">auto</span> func = []() &#123; std::cout &lt;&lt; <span class=\"string\">&quot;Hello world&quot;</span>; &#125;;</span><br><span class=\"line\">   <span class=\"built_in\">func</span>(); <span class=\"comment\">// now call the function</span></span><br></pre></td></tr></table></figure>\n\n<p>正常情况下，只要函数体中所有return都是同一个类型的话，编译器就会自行判断函数的返回类型。也可以显示地指定lambda函数的返回类型。这个需要用到函数返回值后置的功能,比如这个例子</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[] () -&gt; <span class=\"type\">int</span> &#123; <span class=\"keyword\">return</span> <span class=\"number\">1</span>; &#125;</span><br></pre></td></tr></table></figure>\n\n<p>所以总的来说lambda函数的一般形式就是：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[captures] (params) -&gt; ret &#123;Statments;&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"lambda函数的变量截取\"><a href=\"#lambda函数的变量截取\" class=\"headerlink\" title=\"lambda函数的变量截取\"></a>lambda函数的变量截取</h3><ul>\n<li>[] 不截取任何变量</li>\n<li>[&amp;} 截取外部作用域中所有变量，并作为引用在函数体中使用</li>\n<li>[=] 截取外部作用域中所有变量，并拷贝一份在函数体中使用</li>\n<li>[=, &amp;foo] 截取外部作用域中所有变量，并拷贝一份在函数体中使用，但是对foo变量使用引用</li>\n<li>[bar] 截取bar变量并且拷贝一份在函数体重使用，同时不截取其他变量</li>\n<li>[this] 截取当前类中的this指针。如果已经使用了&amp;或者=就默认添加此选项。</li>\n</ul>\n<h3 id=\"lambda函数的使用\"><a href=\"#lambda函数的使用\" class=\"headerlink\" title=\"lambda函数的使用\"></a>lambda函数的使用</h3><p>在类似<code>find_if</code>函数中需要人工定义一个<code>cmp</code>函数的情况，用lambda函数就会很方便，一行代码不用另外再显示定义一个函数。示例如下：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">//类的列表，要按其中某个属性排序</span></span><br><span class=\"line\">vector&lt;Solution&gt; resArray; </span><br><span class=\"line\"><span class=\"comment\">//自定义排序函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">TALBP::cmp_fitness</span><span class=\"params\">(Solution ind1, Solution ind2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ind1.fitness &lt; ind2.fitness;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">sort</span>(resArray.<span class=\"built_in\">begin</span>(), resArray.<span class=\"built_in\">end</span>(), cmp_fitness);</span><br><span class=\"line\"><span class=\"comment\">//或用lambda函数（匿名函数）更方便</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span>(resArray.<span class=\"built_in\">begin</span>(), resArray.<span class=\"built_in\">end</span>(), [](<span class=\"type\">const</span> Solution&amp; s1, <span class=\"type\">const</span> Solution&amp; s2) &#123;<span class=\"keyword\">return</span> s1.fitness &lt; s2.fitness; &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//同理</span></span><br><span class=\"line\"><span class=\"type\">int</span> target_index;</span><br><span class=\"line\"><span class=\"keyword\">auto</span> it = <span class=\"built_in\">find_if</span>(resArray.<span class=\"built_in\">begin</span>(), resArray.<span class=\"built_in\">end</span>(), [&amp;](<span class=\"type\">const</span> Solution &amp; s) &#123;<span class=\"keyword\">return</span> s.op.index == target_index; &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">for_each( v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), [] (<span class=\"type\">int</span> val)  </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    cout &lt;&lt; val;  </span><br><span class=\"line\">&#125; );</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"cpp中vector相关\"><a href=\"#cpp中vector相关\" class=\"headerlink\" title=\"cpp中vector相关\"></a>cpp中vector相关</h1><h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><h3 id=\"初始化其大小\"><a href=\"#初始化其大小\" class=\"headerlink\" title=\"初始化其大小\"></a>初始化其大小</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//默认初始化，size = 0</span></span><br><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt; v1;</span><br><span class=\"line\"><span class=\"comment\">//规定长度，以下操作等价</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v2</span><span class=\"params\">(<span class=\"number\">2</span>)</span></span>;</span><br><span class=\"line\">v1.<span class=\"built_in\">resize</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"comment\">//规定长度并赋初值，以下操作等价</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v3</span><span class=\"params\">(<span class=\"number\">3</span>, <span class=\"number\">4</span>)</span></span>;</span><br><span class=\"line\">v1.<span class=\"built_in\">resize</span>(<span class=\"number\">3</span>, <span class=\"number\">4</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二维数组的初始化\"><a href=\"#二维数组的初始化\" class=\"headerlink\" title=\"二维数组的初始化\"></a>二维数组的初始化</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; <span class=\"built_in\">v6</span>(m, <span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(n, <span class=\"number\">0</span>));<span class=\"comment\">//m*n大小，值为0</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"用已有数值初始化\"><a href=\"#用已有数值初始化\" class=\"headerlink\" title=\"用已有数值初始化\"></a>用已有数值初始化</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//用另一个数组初始化，以下操作等价</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v4</span><span class=\"params\">(v1)</span></span>;</span><br><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt; v4 = v1;</span><br><span class=\"line\"><span class=\"comment\">//用另外一个数组的指针来初始化</span></span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">3</span>] = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;;</span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v5</span><span class=\"params\">(a, a + <span class=\"number\">2</span>)</span></span>;<span class=\"comment\">//数组指针</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v5</span><span class=\"params\">(v1.begin(), v1.end() - <span class=\"number\">1</span>)</span></span>;<span class=\"comment\">//容器指针</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"插入数据\"><a href=\"#插入数据\" class=\"headerlink\" title=\"插入数据\"></a>插入数据</h2><p>单个在最前面，即第一个位置插入</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v.<span class=\"built_in\">insert</span>(v.<span class=\"built_in\">begin</span>(),val)</span><br></pre></td></tr></table></figure>\n\n<p>两个vector合并，也用<code>insert</code>，即后一个在前一个的最后插入。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resStaList.<span class=\"built_in\">insert</span>(resStaList.<span class=\"built_in\">end</span>(), temp.<span class=\"built_in\">begin</span>(), temp.<span class=\"built_in\">end</span>());</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h2><h3 id=\"简单排序\"><a href=\"#简单排序\" class=\"headerlink\" title=\"简单排序\"></a>简单排序</h3><p>从小到大排序比较简单，使用sort()函数既可</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sort</span>(v.<span class=\"built_in\">begin</span>(),v.<span class=\"built_in\">end</span>()); <span class=\"comment\">//从小到大</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span>(vec.<span class=\"built_in\">rbegin</span>(), vec.<span class=\"built_in\">rend</span>());<span class=\"comment\">//从大到小，逆向，等价于下式</span></span><br><span class=\"line\"><span class=\"built_in\">reverse</span>(arr.<span class=\"built_in\">begin</span>(), arr.<span class=\"built_in\">end</span>());</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自定义排序\"><a href=\"#自定义排序\" class=\"headerlink\" title=\"自定义排序\"></a>自定义排序</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">//类的列表，要按其中某个属性排序</span></span><br><span class=\"line\">vector&lt;Solution&gt; resArray; </span><br><span class=\"line\"><span class=\"comment\">//自定义排序函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">TALBP::cmp_fitness</span><span class=\"params\">(Solution ind1, Solution ind2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ind1.fitness &lt; ind2.fitness;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">sort</span>(resArray.<span class=\"built_in\">begin</span>(), resArray.<span class=\"built_in\">end</span>(), cmp_fitness);</span><br><span class=\"line\">或用lambda函数（匿名函数）更方便</span><br><span class=\"line\"><span class=\"built_in\">sort</span>(resArray.<span class=\"built_in\">begin</span>(), resArray.<span class=\"built_in\">end</span>(),[](<span class=\"type\">const</span> Solution&amp; s1, <span class=\"type\">const</span> Solution&amp; s2) &#123;<span class=\"keyword\">return</span> s1.fitness &lt; s2.fitness; &#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h2><p><a class=\"link\"   href=\"https://www.notion.so/391b7baf50134eb38a7603b2efaa85e7\" >Untitled<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/img/image-20210914210322302.png\"\n                      alt=\"image-20210914210322302\"\n                ></p>\n<h3 id=\"查找并删除\"><a href=\"#查找并删除\" class=\"headerlink\" title=\"查找并删除\"></a>查找并删除</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">auto</span> it = <span class=\"built_in\">find</span>(opr_left.<span class=\"built_in\">begin</span>(), opr_left.<span class=\"built_in\">end</span>(), value);</span><br><span class=\"line\"><span class=\"keyword\">auto</span> it = <span class=\"built_in\">find_if</span>(opr_left.<span class=\"built_in\">begin</span>(), opr_left.<span class=\"built_in\">end</span>(), cmp);</span><br><span class=\"line\">opr_left.<span class=\"built_in\">erase</span>(it);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"去重\"><a href=\"#去重\" class=\"headerlink\" title=\"去重\"></a>去重</h2><p>用<code>unique</code>函数来帮忙</p>\n<p>查找相邻并且相同的，将之移到容器末尾</p>\n<p>最后返回非重复的的迭代器处。</p>\n<p>再将返回值到末尾的重复值用<code>erase</code>删除就可以得到去重后的结果了</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">auto</span> last = std::<span class=\"built_in\">unique</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">v.<span class=\"built_in\">erase</span>(last, v.<span class=\"built_in\">end</span>()); </span><br></pre></td></tr></table></figure>\n\n<h1 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h1><table>\n<thead>\n<tr>\n<th>符号</th>\n<th>意义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>^</td>\n<td>匹配行的开头</td>\n</tr>\n<tr>\n<td>$</td>\n<td>匹配行的结尾</td>\n</tr>\n<tr>\n<td>.</td>\n<td>匹配任意单个字符</td>\n</tr>\n<tr>\n<td>[…]</td>\n<td>匹配[]中的任意一个字符</td>\n</tr>\n<tr>\n<td>(…)</td>\n<td>设定分组</td>\n</tr>\n<tr>\n<td>\\</td>\n<td>转义字符</td>\n</tr>\n<tr>\n<td>\\d</td>\n<td>匹配数字[0-9]</td>\n</tr>\n<tr>\n<td>\\w</td>\n<td>匹配字母[a-z]，数字，下划线</td>\n</tr>\n<tr>\n<td>\\s</td>\n<td>匹配空格</td>\n</tr>\n<tr>\n<td>\\W</td>\n<td>\\w 取反</td>\n</tr>\n<tr>\n<td>\\D</td>\n<td>\\d 取反</td>\n</tr>\n<tr>\n<td>\\S</td>\n<td>\\s 取反</td>\n</tr>\n<tr>\n<td>+</td>\n<td>前面的元素重复1次或多次</td>\n</tr>\n<tr>\n<td>*</td>\n<td>前面的元素重复任意次</td>\n</tr>\n<tr>\n<td>?</td>\n<td>前面的元素重复0次或1次</td>\n</tr>\n<tr>\n<td>{n}</td>\n<td>前面的元素重复n次</td>\n</tr>\n<tr>\n<td>{n,}</td>\n<td>前面的元素重复至少n次</td>\n</tr>\n<tr>\n<td>{n,m}</td>\n<td>前面的元素重复至少n次，至多m次</td>\n</tr>\n<tr>\n<td>|</td>\n<td>逻辑或</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;regex&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//regex_match 匹配</span></span><br><span class=\"line\"><span class=\"comment\">//regex_search 查找</span></span><br><span class=\"line\"><span class=\"comment\">//regex_replace 替换</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main1</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">regex <span class=\"title\">reg</span><span class=\"params\">(<span class=\"string\">&quot;([a-zA-Z]*) ([a-zA-Z]*)$&quot;</span>)</span></span>;</span><br><span class=\"line\">    cmatch what; <span class=\"comment\">//匹配的词语检索出来</span></span><br><span class=\"line\">    <span class=\"type\">bool</span> isit = <span class=\"built_in\">regex_match</span>(<span class=\"string\">&quot;id admin&quot;</span>, what, reg); <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i !=what.<span class=\"built_in\">size</span>(); ++i) <span class=\"comment\">//输出匹配信息</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; what[i+<span class=\"number\">1</span>].first &lt;&lt; <span class=\"string\">&quot;\\t&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;match&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>有个坑，<code>regex_match</code>方法需要输入<code>const char*</code>，这时就需要类型转化</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//string与const char*转换</span></span><br><span class=\"line\">string s = <span class=\"string\">&quot;string_To_const char* &quot;</span>;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">char</span> *c_s=s.<span class=\"built_in\">c_str</span>();</span><br><span class=\"line\"><span class=\"comment\">//还可以直接使用string类中的data()函数，直接对const char *赋值</span></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">char</span> *c_ss = s.<span class=\"built_in\">data</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//const char*转换string</span></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">char</span>* p = <span class=\"string\">&quot;const char* _To_string&quot;</span>;</span><br><span class=\"line\"><span class=\"function\">string <span class=\"title\">y</span><span class=\"params\">(p)</span></span>;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"键值对，哈希表\"><a href=\"#键值对，哈希表\" class=\"headerlink\" title=\"键值对，哈希表\"></a>键值对，哈希表</h1><p><code>unordered_map</code>容器，直译过来就是”无序 map 容器”的意思。所谓“无序”，指的是 unordered_map 容器不会像 map 容器那样对存储的数据进行排序。换句话说，unordered_map 容器和 map 容器仅有一点不同，即 map 容器中存储的数据是有序的，而 unordered_map 容器中是无序的。</p>\n<p>具体来讲，unordered_map 容器和 map 容器一样，以键值对（pair类型）的形式存储数据，存储的各个键值对的键互不相同且不允许被修改。但由于 unordered_map 容器底层采用的是哈希表存储结构，该结构本身不具有对数据的排序功能，所以此容器内部不会自行对存储的键值对进行排序。</p>\n<p>值得一提的是，unordered_map 容器在<code>&lt;unordered_map&gt;</code>头文件中，并位于<code>std</code>命名空间中。因此，如果想使用该容器，代码中应包含如下语句：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;unordered_map&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//创建空 umap 容器</span></span><br><span class=\"line\">    unordered_map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; umap;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//向 umap 容器添加新键值对</span></span><br><span class=\"line\">    umap[<span class=\"number\">6</span>] = <span class=\"number\">77</span>;       <span class=\"comment\">//方式一</span></span><br><span class=\"line\">    umap.<span class=\"built_in\">emplace</span>(<span class=\"number\">3</span>, <span class=\"number\">5</span>); <span class=\"comment\">//方式二</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//输出 umap 存储键值对的数量</span></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;umap size = &quot;</span> &lt;&lt; umap.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//使用迭代器输出 umap 容器存储的所有键值对</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> iter = umap.<span class=\"built_in\">begin</span>(); iter != umap.<span class=\"built_in\">end</span>(); ++iter)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; iter-&gt;first &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; iter-&gt;second &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//使用forrange输出 umap 容器存储的所有键值对</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> &amp;&amp;it : umap) <span class=\"comment\">//方式一</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; it.first &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; it.second &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span> &amp;[fir, sec] : umap) <span class=\"comment\">//方式二</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; fir &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; sec &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"栈\"><a href=\"#栈\" class=\"headerlink\" title=\"栈\"></a>栈</h1><p>很简单，记住是<strong>先入后出</strong>的结构。操作时压入一个新成员，返回栈顶成员，或弹出栈顶成员。</p>\n<h3 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h3><ol>\n<li><code>push()</code>: 向栈内压入一个成员；</li>\n<li><code>pop()</code>: 从栈顶弹出一个成员；</li>\n<li><code>empty()</code>: 如果栈为空返回true，否则返回false；</li>\n<li><code>top()</code>: 返回栈顶，但不删除成员；</li>\n<li><code>size()</code>: 返回栈内元素的大小；</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stack&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    stack&lt;<span class=\"type\">int</span>&gt; stk;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">50</span>; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        stk.<span class=\"built_in\">push</span>(i);<span class=\"comment\">//入栈</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;栈的大小:&quot;</span> &lt;&lt; stk.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!stk.<span class=\"built_in\">empty</span>())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; stk.<span class=\"built_in\">top</span>() &lt;&lt; endl;<span class=\"comment\">//返回栈顶成员</span></span><br><span class=\"line\">        stk.<span class=\"built_in\">pop</span>();<span class=\"comment\">//出栈</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;栈的大小:&quot;</span> &lt;&lt; stk.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"python学习笔记","subtitle":"零碎的笔记","date":"2021-05-07T16:00:00.000Z","author":"LW","header-img":"img/post-bg-code1.jpg","catalog":true,"_content":"\n比较乱，有空再整理~\n\n<!--more-->\n\n# python学习笔记\n\n## 使用镜像安装包\n\n安装包时国外服务器有时访问很慢，这里可以使用国内镜像\n\n给`pip`命令添加`-i`参数，后接镜像索引的url，例如：\n\n`https://pypi.tuna.tsinghua.edu.cn/simple gensim`\n\n## 全局变量关键字`global`\n\n```python\ncnt = 0 # 计数器\n\ndef add_cnt():\n  #函数内对全局变量操作时，显示声明这是一个全局变量\n  global cnt\n  cnt += 1\n  \ndef show_cnt():\n  global cnt\n  print(cnt)\n\nif __name__ == '__main__':\n  show_cnt()\n  add_cnt()\n  show_cnt()\n\n\\#输出结果：\n\\# 0\n\\# 1\n```\n\n## 字符串前缀`u,r,b,f`\n\n`u`，后面字符串以Unicode格式编码，常用于防止中文出现的乱码问题。\n\n```python\nu'中文’\n```\n\n`r`，纯文本？去掉反斜杠机制，常用于正则表达式re\n\n```python\nr\"\\n\\n\\n\\n”\n```\n\n`b`，bytes数据类型，常用于网络编程种，浏览器、服务器的数据传输\n\n```python\nresponse = b'<h1>Hello World!</h1>' \n```\n\n`f`，表示字符串内支持大括号内的python表达式\n\n```python\nf'a = {a}’\n```\n\n## 类与对象\n\n```python\nclass Student():\n    def __init__(self, id, name):\n        # 初始化对象\n        self.id = id\n        self.name = name\n\n    def __repr__(self):\n        # 展示对象\n        return 'id = '+str(self.id) + ', name = '+self.name\n\n    def __call__(self):\n        # 调用对象方法\n        print('I can be called')\n        print(f'my name is {self.name}')\n\n\nstu = Student(1, 'asd')\nprint(callable(stu))  # 检查对象是否可调用\nprint(stu)  # 展示对象\nstu()  # 调用对象\n```\n\n## 文件读取\n\n### 路径\n\n```python\nimport os\n# 不存在则创建文件夹\ndef mkdir(path):\n    isexists = os.path.exists(path)\n    if not isexists:\n        os.mkdir(path)\n```\n\n## 在函数中创建函数\n\n```python\ndef shit(a):\n    def good():\n        return \"good\"\n\n    def bad():\n        return \"bad\"\n    return good if a == 1 else bad()\n\ns = shit(1)\nprint(s)  # <function shit.<locals>.good at 0x00000259CB292DC0>\nprint(s())  # good\nprint(shit(1)())  # good\nprint(shit(0))  # bad\n```\n\n## for 循环后的 else 语句\n\n若循环正常结束，而并没有遇到`break`停下，则会跳转到后面的`else`语句。\n\n如以下寻找因数的例子，若没找到则是质数。\n\n```python\nfor i in range(2, 10):\n    for j in range(2, i):\n        if i % j == 0:\n            print('{} = {} * {}'.format(i, j, i/j))\n            # print(i, 'equals', j, '*', i/j)\n            break\n    else:\n     # loop fell through without finding a factor\n        print('{} is a prime number! '.format(i))\n\n# 2 is a prime number!\n# 3 is a prime number!\n# 4 = 2 * 2.0\n# 4 equals 2 * 2.0\n# 5 is a prime number!\n# 6 = 2 * 3.0\n# 6 equals 2 * 3.0\n# 7 is a prime number!\n# 8 = 2 * 4.0\n# 8 equals 2 * 4.0\n# 9 = 3 * 3.0\n# 9 equals 3 * 3.0\n\n```\n","source":"_posts/2021-05-08-python学习笔记.md","raw":"---\nlayout:     post\ntitle:      python学习笔记\nsubtitle:   零碎的笔记\ndate:       2021-05-08\nauthor:     LW\nheader-img: img/post-bg-code1.jpg\ncatalog: true\ntags: \n    - python\ncategories: \n    - 笔记\n    - python\n---\n\n比较乱，有空再整理~\n\n<!--more-->\n\n# python学习笔记\n\n## 使用镜像安装包\n\n安装包时国外服务器有时访问很慢，这里可以使用国内镜像\n\n给`pip`命令添加`-i`参数，后接镜像索引的url，例如：\n\n`https://pypi.tuna.tsinghua.edu.cn/simple gensim`\n\n## 全局变量关键字`global`\n\n```python\ncnt = 0 # 计数器\n\ndef add_cnt():\n  #函数内对全局变量操作时，显示声明这是一个全局变量\n  global cnt\n  cnt += 1\n  \ndef show_cnt():\n  global cnt\n  print(cnt)\n\nif __name__ == '__main__':\n  show_cnt()\n  add_cnt()\n  show_cnt()\n\n\\#输出结果：\n\\# 0\n\\# 1\n```\n\n## 字符串前缀`u,r,b,f`\n\n`u`，后面字符串以Unicode格式编码，常用于防止中文出现的乱码问题。\n\n```python\nu'中文’\n```\n\n`r`，纯文本？去掉反斜杠机制，常用于正则表达式re\n\n```python\nr\"\\n\\n\\n\\n”\n```\n\n`b`，bytes数据类型，常用于网络编程种，浏览器、服务器的数据传输\n\n```python\nresponse = b'<h1>Hello World!</h1>' \n```\n\n`f`，表示字符串内支持大括号内的python表达式\n\n```python\nf'a = {a}’\n```\n\n## 类与对象\n\n```python\nclass Student():\n    def __init__(self, id, name):\n        # 初始化对象\n        self.id = id\n        self.name = name\n\n    def __repr__(self):\n        # 展示对象\n        return 'id = '+str(self.id) + ', name = '+self.name\n\n    def __call__(self):\n        # 调用对象方法\n        print('I can be called')\n        print(f'my name is {self.name}')\n\n\nstu = Student(1, 'asd')\nprint(callable(stu))  # 检查对象是否可调用\nprint(stu)  # 展示对象\nstu()  # 调用对象\n```\n\n## 文件读取\n\n### 路径\n\n```python\nimport os\n# 不存在则创建文件夹\ndef mkdir(path):\n    isexists = os.path.exists(path)\n    if not isexists:\n        os.mkdir(path)\n```\n\n## 在函数中创建函数\n\n```python\ndef shit(a):\n    def good():\n        return \"good\"\n\n    def bad():\n        return \"bad\"\n    return good if a == 1 else bad()\n\ns = shit(1)\nprint(s)  # <function shit.<locals>.good at 0x00000259CB292DC0>\nprint(s())  # good\nprint(shit(1)())  # good\nprint(shit(0))  # bad\n```\n\n## for 循环后的 else 语句\n\n若循环正常结束，而并没有遇到`break`停下，则会跳转到后面的`else`语句。\n\n如以下寻找因数的例子，若没找到则是质数。\n\n```python\nfor i in range(2, 10):\n    for j in range(2, i):\n        if i % j == 0:\n            print('{} = {} * {}'.format(i, j, i/j))\n            # print(i, 'equals', j, '*', i/j)\n            break\n    else:\n     # loop fell through without finding a factor\n        print('{} is a prime number! '.format(i))\n\n# 2 is a prime number!\n# 3 is a prime number!\n# 4 = 2 * 2.0\n# 4 equals 2 * 2.0\n# 5 is a prime number!\n# 6 = 2 * 3.0\n# 6 equals 2 * 3.0\n# 7 is a prime number!\n# 8 = 2 * 4.0\n# 8 equals 2 * 4.0\n# 9 = 3 * 3.0\n# 9 equals 3 * 3.0\n\n```\n","slug":"2021-05-08-python学习笔记","published":1,"updated":"2022-03-21T09:45:30.000Z","comments":1,"photos":[],"link":"","_id":"cl792rm1f0011tkin6i1t9u9u","content":"<p>比较乱，有空再整理~</p>\n<span id=\"more\"></span>\n\n<h1 id=\"python学习笔记\"><a href=\"#python学习笔记\" class=\"headerlink\" title=\"python学习笔记\"></a>python学习笔记</h1><h2 id=\"使用镜像安装包\"><a href=\"#使用镜像安装包\" class=\"headerlink\" title=\"使用镜像安装包\"></a>使用镜像安装包</h2><p>安装包时国外服务器有时访问很慢，这里可以使用国内镜像</p>\n<p>给<code>pip</code>命令添加<code>-i</code>参数，后接镜像索引的url，例如：</p>\n<p><code>https://pypi.tuna.tsinghua.edu.cn/simple gensim</code></p>\n<h2 id=\"全局变量关键字global\"><a href=\"#全局变量关键字global\" class=\"headerlink\" title=\"全局变量关键字global\"></a>全局变量关键字<code>global</code></h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnt = <span class=\"number\">0</span> <span class=\"comment\"># 计数器</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add_cnt</span>():</span><br><span class=\"line\">  <span class=\"comment\">#函数内对全局变量操作时，显示声明这是一个全局变量</span></span><br><span class=\"line\">  <span class=\"keyword\">global</span> cnt</span><br><span class=\"line\">  cnt += <span class=\"number\">1</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">show_cnt</span>():</span><br><span class=\"line\">  <span class=\"keyword\">global</span> cnt</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(cnt)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">  show_cnt()</span><br><span class=\"line\">  add_cnt()</span><br><span class=\"line\">  show_cnt()</span><br><span class=\"line\"></span><br><span class=\"line\">\\<span class=\"comment\">#输出结果：</span></span><br><span class=\"line\">\\<span class=\"comment\"># 0</span></span><br><span class=\"line\">\\<span class=\"comment\"># 1</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字符串前缀u-r-b-f\"><a href=\"#字符串前缀u-r-b-f\" class=\"headerlink\" title=\"字符串前缀u,r,b,f\"></a>字符串前缀<code>u,r,b,f</code></h2><p><code>u</code>，后面字符串以Unicode格式编码，常用于防止中文出现的乱码问题。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">u&#x27;中文’</span></span><br></pre></td></tr></table></figure>\n\n<p><code>r</code>，纯文本？去掉反斜杠机制，常用于正则表达式re</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">r&quot;\\n\\n\\n\\n”</span></span><br></pre></td></tr></table></figure>\n\n<p><code>b</code>，bytes数据类型，常用于网络编程种，浏览器、服务器的数据传输</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">response = <span class=\"string\">b&#x27;&lt;h1&gt;Hello World!&lt;/h1&gt;&#x27;</span> </span><br></pre></td></tr></table></figure>\n\n<p><code>f</code>，表示字符串内支持大括号内的python表达式</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">f&#x27;a = <span class=\"subst\">&#123;a&#125;</span>’</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"类与对象\"><a href=\"#类与对象\" class=\"headerlink\" title=\"类与对象\"></a>类与对象</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span>():</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, <span class=\"built_in\">id</span>, name</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 初始化对象</span></span><br><span class=\"line\">        self.<span class=\"built_in\">id</span> = <span class=\"built_in\">id</span></span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__repr__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 展示对象</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;id = &#x27;</span>+<span class=\"built_in\">str</span>(self.<span class=\"built_in\">id</span>) + <span class=\"string\">&#x27;, name = &#x27;</span>+self.name</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__call__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 调用对象方法</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;I can be called&#x27;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;my name is <span class=\"subst\">&#123;self.name&#125;</span>&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">stu = Student(<span class=\"number\">1</span>, <span class=\"string\">&#x27;asd&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">callable</span>(stu))  <span class=\"comment\"># 检查对象是否可调用</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(stu)  <span class=\"comment\"># 展示对象</span></span><br><span class=\"line\">stu()  <span class=\"comment\"># 调用对象</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文件读取\"><a href=\"#文件读取\" class=\"headerlink\" title=\"文件读取\"></a>文件读取</h2><h3 id=\"路径\"><a href=\"#路径\" class=\"headerlink\" title=\"路径\"></a>路径</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"comment\"># 不存在则创建文件夹</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">mkdir</span>(<span class=\"params\">path</span>):</span><br><span class=\"line\">    isexists = os.path.exists(path)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> isexists:</span><br><span class=\"line\">        os.mkdir(path)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"在函数中创建函数\"><a href=\"#在函数中创建函数\" class=\"headerlink\" title=\"在函数中创建函数\"></a>在函数中创建函数</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">shit</span>(<span class=\"params\">a</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">good</span>():</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;good&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">bad</span>():</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;bad&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> good <span class=\"keyword\">if</span> a == <span class=\"number\">1</span> <span class=\"keyword\">else</span> bad()</span><br><span class=\"line\"></span><br><span class=\"line\">s = shit(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s)  <span class=\"comment\"># &lt;function shit.&lt;locals&gt;.good at 0x00000259CB292DC0&gt;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(s())  <span class=\"comment\"># good</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(shit(<span class=\"number\">1</span>)())  <span class=\"comment\"># good</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(shit(<span class=\"number\">0</span>))  <span class=\"comment\"># bad</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"for-循环后的-else-语句\"><a href=\"#for-循环后的-else-语句\" class=\"headerlink\" title=\"for 循环后的 else 语句\"></a>for 循环后的 else 语句</h2><p>若循环正常结束，而并没有遇到<code>break</code>停下，则会跳转到后面的<code>else</code>语句。</p>\n<p>如以下寻找因数的例子，若没找到则是质数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2</span>, <span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2</span>, i):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i % j == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#123;&#125; = &#123;&#125; * &#123;&#125;&#x27;</span>.<span class=\"built_in\">format</span>(i, j, i/j))</span><br><span class=\"line\">            <span class=\"comment\"># print(i, &#x27;equals&#x27;, j, &#x27;*&#x27;, i/j)</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">     <span class=\"comment\"># loop fell through without finding a factor</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#123;&#125; is a prime number! &#x27;</span>.<span class=\"built_in\">format</span>(i))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2 is a prime number!</span></span><br><span class=\"line\"><span class=\"comment\"># 3 is a prime number!</span></span><br><span class=\"line\"><span class=\"comment\"># 4 = 2 * 2.0</span></span><br><span class=\"line\"><span class=\"comment\"># 4 equals 2 * 2.0</span></span><br><span class=\"line\"><span class=\"comment\"># 5 is a prime number!</span></span><br><span class=\"line\"><span class=\"comment\"># 6 = 2 * 3.0</span></span><br><span class=\"line\"><span class=\"comment\"># 6 equals 2 * 3.0</span></span><br><span class=\"line\"><span class=\"comment\"># 7 is a prime number!</span></span><br><span class=\"line\"><span class=\"comment\"># 8 = 2 * 4.0</span></span><br><span class=\"line\"><span class=\"comment\"># 8 equals 2 * 4.0</span></span><br><span class=\"line\"><span class=\"comment\"># 9 = 3 * 3.0</span></span><br><span class=\"line\"><span class=\"comment\"># 9 equals 3 * 3.0</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"<p>比较乱，有空再整理~</p>","more":"<h1 id=\"python学习笔记\"><a href=\"#python学习笔记\" class=\"headerlink\" title=\"python学习笔记\"></a>python学习笔记</h1><h2 id=\"使用镜像安装包\"><a href=\"#使用镜像安装包\" class=\"headerlink\" title=\"使用镜像安装包\"></a>使用镜像安装包</h2><p>安装包时国外服务器有时访问很慢，这里可以使用国内镜像</p>\n<p>给<code>pip</code>命令添加<code>-i</code>参数，后接镜像索引的url，例如：</p>\n<p><code>https://pypi.tuna.tsinghua.edu.cn/simple gensim</code></p>\n<h2 id=\"全局变量关键字global\"><a href=\"#全局变量关键字global\" class=\"headerlink\" title=\"全局变量关键字global\"></a>全局变量关键字<code>global</code></h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnt = <span class=\"number\">0</span> <span class=\"comment\"># 计数器</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add_cnt</span>():</span><br><span class=\"line\">  <span class=\"comment\">#函数内对全局变量操作时，显示声明这是一个全局变量</span></span><br><span class=\"line\">  <span class=\"keyword\">global</span> cnt</span><br><span class=\"line\">  cnt += <span class=\"number\">1</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">show_cnt</span>():</span><br><span class=\"line\">  <span class=\"keyword\">global</span> cnt</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(cnt)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">  show_cnt()</span><br><span class=\"line\">  add_cnt()</span><br><span class=\"line\">  show_cnt()</span><br><span class=\"line\"></span><br><span class=\"line\">\\<span class=\"comment\">#输出结果：</span></span><br><span class=\"line\">\\<span class=\"comment\"># 0</span></span><br><span class=\"line\">\\<span class=\"comment\"># 1</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字符串前缀u-r-b-f\"><a href=\"#字符串前缀u-r-b-f\" class=\"headerlink\" title=\"字符串前缀u,r,b,f\"></a>字符串前缀<code>u,r,b,f</code></h2><p><code>u</code>，后面字符串以Unicode格式编码，常用于防止中文出现的乱码问题。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">u&#x27;中文’</span></span><br></pre></td></tr></table></figure>\n\n<p><code>r</code>，纯文本？去掉反斜杠机制，常用于正则表达式re</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">r&quot;\\n\\n\\n\\n”</span></span><br></pre></td></tr></table></figure>\n\n<p><code>b</code>，bytes数据类型，常用于网络编程种，浏览器、服务器的数据传输</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">response = <span class=\"string\">b&#x27;&lt;h1&gt;Hello World!&lt;/h1&gt;&#x27;</span> </span><br></pre></td></tr></table></figure>\n\n<p><code>f</code>，表示字符串内支持大括号内的python表达式</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">f&#x27;a = <span class=\"subst\">&#123;a&#125;</span>’</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"类与对象\"><a href=\"#类与对象\" class=\"headerlink\" title=\"类与对象\"></a>类与对象</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span>():</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, <span class=\"built_in\">id</span>, name</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 初始化对象</span></span><br><span class=\"line\">        self.<span class=\"built_in\">id</span> = <span class=\"built_in\">id</span></span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__repr__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 展示对象</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;id = &#x27;</span>+<span class=\"built_in\">str</span>(self.<span class=\"built_in\">id</span>) + <span class=\"string\">&#x27;, name = &#x27;</span>+self.name</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__call__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 调用对象方法</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;I can be called&#x27;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;my name is <span class=\"subst\">&#123;self.name&#125;</span>&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">stu = Student(<span class=\"number\">1</span>, <span class=\"string\">&#x27;asd&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">callable</span>(stu))  <span class=\"comment\"># 检查对象是否可调用</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(stu)  <span class=\"comment\"># 展示对象</span></span><br><span class=\"line\">stu()  <span class=\"comment\"># 调用对象</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文件读取\"><a href=\"#文件读取\" class=\"headerlink\" title=\"文件读取\"></a>文件读取</h2><h3 id=\"路径\"><a href=\"#路径\" class=\"headerlink\" title=\"路径\"></a>路径</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"comment\"># 不存在则创建文件夹</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">mkdir</span>(<span class=\"params\">path</span>):</span><br><span class=\"line\">    isexists = os.path.exists(path)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> isexists:</span><br><span class=\"line\">        os.mkdir(path)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"在函数中创建函数\"><a href=\"#在函数中创建函数\" class=\"headerlink\" title=\"在函数中创建函数\"></a>在函数中创建函数</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">shit</span>(<span class=\"params\">a</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">good</span>():</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;good&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">bad</span>():</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;bad&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> good <span class=\"keyword\">if</span> a == <span class=\"number\">1</span> <span class=\"keyword\">else</span> bad()</span><br><span class=\"line\"></span><br><span class=\"line\">s = shit(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s)  <span class=\"comment\"># &lt;function shit.&lt;locals&gt;.good at 0x00000259CB292DC0&gt;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(s())  <span class=\"comment\"># good</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(shit(<span class=\"number\">1</span>)())  <span class=\"comment\"># good</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(shit(<span class=\"number\">0</span>))  <span class=\"comment\"># bad</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"for-循环后的-else-语句\"><a href=\"#for-循环后的-else-语句\" class=\"headerlink\" title=\"for 循环后的 else 语句\"></a>for 循环后的 else 语句</h2><p>若循环正常结束，而并没有遇到<code>break</code>停下，则会跳转到后面的<code>else</code>语句。</p>\n<p>如以下寻找因数的例子，若没找到则是质数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2</span>, <span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2</span>, i):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i % j == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#123;&#125; = &#123;&#125; * &#123;&#125;&#x27;</span>.<span class=\"built_in\">format</span>(i, j, i/j))</span><br><span class=\"line\">            <span class=\"comment\"># print(i, &#x27;equals&#x27;, j, &#x27;*&#x27;, i/j)</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">     <span class=\"comment\"># loop fell through without finding a factor</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#123;&#125; is a prime number! &#x27;</span>.<span class=\"built_in\">format</span>(i))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2 is a prime number!</span></span><br><span class=\"line\"><span class=\"comment\"># 3 is a prime number!</span></span><br><span class=\"line\"><span class=\"comment\"># 4 = 2 * 2.0</span></span><br><span class=\"line\"><span class=\"comment\"># 4 equals 2 * 2.0</span></span><br><span class=\"line\"><span class=\"comment\"># 5 is a prime number!</span></span><br><span class=\"line\"><span class=\"comment\"># 6 = 2 * 3.0</span></span><br><span class=\"line\"><span class=\"comment\"># 6 equals 2 * 3.0</span></span><br><span class=\"line\"><span class=\"comment\"># 7 is a prime number!</span></span><br><span class=\"line\"><span class=\"comment\"># 8 = 2 * 4.0</span></span><br><span class=\"line\"><span class=\"comment\"># 8 equals 2 * 4.0</span></span><br><span class=\"line\"><span class=\"comment\"># 9 = 3 * 3.0</span></span><br><span class=\"line\"><span class=\"comment\"># 9 equals 3 * 3.0</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"天气查询邮件提醒","subtitle":"无聊的记录","date":"2021-05-29T16:00:00.000Z","author":"LW","header-img":"img/post-bg-code1.jpg","_content":"\n\n\n# 天气查询邮件提醒\n\n### 软件界面ui\n\n#### ui设计\n\n用的是`PyQt5`，先用`Qt Designer`设计界面，拖动组件改属性即可，注意`objectName`一定要改，保持良好的习惯。\n\n![image-20210530172731604](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/image-20210530172731604.png)\n\n<!--more-->\n\n#### 主程序调用ui\n\n将ui文件转化成`py`文件`Ui_weatherQuery.py`，在这个文件里绑定事件，然后在主程序里面调用界面就可。\n\n##### `ui`事件绑定业务函数\n\n在`Ui_weatherQuery.py`文件里，\n\n```python\nself.queryBtn.clicked.connect(Dialog.queryWeather)\nself.clearBtn.clicked.connect(Dialog.clearText)\nself.pushButton.clicked.connect(Dialog.sendEmail)\n```\n\n##### 主程序里与ui的交互\n\n```python\nclass MainDialog(QDialog):\n    def __init__(self, parent=None):\n        super(QDialog, self).__init__(parent)\n        self.ui = Ui_weatherQuery.Ui_Dialog()\n        self.ui.setupUi(self)\n\n    def queryWeather(self):\n        city_name = self.ui.txtCityName.text()\n        self.res = query_weather(city_name=city_name)\n        self.ui.txtQueryRes.setText(self.res)\n\n    def clearText(self):\n        self.ui.txtQueryRes.clear()\n        self.ui.txtCityName.clear()\n\n    def sendEmail(self):\n        email_send.go(msg=self.res, subject_msg='天气预报')\n        pass\n```\n\n##### 显示界面模板框架\n\n```python\nfrom PyQt5.QtWidgets import QApplication, QDial, QDialog\n\nif __name__ == '__main__':\n    myApp = QApplication(sys.argv)\n    myDlg = MainDialog()\n    myDlg.show()\n\n    sys.exit(myApp.exec_())\n```\n\n### 天气查询部分\n\n#### 调用api\n\napi有免费的，申请就完事了。\n\n用`request`包发送请求，返回的`json`解析一下就可。\n\n```python\ndef query_weather(city_name=\"武汉\", record=True):\n    appid = \"29467327\"\n    appsecret = \"27kJLhNF\"\n    # 请求地址&信息\n    url = u\"https://www.tianqiapi.com/free/week?appid={}&appsecret={}&city={}\".format(\n        appid, appsecret, city_name)\n    # 发送请求得到返回结果\n    r = requests.get(url)\n    # 格式化显示json\n    res = json.dumps(r.json(), indent=4, ensure_ascii=False)\n    if record:\n        with open(\"res.txt\", 'w')as f:\n            f.write(res)\n    return res\n```\n\n部分结果展示\n\n```        json\n{\n    \"cityid\": \"101200101\",\n    \"city\": \"武汉\",\n    \"update_time\": \"2021-05-30 15:55:18\",\n    \"data\": [\n        {\n            \"date\": \"2021-05-30\",\n            \"wea\": \"晴转多云\",\n            \"wea_img\": \"yun\",\n            \"tem_day\": \"30\",\n            \"tem_night\": \"20\",\n            \"win\": \"南风\",\n            \"win_speed\": \"<3级\"\n        },\n        ......\n    ]\n}\n```\n\n### 邮件发送部分\n\n```python\n# smtp（simple mail transfer protocol）是python自带的邮件模块，负责邮件传输\n# email负责邮件内容\nimport smtplib\n\nfrom email.header import Header\nfrom email.mime.text import MIMEText\nfrom email.utils import parseaddr, formataddr\n\n# stmp_server={'163':'smtp.163.com','qq':'stmp.qq.com'}\n# port_list={'163':25,'qq':465}\nclass email_send:\n    '''\n    description:封装了构造邮件及发送邮件的操作\n    param {*}\n    return {*}\n    '''\n\n    def __init__(self, from_addr, password, to_addr, server=\"smtp.qq.com\", port=465) -> None:\n        self.from_addr = from_addr\n        self.password = password\n        self.to_addr = to_addr\n        self.server = server\n        self.port = port\n\n    def server_start(self):\n        self.server = smtplib.SMTP_SSL(host=self.server, port=self.port)\n        print(self.server)\n\n    def server_quit(self):\n        self.server.quit()\n\n    def _format_addr(self, addr_msg):\n        name, addr = parseaddr(addr_msg)\n        return formataddr((Header(name, 'utf-8').encode(), addr))\n\n    def send_text_data(self, text, data_type, subject_msg):\n        msg = MIMEText(_text=text, _subtype='plain', _charset='utf-8')\n        msg['From'] = self._format_addr(self.from_addr)\n        msg['To'] = self._format_addr(self.to_addr)\n        msg['Subject'] = Header(s=subject_msg, charset='utf-8')\n        self.server.login(self.from_addr, self.password)\n        self.server.sendmail(self.from_addr, self.to_addr, msg.as_string())\n\n\ndef go(msg='新的邮件代码测试', subject_msg='A new test'):\n    # 账号信息\n    sender = \"141*****@qq.com\"  # 发件人\n    password = \"*******\"   # 在QQ邮箱里可打开SMTP服务的密码，非邮箱登录密码\n    receivers = [\"13******@qq.com\"] # 收件人\n    # 邮件文本内容\n    try:\n        es = email_send(sender, password, receivers)\n        es.server_start()\n        es.send_text_data(msg, 'plain', subject_msg)\n        es.server_quit()\n        print('success')\n    except:\n        print('error')\n\n\nif __name__ == \"__main__\":\n    go()\n```\n","source":"_posts/2021-05-30-python天气查询邮件提醒.md","raw":"---\nlayout:     post\ntitle:      天气查询邮件提醒\nsubtitle:   无聊的记录\ndate:       2021-05-30\nauthor:     LW\nheader-img: img/post-bg-code1.jpg\ntags: \n    - python\n    - 编程\ncategories: \n    - 笔记\n    - python\n---\n\n\n\n# 天气查询邮件提醒\n\n### 软件界面ui\n\n#### ui设计\n\n用的是`PyQt5`，先用`Qt Designer`设计界面，拖动组件改属性即可，注意`objectName`一定要改，保持良好的习惯。\n\n![image-20210530172731604](https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/image-20210530172731604.png)\n\n<!--more-->\n\n#### 主程序调用ui\n\n将ui文件转化成`py`文件`Ui_weatherQuery.py`，在这个文件里绑定事件，然后在主程序里面调用界面就可。\n\n##### `ui`事件绑定业务函数\n\n在`Ui_weatherQuery.py`文件里，\n\n```python\nself.queryBtn.clicked.connect(Dialog.queryWeather)\nself.clearBtn.clicked.connect(Dialog.clearText)\nself.pushButton.clicked.connect(Dialog.sendEmail)\n```\n\n##### 主程序里与ui的交互\n\n```python\nclass MainDialog(QDialog):\n    def __init__(self, parent=None):\n        super(QDialog, self).__init__(parent)\n        self.ui = Ui_weatherQuery.Ui_Dialog()\n        self.ui.setupUi(self)\n\n    def queryWeather(self):\n        city_name = self.ui.txtCityName.text()\n        self.res = query_weather(city_name=city_name)\n        self.ui.txtQueryRes.setText(self.res)\n\n    def clearText(self):\n        self.ui.txtQueryRes.clear()\n        self.ui.txtCityName.clear()\n\n    def sendEmail(self):\n        email_send.go(msg=self.res, subject_msg='天气预报')\n        pass\n```\n\n##### 显示界面模板框架\n\n```python\nfrom PyQt5.QtWidgets import QApplication, QDial, QDialog\n\nif __name__ == '__main__':\n    myApp = QApplication(sys.argv)\n    myDlg = MainDialog()\n    myDlg.show()\n\n    sys.exit(myApp.exec_())\n```\n\n### 天气查询部分\n\n#### 调用api\n\napi有免费的，申请就完事了。\n\n用`request`包发送请求，返回的`json`解析一下就可。\n\n```python\ndef query_weather(city_name=\"武汉\", record=True):\n    appid = \"29467327\"\n    appsecret = \"27kJLhNF\"\n    # 请求地址&信息\n    url = u\"https://www.tianqiapi.com/free/week?appid={}&appsecret={}&city={}\".format(\n        appid, appsecret, city_name)\n    # 发送请求得到返回结果\n    r = requests.get(url)\n    # 格式化显示json\n    res = json.dumps(r.json(), indent=4, ensure_ascii=False)\n    if record:\n        with open(\"res.txt\", 'w')as f:\n            f.write(res)\n    return res\n```\n\n部分结果展示\n\n```        json\n{\n    \"cityid\": \"101200101\",\n    \"city\": \"武汉\",\n    \"update_time\": \"2021-05-30 15:55:18\",\n    \"data\": [\n        {\n            \"date\": \"2021-05-30\",\n            \"wea\": \"晴转多云\",\n            \"wea_img\": \"yun\",\n            \"tem_day\": \"30\",\n            \"tem_night\": \"20\",\n            \"win\": \"南风\",\n            \"win_speed\": \"<3级\"\n        },\n        ......\n    ]\n}\n```\n\n### 邮件发送部分\n\n```python\n# smtp（simple mail transfer protocol）是python自带的邮件模块，负责邮件传输\n# email负责邮件内容\nimport smtplib\n\nfrom email.header import Header\nfrom email.mime.text import MIMEText\nfrom email.utils import parseaddr, formataddr\n\n# stmp_server={'163':'smtp.163.com','qq':'stmp.qq.com'}\n# port_list={'163':25,'qq':465}\nclass email_send:\n    '''\n    description:封装了构造邮件及发送邮件的操作\n    param {*}\n    return {*}\n    '''\n\n    def __init__(self, from_addr, password, to_addr, server=\"smtp.qq.com\", port=465) -> None:\n        self.from_addr = from_addr\n        self.password = password\n        self.to_addr = to_addr\n        self.server = server\n        self.port = port\n\n    def server_start(self):\n        self.server = smtplib.SMTP_SSL(host=self.server, port=self.port)\n        print(self.server)\n\n    def server_quit(self):\n        self.server.quit()\n\n    def _format_addr(self, addr_msg):\n        name, addr = parseaddr(addr_msg)\n        return formataddr((Header(name, 'utf-8').encode(), addr))\n\n    def send_text_data(self, text, data_type, subject_msg):\n        msg = MIMEText(_text=text, _subtype='plain', _charset='utf-8')\n        msg['From'] = self._format_addr(self.from_addr)\n        msg['To'] = self._format_addr(self.to_addr)\n        msg['Subject'] = Header(s=subject_msg, charset='utf-8')\n        self.server.login(self.from_addr, self.password)\n        self.server.sendmail(self.from_addr, self.to_addr, msg.as_string())\n\n\ndef go(msg='新的邮件代码测试', subject_msg='A new test'):\n    # 账号信息\n    sender = \"141*****@qq.com\"  # 发件人\n    password = \"*******\"   # 在QQ邮箱里可打开SMTP服务的密码，非邮箱登录密码\n    receivers = [\"13******@qq.com\"] # 收件人\n    # 邮件文本内容\n    try:\n        es = email_send(sender, password, receivers)\n        es.server_start()\n        es.send_text_data(msg, 'plain', subject_msg)\n        es.server_quit()\n        print('success')\n    except:\n        print('error')\n\n\nif __name__ == \"__main__\":\n    go()\n```\n","slug":"2021-05-30-python天气查询邮件提醒","published":1,"updated":"2022-03-21T09:19:48.000Z","comments":1,"photos":[],"link":"","_id":"cl792rm1g0014tkinheva8o7k","content":"<h1 id=\"天气查询邮件提醒\"><a href=\"#天气查询邮件提醒\" class=\"headerlink\" title=\"天气查询邮件提醒\"></a>天气查询邮件提醒</h1><h3 id=\"软件界面ui\"><a href=\"#软件界面ui\" class=\"headerlink\" title=\"软件界面ui\"></a>软件界面ui</h3><h4 id=\"ui设计\"><a href=\"#ui设计\" class=\"headerlink\" title=\"ui设计\"></a>ui设计</h4><p>用的是<code>PyQt5</code>，先用<code>Qt Designer</code>设计界面，拖动组件改属性即可，注意<code>objectName</code>一定要改，保持良好的习惯。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/image-20210530172731604.png\"\n                      alt=\"image-20210530172731604\"\n                ></p>\n<span id=\"more\"></span>\n\n<h4 id=\"主程序调用ui\"><a href=\"#主程序调用ui\" class=\"headerlink\" title=\"主程序调用ui\"></a>主程序调用ui</h4><p>将ui文件转化成<code>py</code>文件<code>Ui_weatherQuery.py</code>，在这个文件里绑定事件，然后在主程序里面调用界面就可。</p>\n<h5 id=\"ui事件绑定业务函数\"><a href=\"#ui事件绑定业务函数\" class=\"headerlink\" title=\"ui事件绑定业务函数\"></a><code>ui</code>事件绑定业务函数</h5><p>在<code>Ui_weatherQuery.py</code>文件里，</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.queryBtn.clicked.connect(Dialog.queryWeather)</span><br><span class=\"line\">self.clearBtn.clicked.connect(Dialog.clearText)</span><br><span class=\"line\">self.pushButton.clicked.connect(Dialog.sendEmail)</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"主程序里与ui的交互\"><a href=\"#主程序里与ui的交互\" class=\"headerlink\" title=\"主程序里与ui的交互\"></a>主程序里与ui的交互</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MainDialog</span>(<span class=\"title class_ inherited__\">QDialog</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, parent=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(QDialog, self).__init__(parent)</span><br><span class=\"line\">        self.ui = Ui_weatherQuery.Ui_Dialog()</span><br><span class=\"line\">        self.ui.setupUi(self)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">queryWeather</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        city_name = self.ui.txtCityName.text()</span><br><span class=\"line\">        self.res = query_weather(city_name=city_name)</span><br><span class=\"line\">        self.ui.txtQueryRes.setText(self.res)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">clearText</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.ui.txtQueryRes.clear()</span><br><span class=\"line\">        self.ui.txtCityName.clear()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">sendEmail</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        email_send.go(msg=self.res, subject_msg=<span class=\"string\">&#x27;天气预报&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"显示界面模板框架\"><a href=\"#显示界面模板框架\" class=\"headerlink\" title=\"显示界面模板框架\"></a>显示界面模板框架</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QDial, QDialog</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    myApp = QApplication(sys.argv)</span><br><span class=\"line\">    myDlg = MainDialog()</span><br><span class=\"line\">    myDlg.show()</span><br><span class=\"line\"></span><br><span class=\"line\">    sys.exit(myApp.exec_())</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"天气查询部分\"><a href=\"#天气查询部分\" class=\"headerlink\" title=\"天气查询部分\"></a>天气查询部分</h3><h4 id=\"调用api\"><a href=\"#调用api\" class=\"headerlink\" title=\"调用api\"></a>调用api</h4><p>api有免费的，申请就完事了。</p>\n<p>用<code>request</code>包发送请求，返回的<code>json</code>解析一下就可。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">query_weather</span>(<span class=\"params\">city_name=<span class=\"string\">&quot;武汉&quot;</span>, record=<span class=\"literal\">True</span></span>):</span><br><span class=\"line\">    appid = <span class=\"string\">&quot;29467327&quot;</span></span><br><span class=\"line\">    appsecret = <span class=\"string\">&quot;27kJLhNF&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 请求地址&amp;信息</span></span><br><span class=\"line\">    url = <span class=\"string\">u&quot;https://www.tianqiapi.com/free/week?appid=&#123;&#125;&amp;appsecret=&#123;&#125;&amp;city=&#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(</span><br><span class=\"line\">        appid, appsecret, city_name)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求得到返回结果</span></span><br><span class=\"line\">    r = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 格式化显示json</span></span><br><span class=\"line\">    res = json.dumps(r.json(), indent=<span class=\"number\">4</span>, ensure_ascii=<span class=\"literal\">False</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> record:</span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;res.txt&quot;</span>, <span class=\"string\">&#x27;w&#x27;</span>)<span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(res)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br></pre></td></tr></table></figure>\n\n<p>部分结果展示</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;cityid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;101200101&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;city&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;武汉&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;update_time&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;2021-05-30 15:55:18&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;date&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;2021-05-30&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;wea&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;晴转多云&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;wea_img&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;yun&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;tem_day&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;30&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;tem_night&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;20&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;win&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;南风&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;win_speed&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&lt;3级&quot;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        ......</span><br><span class=\"line\">    <span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"邮件发送部分\"><a href=\"#邮件发送部分\" class=\"headerlink\" title=\"邮件发送部分\"></a>邮件发送部分</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># smtp（simple mail transfer protocol）是python自带的邮件模块，负责邮件传输</span></span><br><span class=\"line\"><span class=\"comment\"># email负责邮件内容</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> email.header <span class=\"keyword\">import</span> Header</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.text <span class=\"keyword\">import</span> MIMEText</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.utils <span class=\"keyword\">import</span> parseaddr, formataddr</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># stmp_server=&#123;&#x27;163&#x27;:&#x27;smtp.163.com&#x27;,&#x27;qq&#x27;:&#x27;stmp.qq.com&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># port_list=&#123;&#x27;163&#x27;:25,&#x27;qq&#x27;:465&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">email_send</span>:</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    description:封装了构造邮件及发送邮件的操作</span></span><br><span class=\"line\"><span class=\"string\">    param &#123;*&#125;</span></span><br><span class=\"line\"><span class=\"string\">    return &#123;*&#125;</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, from_addr, password, to_addr, server=<span class=\"string\">&quot;smtp.qq.com&quot;</span>, port=<span class=\"number\">465</span></span>) -&gt; <span class=\"literal\">None</span>:</span><br><span class=\"line\">        self.from_addr = from_addr</span><br><span class=\"line\">        self.password = password</span><br><span class=\"line\">        self.to_addr = to_addr</span><br><span class=\"line\">        self.server = server</span><br><span class=\"line\">        self.port = port</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">server_start</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.server = smtplib.SMTP_SSL(host=self.server, port=self.port)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(self.server)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">server_quit</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.server.quit()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">_format_addr</span>(<span class=\"params\">self, addr_msg</span>):</span><br><span class=\"line\">        name, addr = parseaddr(addr_msg)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> formataddr((Header(name, <span class=\"string\">&#x27;utf-8&#x27;</span>).encode(), addr))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">send_text_data</span>(<span class=\"params\">self, text, data_type, subject_msg</span>):</span><br><span class=\"line\">        msg = MIMEText(_text=text, _subtype=<span class=\"string\">&#x27;plain&#x27;</span>, _charset=<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">        msg[<span class=\"string\">&#x27;From&#x27;</span>] = self._format_addr(self.from_addr)</span><br><span class=\"line\">        msg[<span class=\"string\">&#x27;To&#x27;</span>] = self._format_addr(self.to_addr)</span><br><span class=\"line\">        msg[<span class=\"string\">&#x27;Subject&#x27;</span>] = Header(s=subject_msg, charset=<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">        self.server.login(self.from_addr, self.password)</span><br><span class=\"line\">        self.server.sendmail(self.from_addr, self.to_addr, msg.as_string())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">go</span>(<span class=\"params\">msg=<span class=\"string\">&#x27;新的邮件代码测试&#x27;</span>, subject_msg=<span class=\"string\">&#x27;A new test&#x27;</span></span>):</span><br><span class=\"line\">    <span class=\"comment\"># 账号信息</span></span><br><span class=\"line\">    sender = <span class=\"string\">&quot;141*****@qq.com&quot;</span>  <span class=\"comment\"># 发件人</span></span><br><span class=\"line\">    password = <span class=\"string\">&quot;*******&quot;</span>   <span class=\"comment\"># 在QQ邮箱里可打开SMTP服务的密码，非邮箱登录密码</span></span><br><span class=\"line\">    receivers = [<span class=\"string\">&quot;13******@qq.com&quot;</span>] <span class=\"comment\"># 收件人</span></span><br><span class=\"line\">    <span class=\"comment\"># 邮件文本内容</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        es = email_send(sender, password, receivers)</span><br><span class=\"line\">        es.server_start()</span><br><span class=\"line\">        es.send_text_data(msg, <span class=\"string\">&#x27;plain&#x27;</span>, subject_msg)</span><br><span class=\"line\">        es.server_quit()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;success&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;error&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    go()</span><br></pre></td></tr></table></figure>\n","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"<h1 id=\"天气查询邮件提醒\"><a href=\"#天气查询邮件提醒\" class=\"headerlink\" title=\"天气查询邮件提醒\"></a>天气查询邮件提醒</h1><h3 id=\"软件界面ui\"><a href=\"#软件界面ui\" class=\"headerlink\" title=\"软件界面ui\"></a>软件界面ui</h3><h4 id=\"ui设计\"><a href=\"#ui设计\" class=\"headerlink\" title=\"ui设计\"></a>ui设计</h4><p>用的是<code>PyQt5</code>，先用<code>Qt Designer</code>设计界面，拖动组件改属性即可，注意<code>objectName</code>一定要改，保持良好的习惯。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/lei-wei/pic_bed/img/image-20210530172731604.png\"\n                      alt=\"image-20210530172731604\"\n                ></p>","more":"<h4 id=\"主程序调用ui\"><a href=\"#主程序调用ui\" class=\"headerlink\" title=\"主程序调用ui\"></a>主程序调用ui</h4><p>将ui文件转化成<code>py</code>文件<code>Ui_weatherQuery.py</code>，在这个文件里绑定事件，然后在主程序里面调用界面就可。</p>\n<h5 id=\"ui事件绑定业务函数\"><a href=\"#ui事件绑定业务函数\" class=\"headerlink\" title=\"ui事件绑定业务函数\"></a><code>ui</code>事件绑定业务函数</h5><p>在<code>Ui_weatherQuery.py</code>文件里，</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.queryBtn.clicked.connect(Dialog.queryWeather)</span><br><span class=\"line\">self.clearBtn.clicked.connect(Dialog.clearText)</span><br><span class=\"line\">self.pushButton.clicked.connect(Dialog.sendEmail)</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"主程序里与ui的交互\"><a href=\"#主程序里与ui的交互\" class=\"headerlink\" title=\"主程序里与ui的交互\"></a>主程序里与ui的交互</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MainDialog</span>(<span class=\"title class_ inherited__\">QDialog</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, parent=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(QDialog, self).__init__(parent)</span><br><span class=\"line\">        self.ui = Ui_weatherQuery.Ui_Dialog()</span><br><span class=\"line\">        self.ui.setupUi(self)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">queryWeather</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        city_name = self.ui.txtCityName.text()</span><br><span class=\"line\">        self.res = query_weather(city_name=city_name)</span><br><span class=\"line\">        self.ui.txtQueryRes.setText(self.res)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">clearText</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.ui.txtQueryRes.clear()</span><br><span class=\"line\">        self.ui.txtCityName.clear()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">sendEmail</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        email_send.go(msg=self.res, subject_msg=<span class=\"string\">&#x27;天气预报&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"显示界面模板框架\"><a href=\"#显示界面模板框架\" class=\"headerlink\" title=\"显示界面模板框架\"></a>显示界面模板框架</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QDial, QDialog</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    myApp = QApplication(sys.argv)</span><br><span class=\"line\">    myDlg = MainDialog()</span><br><span class=\"line\">    myDlg.show()</span><br><span class=\"line\"></span><br><span class=\"line\">    sys.exit(myApp.exec_())</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"天气查询部分\"><a href=\"#天气查询部分\" class=\"headerlink\" title=\"天气查询部分\"></a>天气查询部分</h3><h4 id=\"调用api\"><a href=\"#调用api\" class=\"headerlink\" title=\"调用api\"></a>调用api</h4><p>api有免费的，申请就完事了。</p>\n<p>用<code>request</code>包发送请求，返回的<code>json</code>解析一下就可。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">query_weather</span>(<span class=\"params\">city_name=<span class=\"string\">&quot;武汉&quot;</span>, record=<span class=\"literal\">True</span></span>):</span><br><span class=\"line\">    appid = <span class=\"string\">&quot;29467327&quot;</span></span><br><span class=\"line\">    appsecret = <span class=\"string\">&quot;27kJLhNF&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 请求地址&amp;信息</span></span><br><span class=\"line\">    url = <span class=\"string\">u&quot;https://www.tianqiapi.com/free/week?appid=&#123;&#125;&amp;appsecret=&#123;&#125;&amp;city=&#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(</span><br><span class=\"line\">        appid, appsecret, city_name)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求得到返回结果</span></span><br><span class=\"line\">    r = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 格式化显示json</span></span><br><span class=\"line\">    res = json.dumps(r.json(), indent=<span class=\"number\">4</span>, ensure_ascii=<span class=\"literal\">False</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> record:</span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;res.txt&quot;</span>, <span class=\"string\">&#x27;w&#x27;</span>)<span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(res)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br></pre></td></tr></table></figure>\n\n<p>部分结果展示</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;cityid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;101200101&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;city&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;武汉&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;update_time&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;2021-05-30 15:55:18&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;data&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;date&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;2021-05-30&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;wea&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;晴转多云&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;wea_img&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;yun&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;tem_day&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;30&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;tem_night&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;20&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;win&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;南风&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;win_speed&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&lt;3级&quot;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        ......</span><br><span class=\"line\">    <span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"邮件发送部分\"><a href=\"#邮件发送部分\" class=\"headerlink\" title=\"邮件发送部分\"></a>邮件发送部分</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># smtp（simple mail transfer protocol）是python自带的邮件模块，负责邮件传输</span></span><br><span class=\"line\"><span class=\"comment\"># email负责邮件内容</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> email.header <span class=\"keyword\">import</span> Header</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.text <span class=\"keyword\">import</span> MIMEText</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.utils <span class=\"keyword\">import</span> parseaddr, formataddr</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># stmp_server=&#123;&#x27;163&#x27;:&#x27;smtp.163.com&#x27;,&#x27;qq&#x27;:&#x27;stmp.qq.com&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># port_list=&#123;&#x27;163&#x27;:25,&#x27;qq&#x27;:465&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">email_send</span>:</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    description:封装了构造邮件及发送邮件的操作</span></span><br><span class=\"line\"><span class=\"string\">    param &#123;*&#125;</span></span><br><span class=\"line\"><span class=\"string\">    return &#123;*&#125;</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, from_addr, password, to_addr, server=<span class=\"string\">&quot;smtp.qq.com&quot;</span>, port=<span class=\"number\">465</span></span>) -&gt; <span class=\"literal\">None</span>:</span><br><span class=\"line\">        self.from_addr = from_addr</span><br><span class=\"line\">        self.password = password</span><br><span class=\"line\">        self.to_addr = to_addr</span><br><span class=\"line\">        self.server = server</span><br><span class=\"line\">        self.port = port</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">server_start</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.server = smtplib.SMTP_SSL(host=self.server, port=self.port)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(self.server)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">server_quit</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.server.quit()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">_format_addr</span>(<span class=\"params\">self, addr_msg</span>):</span><br><span class=\"line\">        name, addr = parseaddr(addr_msg)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> formataddr((Header(name, <span class=\"string\">&#x27;utf-8&#x27;</span>).encode(), addr))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">send_text_data</span>(<span class=\"params\">self, text, data_type, subject_msg</span>):</span><br><span class=\"line\">        msg = MIMEText(_text=text, _subtype=<span class=\"string\">&#x27;plain&#x27;</span>, _charset=<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">        msg[<span class=\"string\">&#x27;From&#x27;</span>] = self._format_addr(self.from_addr)</span><br><span class=\"line\">        msg[<span class=\"string\">&#x27;To&#x27;</span>] = self._format_addr(self.to_addr)</span><br><span class=\"line\">        msg[<span class=\"string\">&#x27;Subject&#x27;</span>] = Header(s=subject_msg, charset=<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">        self.server.login(self.from_addr, self.password)</span><br><span class=\"line\">        self.server.sendmail(self.from_addr, self.to_addr, msg.as_string())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">go</span>(<span class=\"params\">msg=<span class=\"string\">&#x27;新的邮件代码测试&#x27;</span>, subject_msg=<span class=\"string\">&#x27;A new test&#x27;</span></span>):</span><br><span class=\"line\">    <span class=\"comment\"># 账号信息</span></span><br><span class=\"line\">    sender = <span class=\"string\">&quot;141*****@qq.com&quot;</span>  <span class=\"comment\"># 发件人</span></span><br><span class=\"line\">    password = <span class=\"string\">&quot;*******&quot;</span>   <span class=\"comment\"># 在QQ邮箱里可打开SMTP服务的密码，非邮箱登录密码</span></span><br><span class=\"line\">    receivers = [<span class=\"string\">&quot;13******@qq.com&quot;</span>] <span class=\"comment\"># 收件人</span></span><br><span class=\"line\">    <span class=\"comment\"># 邮件文本内容</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        es = email_send(sender, password, receivers)</span><br><span class=\"line\">        es.server_start()</span><br><span class=\"line\">        es.send_text_data(msg, <span class=\"string\">&#x27;plain&#x27;</span>, subject_msg)</span><br><span class=\"line\">        es.server_quit()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;success&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;error&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    go()</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"一个新的笔记软件——TiddlyWiki","subtitle":"我又换笔记软件啦","date":"2021-12-17T16:00:00.000Z","author":"LW","header-img":"img/post-bg-TiddlyWiki.png","catalog":true,"_content":"\n# 一个新的笔记软件\n\n一晃半年多过去了，这个博客也荒废了好久，趁着做TiddlyWiki的时候把它再捡起来。曾经顶下的周更的目标也早就忘得一干二净，实在是愧疚。\n\n总之，我又换了一个新的笔记软件——TiddlyWiki，具体可以进里面的`About` 条目看看，反正就是很折腾，地址在这里[https://leiwei.space/wiki/](https://leiwei.space/wiki/)，你看域名是不是很好记哈哈，也可以在友链的地方跳转，叫“胖虎的wiki笔记”。\n\n<!--more-->\n\n以后有逻辑的笔记就放在那了，分类跳转做的很好，想说的话、图片展示就在这了，后面工具用顺手了再慢慢整吧。\n\n好像又给自己挖个坑，做一个网页上的图片展区，看起来好像不难，论文搞完就整。（好多事情都是说论文搞完了整，拖延的理由冠冕堂皇，要是最后咕了就当我没说吧QAQ）\n","source":"_posts/2021-12-18-一个新的笔记软件——TiddlyWiki.md","raw":"---\nlayout:     post\ntitle:      一个新的笔记软件——TiddlyWiki\nsubtitle:   我又换笔记软件啦\ndate:       2021-12-18\nauthor:     LW\nheader-img: img/post-bg-TiddlyWiki.png\ncatalog: true\n\ntags: \n    - 折腾\n    - 知识整理\ncategories: \n    - 折腾\n---\n\n# 一个新的笔记软件\n\n一晃半年多过去了，这个博客也荒废了好久，趁着做TiddlyWiki的时候把它再捡起来。曾经顶下的周更的目标也早就忘得一干二净，实在是愧疚。\n\n总之，我又换了一个新的笔记软件——TiddlyWiki，具体可以进里面的`About` 条目看看，反正就是很折腾，地址在这里[https://leiwei.space/wiki/](https://leiwei.space/wiki/)，你看域名是不是很好记哈哈，也可以在友链的地方跳转，叫“胖虎的wiki笔记”。\n\n<!--more-->\n\n以后有逻辑的笔记就放在那了，分类跳转做的很好，想说的话、图片展示就在这了，后面工具用顺手了再慢慢整吧。\n\n好像又给自己挖个坑，做一个网页上的图片展区，看起来好像不难，论文搞完就整。（好多事情都是说论文搞完了整，拖延的理由冠冕堂皇，要是最后咕了就当我没说吧QAQ）\n","slug":"2021-12-18-一个新的笔记软件——TiddlyWiki","published":1,"updated":"2022-03-21T09:44:35.000Z","comments":1,"photos":[],"link":"","_id":"cl792rm1i0018tkin7wjycfjs","content":"<h1 id=\"一个新的笔记软件\"><a href=\"#一个新的笔记软件\" class=\"headerlink\" title=\"一个新的笔记软件\"></a>一个新的笔记软件</h1><p>一晃半年多过去了，这个博客也荒废了好久，趁着做TiddlyWiki的时候把它再捡起来。曾经顶下的周更的目标也早就忘得一干二净，实在是愧疚。</p>\n<p>总之，我又换了一个新的笔记软件——TiddlyWiki，具体可以进里面的<code>About</code> 条目看看，反正就是很折腾，地址在这里<a class=\"link\"   href=\"https://leiwei.space/wiki/\" >https://leiwei.space/wiki/<i class=\"fas fa-external-link-alt\"></i></a>，你看域名是不是很好记哈哈，也可以在友链的地方跳转，叫“胖虎的wiki笔记”。</p>\n<span id=\"more\"></span>\n\n<p>以后有逻辑的笔记就放在那了，分类跳转做的很好，想说的话、图片展示就在这了，后面工具用顺手了再慢慢整吧。</p>\n<p>好像又给自己挖个坑，做一个网页上的图片展区，看起来好像不难，论文搞完就整。（好多事情都是说论文搞完了整，拖延的理由冠冕堂皇，要是最后咕了就当我没说吧QAQ）</p>\n","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"<h1 id=\"一个新的笔记软件\"><a href=\"#一个新的笔记软件\" class=\"headerlink\" title=\"一个新的笔记软件\"></a>一个新的笔记软件</h1><p>一晃半年多过去了，这个博客也荒废了好久，趁着做TiddlyWiki的时候把它再捡起来。曾经顶下的周更的目标也早就忘得一干二净，实在是愧疚。</p>\n<p>总之，我又换了一个新的笔记软件——TiddlyWiki，具体可以进里面的<code>About</code> 条目看看，反正就是很折腾，地址在这里<a class=\"link\"   href=\"https://leiwei.space/wiki/\" >https://leiwei.space/wiki/<i class=\"fas fa-external-link-alt\"></i></a>，你看域名是不是很好记哈哈，也可以在友链的地方跳转，叫“胖虎的wiki笔记”。</p>","more":"<p>以后有逻辑的笔记就放在那了，分类跳转做的很好，想说的话、图片展示就在这了，后面工具用顺手了再慢慢整吧。</p>\n<p>好像又给自己挖个坑，做一个网页上的图片展区，看起来好像不难，论文搞完就整。（好多事情都是说论文搞完了整，拖延的理由冠冕堂皇，要是最后咕了就当我没说吧QAQ）</p>"},{"layout":"post","title":"2021年度总结","date":"2022-01-09T16:00:00.000Z","author":"LW","header-img":"img/post-bg-205happy.jpg","catalog":true,"_content":"\n\n>现在是2022-01-09下午14时16分，前一天晚上我终于提交了论文初稿，也终于在此刻开始筹备我的2021年度总结。我实在不是一个擅长记录和总结的人，就连翻手机相册也经常会有几个月的大段空白期，一时想不起不知道做了什么，像是有大段记忆被偷走了一样，也可能是有好些时光被我不小心抛在身后了。可我不想遗忘，仔细想想也是有很多事情值得记录下来。\n\n\n<!--more-->\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=3413895&auto=0&height=66\"></iframe>\n\n## 1. 探索\n\n有一些从没做过的事情，这一年给做了，回想起来也是很有意思的体验\n\n#### 琴台常客\n\n从没去过正经音乐厅或是大剧院的我，今年到成了琴台的常客。要说现场看演出和电视上的区别，那可真就大了去了。不过，能感受到多少吸收多少就看个人，目前我也在努力提升欣赏水平之中。\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-22-01-IMG_20210526_190657-min.jpg\" title=\"\" alt=\"IMG_20210526_190657-min.jpg\" width=\"572\">\n\n<center>琴台大剧院</center>\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-39-15-IMG_20210612_194956-min.jpg\" title=\"\" alt=\"IMG_20210612_194956-min.jpg\" width=\"573\">\n\n<center>琴台音乐厅</center>\n\n</center>\n\n部分票据，舞剧《永不消逝的电波》和民族乐团音乐会《魅力中国》的票找不到了orz\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-39-32-IMG_20220109_163830-min.jpg\" title=\"\" alt=\"IMG_20220109_163830-min.jpg\" width=\"308\">\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-44-31-IMG_20220109_164126-min.jpg\" title=\"\" alt=\"IMG_20220109_164126-min.jpg\" width=\"302\">\n\n音乐会的票找不到了，拿节目单照片补上\n\n<img title=\"\" src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-09-49-19-IMG_20220110_094407-min.jpg\" alt=\"IMG_20220110_094407-min.jpg\" width=\"304\">\n\n看完这一场，第一次迷上了民乐《丝绸之路》\n\n《丝绸之路》，虽远不及现场版的震撼但也很精彩[B站链接](https://www.bilibili.com/video/BV1Rs411t7By?share_source=copy_web)\n\n<iframe src=\"//player.bilibili.com/player.html?aid=6437218&bvid=BV1Rs411t7By&cid=10466052&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n看完崔健演唱会迷上了崔健，迷上了《一块红布》\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-09-49-00-IMG_20211101_202607-min.jpg\" title=\"\" alt=\"IMG_20211101_202607-min.jpg\" width=\"482\">\n\n<center>《一块红布》——崔健</center>\n\n《一块红布》——崔健，[B站链接](https://www.bilibili.com/video/BV1Hy4y1e74f?share_source=copy_web)\n\n为了看演出特地买了个小望远镜哈哈，强烈推荐，观看体验直线上升，终于坐在最后一排用望远镜也能看清演员的脸了\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-17-00-23-IMG_20220109_112753-min.jpg\" title=\"\" alt=\"IMG_20220109_112753-min.jpg\" width=\"275\">\n\n许久没能静下来好好听歌的我，今年也新喜欢上了几个乐手，崔健、陶喆、王力宏、孙燕姿，都是宝藏歌手啊。听歌也不再是简单的听歌，几乎全是看现场，更有感觉。很多内容B站上都有，强烈推荐！链接会放在其他博客里。\n\n#### 努力成为老司机\n\n自从老爸买了辆二手车，每次回家我就是司机，现在开车上路已经完全不会慌啦\n\n<img title=\"\" src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-31-24-IMG_20210430_111905-min.jpg\" alt=\"IMG_20210430_111905-min.jpg\" width=\"178\">\n\n#### 搭建自己的博客和知识库\n\n作为一个喜欢折腾电脑的人，这一年做了许多博客的尝试，起因也是因为想要记录生活，结果折腾完了又搁置了orz。后来又新入坑一个领域叫tiddlyWiki，打算用它构建我的个人知识库，还在探索之中，欢迎多多关注呀，以后两个网页都会长期更新！\n\n- 博客用来写长文记录生活，地址：[毛利老弟的博客](https://leiwei.xyz/)\n\n- wiki知识库用来记录零散的知识和想法，地址：[胖虎的Wiki](https://leiwei.xyz/wiki/)\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-49-42-Snipaste_2022-01-10_10-49-10.png\" title=\"\" alt=\"Snipaste_2022-01-10_10-49-10.png\" width=\"650\">\n\n![post-bg-TiddlyWiki.png](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-48-46-post-bg-TiddlyWiki.png)\n\n#### 第一次上手电吉他\n\n<video id=\"video\" controls=\"\" preload=\"none\">\n    <source id=\"mp4\" src=\"../../../../file/elec_guitar.mp4\" type=\"video/mp4\">\n</video>\n\n#### 入门羽毛球\n\n学会起跳扣杀啦！杀球可以说是羽毛球最大的魅力了\n\n原有的磅数也不再能满足我了，只好忍痛剪了重新穿了26磅的拍线（拍子最高穿26），看来技术确实是有进步的\n\n球好贵，毕竟是用羽毛做的，真奢侈运动\n\n可惜此处没有图orz\n\n#### 入门游泳\n\n这一年，呛了好多次水之后，终于学会了蛙泳！（自学成才！），只是天气转凉之后这项活动就搁置了，计划来年向自由泳迈进！\n\n#### 兼职摄影师\n\n这一年有人说我会摄影，哈哈，看来要将摄影师的计划捡起来了，可惜相机在西安的朋友那里，封城了想寄快递都不行。\n\n模特占大半功劳\n\n![IMG_20211217_163121-min.jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-19-17-IMG_20211217_163121-min.jpg)\n\n#### 投稿视频\n\n试试水，或许哪天觉得这黑历史太黑了我就给删了哈哈\n\n<iframe src=\"//player.bilibili.com/player.html?aid=380070268&bvid=BV1hZ4y1X78N&cid=466680905&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n## 2 弥补遗憾\n\n#### 20210623我又毕业啦\n\n2020年因为疫情匆匆在家毕业了的我们这一届，终于补办毕业典礼了！穿上心心念念的学士服，还有幸和校长握了手。感谢丁导，感谢秦老师和这么一群可爱的老同学们！\n\n![IMG20210622135025jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-02-32-IMG_20210622_135025.jpg)\n\n![IMG20210622124131minjpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-05-34-IMG_20210622_124131-min.jpg)\n\n![mmexport1624379186532jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-05-46-mmexport1624379186532.jpg)\n\n![合照1minjpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-11-21-%E5%90%88%E7%85%A71-min.jpg)\n\n#### 和过去的自己对话\n\n参加了新一年研究生复试的志愿者，看着紧张的考生们，想起两年前同样紧张的自己。考研的那半年时光的磨练将成为我一生的烙印，也带来了强烈的后遗症，或许我从没把那种奇特的状态完全摆脱，看着同样经历着这一切的考生们，好像又释然了许多。\n\n## 3 活动满满\n\n#### 0619代表协会参加校级演出\n\n又当演员又当观众的充实一天，托社团的福，这算是我参加过最大的演出活动了\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-13-52-IMG_20210619_102505-min.jpg\" title=\"\" alt=\"IMG_20210619_102505-min.jpg\" width=\"391\">\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-44-12-1641716963869.jpeg\" title=\"\" alt=\"1641716963869.jpeg\" width=\"395\">\n\n<img title=\"\" src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-46-11-1641716960797.jpeg\" alt=\"1641716960797.jpeg\" width=\"394\">\n\n<iframe src=\"//player.bilibili.com/player.html?aid=931306123&bvid=BV1RM4y1u78w&cid=357607175&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n[完整链接](https://www.bilibili.com/video/BV1RM4y1u78w?share_source=copy_web)\n\n#### 协会年终演出\n\n当然少不了我亲爱的星一口琴社，从16年底到现在，想想已经五年之久了。能经历这么长时间真是一件神奇而又幸运的事情。\n\n口琴手兼职鼓手的一天\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-57-06-1641718501641-min.jpeg\" title=\"\" alt=\"1641718501641minjpeg\" width=\"535\">\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-56-31-1641718447164.jpeg\" title=\"\" alt=\"1641718447164jpeg\" width=\"537\">\n\n纪念品小夜灯真的是太好看了\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-17-21-IMG_20211219_175509-min.jpg\" title=\"\" alt=\"IMG_20211219_175509-min.jpg\" width=\"484\">\n\n#### 师姐的生日听老师弹吉他\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-16-34--5d4a6e18c65d6cda-min.jpg\" title=\"\" alt=\"-5d4a6e18c65d6cda-min.jpg\" width=\"472\">\n\n#### 师兄毕业了\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-21-11-IMG_20210608_170433_004-min.jpg\" title=\"\" alt=\"IMG_20210608_170433_004-min.jpg\" width=\"467\">\n\n<img title=\"\" src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-31-22-IMG_20210608_171955-min.jpg\" alt=\"IMG_20210608_171955-min.jpg\" width=\"464\">\n\n#### 元旦回家放风筝啦\n\n<img title=\"\" src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-09-56-45-IMG_20220101_171948_edit_5093276200263-min.jpg\" alt=\"IMG_20220101_171948_edit_5093276200263-min.jpg\" width=\"467\">\n\n爸爸放起风筝来像个孩子\n\n<video id=\"video\" controls=\"\" preload=\"none\">\n    <source id=\"mp4\" src=\"../../../../file/fangfengzheng.mp4\" type=\"video/mp4\">\n</video>\n\n#### 东湖樱花园\n\n爸妈来学校看我，顺道就去了东湖\n\n<img title=\"\" src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-19-16-IMG_20211022_145644-min.jpg\" alt=\"IMG_20211022_145644-min.jpg\" width=\"463\">\n\n和实验室的朋友们去东湖游船、磨山索道、森林公园烧烤\n\n票根也能晒一晒\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-15-50-17-DF48E08B123207035CAF10E155EF775E.jpg\" title=\"\" alt=\"DF48E08B123207035CAF10E155EF775E.jpg\" width=\"347\">\n\n暑假几个傻子在视频\n\n<img title=\"\" src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-09-56-32-Screenshot_20210721_191507_com.tencent.mm-min.jpg\" alt=\"Screenshot_20210721_191507_com.tencent.mm-min.jpg\" width=\"321\">\n\n#### 20210730和老姐去重庆\n\n<img title=\"\" src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-06-02-IMG_20210730_211557-min.jpg\" alt=\"IMG_20210730_211557-min.jpg\" width=\"451\">\n\n<img title=\"\" src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-05-51-IMG_20210730_215813-min.jpg\" alt=\"IMG_20210730_215813-min.jpg\" width=\"453\">\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-06-32-IMG_20210730_215641-min.jpg\" title=\"\" alt=\"IMG_20210730_215641-min.jpg\" width=\"455\">\n\n然后就有了老姐帮我做的第一条旅行vlog\n\n<video id=\"video\" controls=\"\" preload=\"none\">\n    <source id=\"mp4\" src=\"../../../../file/chongqingvlog.mp4\" type=\"video/mp4\">\n</video>\n\n#### 南湖花海❀\n\n许久没去南湖校区，看到花海突然很感动，太喜欢了，就骑小电驴兜了一圈录了下来\n\n<video id=\"video\" controls=\"\" preload=\"none\">\n    <source id=\"mp4\" src=\"../../../../file/huahai.mp4\" type=\"video/mp4\">\n</video>\n\n#### 吉协摇滚音乐节\n\n从16年本科入校以来，每年都不会缺席的\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-17-09-49-IMG_20220109_170644-min.jpg\" title=\"\" alt=\"IMG_20220109_170644-min.jpg\" width=\"455\">\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-17-09-58-IMG_20220109_170844-min.jpg\" title=\"\" alt=\"IMG_20220109_170844-min.jpg\" width=\"460\">\n\n这一段太好听了，忍不住想放上来\n\n<video id=\"video\" controls=\"\" preload=\"none\">\n    <source id=\"mp4\" src=\"../../../../file/jixieshipin.mp4\" type=\"video/mp4\">\n</video>\n\n#### 和朋友在琴台看民族乐团音乐会\n\n![mmexport1639764930916-min.jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-50-33-mmexport1639764930916-min.jpg)\n\n## 4 放飞自我\n\n从不自拍看镜头就躲的我，今年居然开始放飞自我了，开始搞怪、装酷，拿自拍当头像\n\n有人在地铁上睡着了哈哈，这张当过一段时间微信头像\n\n![IMG_20210711_230623(1)-min.jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-28-43-IMG_20210711_230623(1)-min.jpg)\n\n奇怪的Pose，这张也当过微信头像\n\n![mmexport1626000536630-min.jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-29-02-mmexport1626000536630-min.jpg)\n\n这么穿在大街上回头率真的很高\n\n![mmexport1626000564140-min.jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-29-08-mmexport1626000564140-min.jpg)\n\n![mmexport1626000566457-min.jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-29-14-mmexport1626000566457-min.jpg)\n\n![mmexport1626016695835-min.jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-29-16-mmexport1626016695835-min.jpg)\n\n难得这样放飞自我，可能还是因为有这么一群朋友在身边吧\n\n![mmexport1626000567519-min.jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-39-17-mmexport1626000567519-min.jpg)\n\n再来一张黑历史\n\n![mmexport1640255757749(1)-min.jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-47-39-mmexport1640255757749(1)-min.jpg)\n\n## 5 成长\n\n最重要的是——这一年想清楚了很多道理，算是成长了许多\n\n#### 关于拖延症与逃避\n\n> 我们每时每刻都处在分岔路口\n> 可以选择任意一条路前进，同时另一条路会消失\n> 也可以在原地踌躇一下再选择，这叫充分思考做好准备\n> 也可以在原地多徘徊好一会，直到不得不前进，这叫拖延\n> 继续止步不前，就叫逃避\n> 原地徘徊太久，就容易迷失了方向，踏空一步落入周围的深渊\n> 其实无论走那条路最后都会后悔，逃避才是最大的败北。\n> ——写于2021-11-02\n\n卸载过英雄联盟，知乎和哔哩哔哩，~~然后开始沉迷消消乐（划掉），~~\n\n拨开所有暂且逃避的借口去直面生活直面问题，然后发现，其实也就那么回事，\n\n拖延和逃避过程中，浪费的时间和错过的机会才是最可惜的。\n\n#### 关于未来与迷茫\n\n> 人生像是有惯性的，我能在一定程度上看到前进的方向。  \n> 有时突然一抬头，看见了某个人，就会感叹：唉？这不就是之后的我吗？  \n> 我好像正在朝着这个方向靠着惯性前进呢。  \n> 怎么办呢，是好是坏，要及时转向吗？\n> 有些期盼，有些担忧，庆幸他们拥有的，同时也害怕他们失去的，  \n> 最后还是顺其自然，见机行事了。  \n> 好像看得更透了，也好像更迷茫了。  \n> ——写于2021-11-30\n\n从大二迷茫于是否要读研，到研二迷茫于研究方向，迷茫于职业选择，好像一直是处在焦虑与不安之中，而后来我突然明白一个道理：所有在我身上已经发生过的事情，成就了我现在这样一个独一无二复杂的个体，也大致决定了以后会走上什么样的道路。我所需要做的就是接受这样的既定事实，并且走好接下来的每一步，这样就很好了。\n\n#### 关于长期不健康的状态\n\n> 失眠已经成常态了，但很奇怪的是，失眠应该是一个贬义词，指一种不好的状态，但是我今天居然可以心安理得的，以一种非常平和的心态静躺了两个多小时，想了紧张的事情，也想了快乐的事情，想了现在，也想了将来，背景音乐是无限循环的关大洲的九州同，就像观看一幕幕剧，任由思绪被牵着走，飞到九霄云外，又飞回来，再一看，噢，这一趟旅程花了两个小时多一点，想记录一点东西，写了这么点就开始困的不行。害，锻炼身体和养成生物钟得尽早安排喽！\n\n写完这一段，就很神奇般的再也没有失眠过，也是心态的转变了吧\n\n#### 关于与自己和解，与世界和解\n\n2021年元旦我留下了这样的话：\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-09-41-45-Screenshot_20220110_093854-min.jpg\" title=\"\" alt=\"Screenshot20220110093854minjpg\" width=\"630\">\n\n那一天发生了什么让我印象深刻的事呢？一年后2022年元旦，我写下了这样的文字：\n\n> 这一年还是发生了太多事情，就从去年的总结开始说吧。去年跨年的晚上，买了零食回宿舍准备看B站跨年晚会吃零食和朋友聊聊天跨年，可就是突然突然的一刹那，发觉自己孑然一身，孤独涌向了我瞬间淹没了我，简直是透不过气来，身边的人有相聚庆祝的，也有在一起抱团取暖的，可那喧嚣与我无关。拿出手机，线上倒是很热闹，群里都是无所事事的闲聊，私下聊天的都是礼貌的问候，礼貌地保持着距离。也不怪任何人，在这一刻之前我也从没想过要和任何人抱团，一直寻求的是绝对人格独立思想独立的生活，可在这一刻突然领悟到了什么是孤独，什么是内心的空洞。当时就在后悔，为什么不回家呐，家里是可以假装不会孤单的最后的港湾了。当时还有在疑惑，那么多曾经的好朋友，感情是如何慢慢淡下来的呢，平时怎么会忘了找他们联络联络呢，我所追求的这种独立自主绝对理性的状态，是否太沉浸其中了而忽视了很多基础而重要的东西呢？所以写下了这几句话，希望走出自己的局限，希望把忽视的遗忘的都给找回来。如今这一年过去了，好像我还是那个钻牛角尖的我，但似乎不是像之前那么迷茫了。心态逐渐变得平和而坚定，内心多了一些温暖和力量。看吧，是会越来越好的。算是对2021元旦的心路历程记录，和此刻2022元旦的一个回应。\n>\n> ——写于2022年元旦\n\n今年元旦跨年的时候正被论文烦心着呢，跨啥年啊，偶然发现一年前留下的文字，伴随着的记忆顿时扑面而来，才发现这一年真的大变样了。我自我认知是一个懦弱的理想主义者，这世界和我想的不一样，我也没敢站出来大声反抗，干的最多的也就是在心里跟自己作对而已，不愿妥协，但很多时候不得不妥协，那也得死扛着不愿认输。这一年发生了太多事情冲击到我使我措手不及，有朋友生病遭遇重大变故也不知如何帮助；有朋友突然退学消失，突然就单方面断了联系；也逐渐看清了大人世界的一些残酷的规则，想尽力避开可又不得不去融入。甚至有一段时间我不断追问身边的人：你每天起床的动力是什么？找不到标准答案，更找不到适合我的答案。一年过去了，我还是不知道确切的答案是什么，但这个问题已经不重要了，我还是习惯钻牛角尖的那个人，但心态已经逐渐变得平和，逐渐找到了和世界相处的方式，也更加坚定了我内心不会动摇的东西。长期的失眠状况消失了，没任务安排也能早八起床了，综合这些迹象来看，算是慢慢与自己和解，也与世界和解了。\n\n# 最后——2022的计划\n\n我是一个讨厌立flag的人，但最近从论文的折磨中解脱出来，又恰好临近放假，又好多好多想要做的事情，就在这里列出来，提醒提醒自己。一段时间之后再回来看看哪些做到了，哪些又没做到，就像乘坐时光机回来看看2022年初的我自己，应该也会很有意思。\n\n- 记录生活，底线是月更，会发在博客：[毛利老弟的博客](https://leiwei.xyz/)\n\n- 打造自己的知识库，日常积累，地址：[胖虎的Wiki](https://leiwei.xyz/wiki/)\n\n- 坚持晚十二早八的生物钟\n\n- 健身计划，目标是增重10斤\n\n- 运动计划，精进游泳和羽毛球技术\n\n- 摄影计划，学习技术也记录生活\n\n- 刷算法题，为就业做准备\n\n- 学习计划，论文论文论文论文论文论文\n","source":"_posts/2022-01-10-2021总结.md","raw":"---\nlayout:     post\ntitle:      2021年度总结\ndate:       2022-01-10\nauthor:     LW\nheader-img: img/post-bg-205happy.jpg\ncatalog: true\n\ntags: \n    - 总结\ncategories: \n    - 记录\n---\n\n\n>现在是2022-01-09下午14时16分，前一天晚上我终于提交了论文初稿，也终于在此刻开始筹备我的2021年度总结。我实在不是一个擅长记录和总结的人，就连翻手机相册也经常会有几个月的大段空白期，一时想不起不知道做了什么，像是有大段记忆被偷走了一样，也可能是有好些时光被我不小心抛在身后了。可我不想遗忘，仔细想想也是有很多事情值得记录下来。\n\n\n<!--more-->\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=3413895&auto=0&height=66\"></iframe>\n\n## 1. 探索\n\n有一些从没做过的事情，这一年给做了，回想起来也是很有意思的体验\n\n#### 琴台常客\n\n从没去过正经音乐厅或是大剧院的我，今年到成了琴台的常客。要说现场看演出和电视上的区别，那可真就大了去了。不过，能感受到多少吸收多少就看个人，目前我也在努力提升欣赏水平之中。\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-22-01-IMG_20210526_190657-min.jpg\" title=\"\" alt=\"IMG_20210526_190657-min.jpg\" width=\"572\">\n\n<center>琴台大剧院</center>\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-39-15-IMG_20210612_194956-min.jpg\" title=\"\" alt=\"IMG_20210612_194956-min.jpg\" width=\"573\">\n\n<center>琴台音乐厅</center>\n\n</center>\n\n部分票据，舞剧《永不消逝的电波》和民族乐团音乐会《魅力中国》的票找不到了orz\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-39-32-IMG_20220109_163830-min.jpg\" title=\"\" alt=\"IMG_20220109_163830-min.jpg\" width=\"308\">\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-44-31-IMG_20220109_164126-min.jpg\" title=\"\" alt=\"IMG_20220109_164126-min.jpg\" width=\"302\">\n\n音乐会的票找不到了，拿节目单照片补上\n\n<img title=\"\" src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-09-49-19-IMG_20220110_094407-min.jpg\" alt=\"IMG_20220110_094407-min.jpg\" width=\"304\">\n\n看完这一场，第一次迷上了民乐《丝绸之路》\n\n《丝绸之路》，虽远不及现场版的震撼但也很精彩[B站链接](https://www.bilibili.com/video/BV1Rs411t7By?share_source=copy_web)\n\n<iframe src=\"//player.bilibili.com/player.html?aid=6437218&bvid=BV1Rs411t7By&cid=10466052&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n看完崔健演唱会迷上了崔健，迷上了《一块红布》\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-09-49-00-IMG_20211101_202607-min.jpg\" title=\"\" alt=\"IMG_20211101_202607-min.jpg\" width=\"482\">\n\n<center>《一块红布》——崔健</center>\n\n《一块红布》——崔健，[B站链接](https://www.bilibili.com/video/BV1Hy4y1e74f?share_source=copy_web)\n\n为了看演出特地买了个小望远镜哈哈，强烈推荐，观看体验直线上升，终于坐在最后一排用望远镜也能看清演员的脸了\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-17-00-23-IMG_20220109_112753-min.jpg\" title=\"\" alt=\"IMG_20220109_112753-min.jpg\" width=\"275\">\n\n许久没能静下来好好听歌的我，今年也新喜欢上了几个乐手，崔健、陶喆、王力宏、孙燕姿，都是宝藏歌手啊。听歌也不再是简单的听歌，几乎全是看现场，更有感觉。很多内容B站上都有，强烈推荐！链接会放在其他博客里。\n\n#### 努力成为老司机\n\n自从老爸买了辆二手车，每次回家我就是司机，现在开车上路已经完全不会慌啦\n\n<img title=\"\" src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-31-24-IMG_20210430_111905-min.jpg\" alt=\"IMG_20210430_111905-min.jpg\" width=\"178\">\n\n#### 搭建自己的博客和知识库\n\n作为一个喜欢折腾电脑的人，这一年做了许多博客的尝试，起因也是因为想要记录生活，结果折腾完了又搁置了orz。后来又新入坑一个领域叫tiddlyWiki，打算用它构建我的个人知识库，还在探索之中，欢迎多多关注呀，以后两个网页都会长期更新！\n\n- 博客用来写长文记录生活，地址：[毛利老弟的博客](https://leiwei.xyz/)\n\n- wiki知识库用来记录零散的知识和想法，地址：[胖虎的Wiki](https://leiwei.xyz/wiki/)\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-49-42-Snipaste_2022-01-10_10-49-10.png\" title=\"\" alt=\"Snipaste_2022-01-10_10-49-10.png\" width=\"650\">\n\n![post-bg-TiddlyWiki.png](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-48-46-post-bg-TiddlyWiki.png)\n\n#### 第一次上手电吉他\n\n<video id=\"video\" controls=\"\" preload=\"none\">\n    <source id=\"mp4\" src=\"../../../../file/elec_guitar.mp4\" type=\"video/mp4\">\n</video>\n\n#### 入门羽毛球\n\n学会起跳扣杀啦！杀球可以说是羽毛球最大的魅力了\n\n原有的磅数也不再能满足我了，只好忍痛剪了重新穿了26磅的拍线（拍子最高穿26），看来技术确实是有进步的\n\n球好贵，毕竟是用羽毛做的，真奢侈运动\n\n可惜此处没有图orz\n\n#### 入门游泳\n\n这一年，呛了好多次水之后，终于学会了蛙泳！（自学成才！），只是天气转凉之后这项活动就搁置了，计划来年向自由泳迈进！\n\n#### 兼职摄影师\n\n这一年有人说我会摄影，哈哈，看来要将摄影师的计划捡起来了，可惜相机在西安的朋友那里，封城了想寄快递都不行。\n\n模特占大半功劳\n\n![IMG_20211217_163121-min.jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-19-17-IMG_20211217_163121-min.jpg)\n\n#### 投稿视频\n\n试试水，或许哪天觉得这黑历史太黑了我就给删了哈哈\n\n<iframe src=\"//player.bilibili.com/player.html?aid=380070268&bvid=BV1hZ4y1X78N&cid=466680905&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n## 2 弥补遗憾\n\n#### 20210623我又毕业啦\n\n2020年因为疫情匆匆在家毕业了的我们这一届，终于补办毕业典礼了！穿上心心念念的学士服，还有幸和校长握了手。感谢丁导，感谢秦老师和这么一群可爱的老同学们！\n\n![IMG20210622135025jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-02-32-IMG_20210622_135025.jpg)\n\n![IMG20210622124131minjpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-05-34-IMG_20210622_124131-min.jpg)\n\n![mmexport1624379186532jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-05-46-mmexport1624379186532.jpg)\n\n![合照1minjpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-11-21-%E5%90%88%E7%85%A71-min.jpg)\n\n#### 和过去的自己对话\n\n参加了新一年研究生复试的志愿者，看着紧张的考生们，想起两年前同样紧张的自己。考研的那半年时光的磨练将成为我一生的烙印，也带来了强烈的后遗症，或许我从没把那种奇特的状态完全摆脱，看着同样经历着这一切的考生们，好像又释然了许多。\n\n## 3 活动满满\n\n#### 0619代表协会参加校级演出\n\n又当演员又当观众的充实一天，托社团的福，这算是我参加过最大的演出活动了\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-13-52-IMG_20210619_102505-min.jpg\" title=\"\" alt=\"IMG_20210619_102505-min.jpg\" width=\"391\">\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-44-12-1641716963869.jpeg\" title=\"\" alt=\"1641716963869.jpeg\" width=\"395\">\n\n<img title=\"\" src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-46-11-1641716960797.jpeg\" alt=\"1641716960797.jpeg\" width=\"394\">\n\n<iframe src=\"//player.bilibili.com/player.html?aid=931306123&bvid=BV1RM4y1u78w&cid=357607175&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n[完整链接](https://www.bilibili.com/video/BV1RM4y1u78w?share_source=copy_web)\n\n#### 协会年终演出\n\n当然少不了我亲爱的星一口琴社，从16年底到现在，想想已经五年之久了。能经历这么长时间真是一件神奇而又幸运的事情。\n\n口琴手兼职鼓手的一天\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-57-06-1641718501641-min.jpeg\" title=\"\" alt=\"1641718501641minjpeg\" width=\"535\">\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-56-31-1641718447164.jpeg\" title=\"\" alt=\"1641718447164jpeg\" width=\"537\">\n\n纪念品小夜灯真的是太好看了\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-17-21-IMG_20211219_175509-min.jpg\" title=\"\" alt=\"IMG_20211219_175509-min.jpg\" width=\"484\">\n\n#### 师姐的生日听老师弹吉他\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-16-34--5d4a6e18c65d6cda-min.jpg\" title=\"\" alt=\"-5d4a6e18c65d6cda-min.jpg\" width=\"472\">\n\n#### 师兄毕业了\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-21-11-IMG_20210608_170433_004-min.jpg\" title=\"\" alt=\"IMG_20210608_170433_004-min.jpg\" width=\"467\">\n\n<img title=\"\" src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-31-22-IMG_20210608_171955-min.jpg\" alt=\"IMG_20210608_171955-min.jpg\" width=\"464\">\n\n#### 元旦回家放风筝啦\n\n<img title=\"\" src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-09-56-45-IMG_20220101_171948_edit_5093276200263-min.jpg\" alt=\"IMG_20220101_171948_edit_5093276200263-min.jpg\" width=\"467\">\n\n爸爸放起风筝来像个孩子\n\n<video id=\"video\" controls=\"\" preload=\"none\">\n    <source id=\"mp4\" src=\"../../../../file/fangfengzheng.mp4\" type=\"video/mp4\">\n</video>\n\n#### 东湖樱花园\n\n爸妈来学校看我，顺道就去了东湖\n\n<img title=\"\" src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-19-16-IMG_20211022_145644-min.jpg\" alt=\"IMG_20211022_145644-min.jpg\" width=\"463\">\n\n和实验室的朋友们去东湖游船、磨山索道、森林公园烧烤\n\n票根也能晒一晒\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-15-50-17-DF48E08B123207035CAF10E155EF775E.jpg\" title=\"\" alt=\"DF48E08B123207035CAF10E155EF775E.jpg\" width=\"347\">\n\n暑假几个傻子在视频\n\n<img title=\"\" src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-09-56-32-Screenshot_20210721_191507_com.tencent.mm-min.jpg\" alt=\"Screenshot_20210721_191507_com.tencent.mm-min.jpg\" width=\"321\">\n\n#### 20210730和老姐去重庆\n\n<img title=\"\" src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-06-02-IMG_20210730_211557-min.jpg\" alt=\"IMG_20210730_211557-min.jpg\" width=\"451\">\n\n<img title=\"\" src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-05-51-IMG_20210730_215813-min.jpg\" alt=\"IMG_20210730_215813-min.jpg\" width=\"453\">\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-06-32-IMG_20210730_215641-min.jpg\" title=\"\" alt=\"IMG_20210730_215641-min.jpg\" width=\"455\">\n\n然后就有了老姐帮我做的第一条旅行vlog\n\n<video id=\"video\" controls=\"\" preload=\"none\">\n    <source id=\"mp4\" src=\"../../../../file/chongqingvlog.mp4\" type=\"video/mp4\">\n</video>\n\n#### 南湖花海❀\n\n许久没去南湖校区，看到花海突然很感动，太喜欢了，就骑小电驴兜了一圈录了下来\n\n<video id=\"video\" controls=\"\" preload=\"none\">\n    <source id=\"mp4\" src=\"../../../../file/huahai.mp4\" type=\"video/mp4\">\n</video>\n\n#### 吉协摇滚音乐节\n\n从16年本科入校以来，每年都不会缺席的\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-17-09-49-IMG_20220109_170644-min.jpg\" title=\"\" alt=\"IMG_20220109_170644-min.jpg\" width=\"455\">\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-17-09-58-IMG_20220109_170844-min.jpg\" title=\"\" alt=\"IMG_20220109_170844-min.jpg\" width=\"460\">\n\n这一段太好听了，忍不住想放上来\n\n<video id=\"video\" controls=\"\" preload=\"none\">\n    <source id=\"mp4\" src=\"../../../../file/jixieshipin.mp4\" type=\"video/mp4\">\n</video>\n\n#### 和朋友在琴台看民族乐团音乐会\n\n![mmexport1639764930916-min.jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-50-33-mmexport1639764930916-min.jpg)\n\n## 4 放飞自我\n\n从不自拍看镜头就躲的我，今年居然开始放飞自我了，开始搞怪、装酷，拿自拍当头像\n\n有人在地铁上睡着了哈哈，这张当过一段时间微信头像\n\n![IMG_20210711_230623(1)-min.jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-28-43-IMG_20210711_230623(1)-min.jpg)\n\n奇怪的Pose，这张也当过微信头像\n\n![mmexport1626000536630-min.jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-29-02-mmexport1626000536630-min.jpg)\n\n这么穿在大街上回头率真的很高\n\n![mmexport1626000564140-min.jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-29-08-mmexport1626000564140-min.jpg)\n\n![mmexport1626000566457-min.jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-29-14-mmexport1626000566457-min.jpg)\n\n![mmexport1626016695835-min.jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-29-16-mmexport1626016695835-min.jpg)\n\n难得这样放飞自我，可能还是因为有这么一群朋友在身边吧\n\n![mmexport1626000567519-min.jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-39-17-mmexport1626000567519-min.jpg)\n\n再来一张黑历史\n\n![mmexport1640255757749(1)-min.jpg](https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-47-39-mmexport1640255757749(1)-min.jpg)\n\n## 5 成长\n\n最重要的是——这一年想清楚了很多道理，算是成长了许多\n\n#### 关于拖延症与逃避\n\n> 我们每时每刻都处在分岔路口\n> 可以选择任意一条路前进，同时另一条路会消失\n> 也可以在原地踌躇一下再选择，这叫充分思考做好准备\n> 也可以在原地多徘徊好一会，直到不得不前进，这叫拖延\n> 继续止步不前，就叫逃避\n> 原地徘徊太久，就容易迷失了方向，踏空一步落入周围的深渊\n> 其实无论走那条路最后都会后悔，逃避才是最大的败北。\n> ——写于2021-11-02\n\n卸载过英雄联盟，知乎和哔哩哔哩，~~然后开始沉迷消消乐（划掉），~~\n\n拨开所有暂且逃避的借口去直面生活直面问题，然后发现，其实也就那么回事，\n\n拖延和逃避过程中，浪费的时间和错过的机会才是最可惜的。\n\n#### 关于未来与迷茫\n\n> 人生像是有惯性的，我能在一定程度上看到前进的方向。  \n> 有时突然一抬头，看见了某个人，就会感叹：唉？这不就是之后的我吗？  \n> 我好像正在朝着这个方向靠着惯性前进呢。  \n> 怎么办呢，是好是坏，要及时转向吗？\n> 有些期盼，有些担忧，庆幸他们拥有的，同时也害怕他们失去的，  \n> 最后还是顺其自然，见机行事了。  \n> 好像看得更透了，也好像更迷茫了。  \n> ——写于2021-11-30\n\n从大二迷茫于是否要读研，到研二迷茫于研究方向，迷茫于职业选择，好像一直是处在焦虑与不安之中，而后来我突然明白一个道理：所有在我身上已经发生过的事情，成就了我现在这样一个独一无二复杂的个体，也大致决定了以后会走上什么样的道路。我所需要做的就是接受这样的既定事实，并且走好接下来的每一步，这样就很好了。\n\n#### 关于长期不健康的状态\n\n> 失眠已经成常态了，但很奇怪的是，失眠应该是一个贬义词，指一种不好的状态，但是我今天居然可以心安理得的，以一种非常平和的心态静躺了两个多小时，想了紧张的事情，也想了快乐的事情，想了现在，也想了将来，背景音乐是无限循环的关大洲的九州同，就像观看一幕幕剧，任由思绪被牵着走，飞到九霄云外，又飞回来，再一看，噢，这一趟旅程花了两个小时多一点，想记录一点东西，写了这么点就开始困的不行。害，锻炼身体和养成生物钟得尽早安排喽！\n\n写完这一段，就很神奇般的再也没有失眠过，也是心态的转变了吧\n\n#### 关于与自己和解，与世界和解\n\n2021年元旦我留下了这样的话：\n\n<img src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-09-41-45-Screenshot_20220110_093854-min.jpg\" title=\"\" alt=\"Screenshot20220110093854minjpg\" width=\"630\">\n\n那一天发生了什么让我印象深刻的事呢？一年后2022年元旦，我写下了这样的文字：\n\n> 这一年还是发生了太多事情，就从去年的总结开始说吧。去年跨年的晚上，买了零食回宿舍准备看B站跨年晚会吃零食和朋友聊聊天跨年，可就是突然突然的一刹那，发觉自己孑然一身，孤独涌向了我瞬间淹没了我，简直是透不过气来，身边的人有相聚庆祝的，也有在一起抱团取暖的，可那喧嚣与我无关。拿出手机，线上倒是很热闹，群里都是无所事事的闲聊，私下聊天的都是礼貌的问候，礼貌地保持着距离。也不怪任何人，在这一刻之前我也从没想过要和任何人抱团，一直寻求的是绝对人格独立思想独立的生活，可在这一刻突然领悟到了什么是孤独，什么是内心的空洞。当时就在后悔，为什么不回家呐，家里是可以假装不会孤单的最后的港湾了。当时还有在疑惑，那么多曾经的好朋友，感情是如何慢慢淡下来的呢，平时怎么会忘了找他们联络联络呢，我所追求的这种独立自主绝对理性的状态，是否太沉浸其中了而忽视了很多基础而重要的东西呢？所以写下了这几句话，希望走出自己的局限，希望把忽视的遗忘的都给找回来。如今这一年过去了，好像我还是那个钻牛角尖的我，但似乎不是像之前那么迷茫了。心态逐渐变得平和而坚定，内心多了一些温暖和力量。看吧，是会越来越好的。算是对2021元旦的心路历程记录，和此刻2022元旦的一个回应。\n>\n> ——写于2022年元旦\n\n今年元旦跨年的时候正被论文烦心着呢，跨啥年啊，偶然发现一年前留下的文字，伴随着的记忆顿时扑面而来，才发现这一年真的大变样了。我自我认知是一个懦弱的理想主义者，这世界和我想的不一样，我也没敢站出来大声反抗，干的最多的也就是在心里跟自己作对而已，不愿妥协，但很多时候不得不妥协，那也得死扛着不愿认输。这一年发生了太多事情冲击到我使我措手不及，有朋友生病遭遇重大变故也不知如何帮助；有朋友突然退学消失，突然就单方面断了联系；也逐渐看清了大人世界的一些残酷的规则，想尽力避开可又不得不去融入。甚至有一段时间我不断追问身边的人：你每天起床的动力是什么？找不到标准答案，更找不到适合我的答案。一年过去了，我还是不知道确切的答案是什么，但这个问题已经不重要了，我还是习惯钻牛角尖的那个人，但心态已经逐渐变得平和，逐渐找到了和世界相处的方式，也更加坚定了我内心不会动摇的东西。长期的失眠状况消失了，没任务安排也能早八起床了，综合这些迹象来看，算是慢慢与自己和解，也与世界和解了。\n\n# 最后——2022的计划\n\n我是一个讨厌立flag的人，但最近从论文的折磨中解脱出来，又恰好临近放假，又好多好多想要做的事情，就在这里列出来，提醒提醒自己。一段时间之后再回来看看哪些做到了，哪些又没做到，就像乘坐时光机回来看看2022年初的我自己，应该也会很有意思。\n\n- 记录生活，底线是月更，会发在博客：[毛利老弟的博客](https://leiwei.xyz/)\n\n- 打造自己的知识库，日常积累，地址：[胖虎的Wiki](https://leiwei.xyz/wiki/)\n\n- 坚持晚十二早八的生物钟\n\n- 健身计划，目标是增重10斤\n\n- 运动计划，精进游泳和羽毛球技术\n\n- 摄影计划，学习技术也记录生活\n\n- 刷算法题，为就业做准备\n\n- 学习计划，论文论文论文论文论文论文\n","slug":"2022-01-10-2021总结","published":1,"updated":"2022-04-01T17:27:15.000Z","comments":1,"photos":[],"link":"","_id":"cl792rm1j001atkin03vmhbb8","content":"<blockquote>\n<p>现在是2022-01-09下午14时16分，前一天晚上我终于提交了论文初稿，也终于在此刻开始筹备我的2021年度总结。我实在不是一个擅长记录和总结的人，就连翻手机相册也经常会有几个月的大段空白期，一时想不起不知道做了什么，像是有大段记忆被偷走了一样，也可能是有好些时光被我不小心抛在身后了。可我不想遗忘，仔细想想也是有很多事情值得记录下来。</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=3413895&auto=0&height=66\"></iframe>\n\n<h2 id=\"1-探索\"><a href=\"#1-探索\" class=\"headerlink\" title=\"1. 探索\"></a>1. 探索</h2><p>有一些从没做过的事情，这一年给做了，回想起来也是很有意思的体验</p>\n<h4 id=\"琴台常客\"><a href=\"#琴台常客\" class=\"headerlink\" title=\"琴台常客\"></a>琴台常客</h4><p>从没去过正经音乐厅或是大剧院的我，今年到成了琴台的常客。要说现场看演出和电视上的区别，那可真就大了去了。不过，能感受到多少吸收多少就看个人，目前我也在努力提升欣赏水平之中。</p>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-22-01-IMG_20210526_190657-min.jpg\"\n                      title=\"\" alt=\"IMG_20210526_190657-min.jpg\" width=\"572\"\n                >\n\n<center>琴台大剧院</center>\n\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-39-15-IMG_20210612_194956-min.jpg\"\n                      title=\"\" alt=\"IMG_20210612_194956-min.jpg\" width=\"573\"\n                >\n\n<center>琴台音乐厅</center>\n\n</center>\n\n<p>部分票据，舞剧《永不消逝的电波》和民族乐团音乐会《魅力中国》的票找不到了orz</p>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-39-32-IMG_20220109_163830-min.jpg\"\n                      title=\"\" alt=\"IMG_20220109_163830-min.jpg\" width=\"308\"\n                >\n\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-44-31-IMG_20220109_164126-min.jpg\"\n                      title=\"\" alt=\"IMG_20220109_164126-min.jpg\" width=\"302\"\n                >\n\n<p>音乐会的票找不到了，拿节目单照片补上</p>\n<img  title=\"\" \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-09-49-19-IMG_20220110_094407-min.jpg\"\n                      alt=\"IMG_20220110_094407-min.jpg\" width=\"304\"\n                >\n\n<p>看完这一场，第一次迷上了民乐《丝绸之路》</p>\n<p>《丝绸之路》，虽远不及现场版的震撼但也很精彩<a class=\"link\"   href=\"https://www.bilibili.com/video/BV1Rs411t7By?share_source=copy_web\" >B站链接<i class=\"fas fa-external-link-alt\"></i></a></p>\n<iframe src=\"//player.bilibili.com/player.html?aid=6437218&bvid=BV1Rs411t7By&cid=10466052&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<p>看完崔健演唱会迷上了崔健，迷上了《一块红布》</p>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-09-49-00-IMG_20211101_202607-min.jpg\"\n                      title=\"\" alt=\"IMG_20211101_202607-min.jpg\" width=\"482\"\n                >\n\n<center>《一块红布》——崔健</center>\n\n<p>《一块红布》——崔健，<a class=\"link\"   href=\"https://www.bilibili.com/video/BV1Hy4y1e74f?share_source=copy_web\" >B站链接<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>为了看演出特地买了个小望远镜哈哈，强烈推荐，观看体验直线上升，终于坐在最后一排用望远镜也能看清演员的脸了</p>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-17-00-23-IMG_20220109_112753-min.jpg\"\n                      title=\"\" alt=\"IMG_20220109_112753-min.jpg\" width=\"275\"\n                >\n\n<p>许久没能静下来好好听歌的我，今年也新喜欢上了几个乐手，崔健、陶喆、王力宏、孙燕姿，都是宝藏歌手啊。听歌也不再是简单的听歌，几乎全是看现场，更有感觉。很多内容B站上都有，强烈推荐！链接会放在其他博客里。</p>\n<h4 id=\"努力成为老司机\"><a href=\"#努力成为老司机\" class=\"headerlink\" title=\"努力成为老司机\"></a>努力成为老司机</h4><p>自从老爸买了辆二手车，每次回家我就是司机，现在开车上路已经完全不会慌啦</p>\n<img  title=\"\" \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-31-24-IMG_20210430_111905-min.jpg\"\n                      alt=\"IMG_20210430_111905-min.jpg\" width=\"178\"\n                >\n\n<h4 id=\"搭建自己的博客和知识库\"><a href=\"#搭建自己的博客和知识库\" class=\"headerlink\" title=\"搭建自己的博客和知识库\"></a>搭建自己的博客和知识库</h4><p>作为一个喜欢折腾电脑的人，这一年做了许多博客的尝试，起因也是因为想要记录生活，结果折腾完了又搁置了orz。后来又新入坑一个领域叫tiddlyWiki，打算用它构建我的个人知识库，还在探索之中，欢迎多多关注呀，以后两个网页都会长期更新！</p>\n<ul>\n<li><p>博客用来写长文记录生活，地址：<a href=\"https://leiwei.xyz/\">毛利老弟的博客</a></p>\n</li>\n<li><p>wiki知识库用来记录零散的知识和想法，地址：<a href=\"https://leiwei.xyz/wiki/\">胖虎的Wiki</a></p>\n</li>\n</ul>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-49-42-Snipaste_2022-01-10_10-49-10.png\"\n                      title=\"\" alt=\"Snipaste_2022-01-10_10-49-10.png\" width=\"650\"\n                >\n\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-48-46-post-bg-TiddlyWiki.png\"\n                      alt=\"post-bg-TiddlyWiki.png\"\n                ></p>\n<h4 id=\"第一次上手电吉他\"><a href=\"#第一次上手电吉他\" class=\"headerlink\" title=\"第一次上手电吉他\"></a>第一次上手电吉他</h4><video id=\"video\" controls=\"\" preload=\"none\">\n    <source id=\"mp4\" src=\"../../../../file/elec_guitar.mp4\" type=\"video/mp4\">\n</video>\n\n<h4 id=\"入门羽毛球\"><a href=\"#入门羽毛球\" class=\"headerlink\" title=\"入门羽毛球\"></a>入门羽毛球</h4><p>学会起跳扣杀啦！杀球可以说是羽毛球最大的魅力了</p>\n<p>原有的磅数也不再能满足我了，只好忍痛剪了重新穿了26磅的拍线（拍子最高穿26），看来技术确实是有进步的</p>\n<p>球好贵，毕竟是用羽毛做的，真奢侈运动</p>\n<p>可惜此处没有图orz</p>\n<h4 id=\"入门游泳\"><a href=\"#入门游泳\" class=\"headerlink\" title=\"入门游泳\"></a>入门游泳</h4><p>这一年，呛了好多次水之后，终于学会了蛙泳！（自学成才！），只是天气转凉之后这项活动就搁置了，计划来年向自由泳迈进！</p>\n<h4 id=\"兼职摄影师\"><a href=\"#兼职摄影师\" class=\"headerlink\" title=\"兼职摄影师\"></a>兼职摄影师</h4><p>这一年有人说我会摄影，哈哈，看来要将摄影师的计划捡起来了，可惜相机在西安的朋友那里，封城了想寄快递都不行。</p>\n<p>模特占大半功劳</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-19-17-IMG_20211217_163121-min.jpg\"\n                      alt=\"IMG_20211217_163121-min.jpg\"\n                ></p>\n<h4 id=\"投稿视频\"><a href=\"#投稿视频\" class=\"headerlink\" title=\"投稿视频\"></a>投稿视频</h4><p>试试水，或许哪天觉得这黑历史太黑了我就给删了哈哈</p>\n<iframe src=\"//player.bilibili.com/player.html?aid=380070268&bvid=BV1hZ4y1X78N&cid=466680905&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<h2 id=\"2-弥补遗憾\"><a href=\"#2-弥补遗憾\" class=\"headerlink\" title=\"2 弥补遗憾\"></a>2 弥补遗憾</h2><h4 id=\"20210623我又毕业啦\"><a href=\"#20210623我又毕业啦\" class=\"headerlink\" title=\"20210623我又毕业啦\"></a>20210623我又毕业啦</h4><p>2020年因为疫情匆匆在家毕业了的我们这一届，终于补办毕业典礼了！穿上心心念念的学士服，还有幸和校长握了手。感谢丁导，感谢秦老师和这么一群可爱的老同学们！</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-02-32-IMG_20210622_135025.jpg\"\n                      alt=\"IMG20210622135025jpg\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-05-34-IMG_20210622_124131-min.jpg\"\n                      alt=\"IMG20210622124131minjpg\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-05-46-mmexport1624379186532.jpg\"\n                      alt=\"mmexport1624379186532jpg\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-11-21-%E5%90%88%E7%85%A71-min.jpg\"\n                      alt=\"合照1minjpg\"\n                ></p>\n<h4 id=\"和过去的自己对话\"><a href=\"#和过去的自己对话\" class=\"headerlink\" title=\"和过去的自己对话\"></a>和过去的自己对话</h4><p>参加了新一年研究生复试的志愿者，看着紧张的考生们，想起两年前同样紧张的自己。考研的那半年时光的磨练将成为我一生的烙印，也带来了强烈的后遗症，或许我从没把那种奇特的状态完全摆脱，看着同样经历着这一切的考生们，好像又释然了许多。</p>\n<h2 id=\"3-活动满满\"><a href=\"#3-活动满满\" class=\"headerlink\" title=\"3 活动满满\"></a>3 活动满满</h2><h4 id=\"0619代表协会参加校级演出\"><a href=\"#0619代表协会参加校级演出\" class=\"headerlink\" title=\"0619代表协会参加校级演出\"></a>0619代表协会参加校级演出</h4><p>又当演员又当观众的充实一天，托社团的福，这算是我参加过最大的演出活动了</p>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-13-52-IMG_20210619_102505-min.jpg\"\n                      title=\"\" alt=\"IMG_20210619_102505-min.jpg\" width=\"391\"\n                >\n\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-44-12-1641716963869.jpeg\"\n                      title=\"\" alt=\"1641716963869.jpeg\" width=\"395\"\n                >\n\n<img  title=\"\" \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-46-11-1641716960797.jpeg\"\n                      alt=\"1641716960797.jpeg\" width=\"394\"\n                >\n\n<iframe src=\"//player.bilibili.com/player.html?aid=931306123&bvid=BV1RM4y1u78w&cid=357607175&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<p><a class=\"link\"   href=\"https://www.bilibili.com/video/BV1RM4y1u78w?share_source=copy_web\" >完整链接<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h4 id=\"协会年终演出\"><a href=\"#协会年终演出\" class=\"headerlink\" title=\"协会年终演出\"></a>协会年终演出</h4><p>当然少不了我亲爱的星一口琴社，从16年底到现在，想想已经五年之久了。能经历这么长时间真是一件神奇而又幸运的事情。</p>\n<p>口琴手兼职鼓手的一天</p>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-57-06-1641718501641-min.jpeg\"\n                      title=\"\" alt=\"1641718501641minjpeg\" width=\"535\"\n                >\n\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-56-31-1641718447164.jpeg\"\n                      title=\"\" alt=\"1641718447164jpeg\" width=\"537\"\n                >\n\n<p>纪念品小夜灯真的是太好看了</p>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-17-21-IMG_20211219_175509-min.jpg\"\n                      title=\"\" alt=\"IMG_20211219_175509-min.jpg\" width=\"484\"\n                >\n\n<h4 id=\"师姐的生日听老师弹吉他\"><a href=\"#师姐的生日听老师弹吉他\" class=\"headerlink\" title=\"师姐的生日听老师弹吉他\"></a>师姐的生日听老师弹吉他</h4><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-16-34--5d4a6e18c65d6cda-min.jpg\"\n                      title=\"\" alt=\"-5d4a6e18c65d6cda-min.jpg\" width=\"472\"\n                >\n\n<h4 id=\"师兄毕业了\"><a href=\"#师兄毕业了\" class=\"headerlink\" title=\"师兄毕业了\"></a>师兄毕业了</h4><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-21-11-IMG_20210608_170433_004-min.jpg\"\n                      title=\"\" alt=\"IMG_20210608_170433_004-min.jpg\" width=\"467\"\n                >\n\n<img  title=\"\" \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-31-22-IMG_20210608_171955-min.jpg\"\n                      alt=\"IMG_20210608_171955-min.jpg\" width=\"464\"\n                >\n\n<h4 id=\"元旦回家放风筝啦\"><a href=\"#元旦回家放风筝啦\" class=\"headerlink\" title=\"元旦回家放风筝啦\"></a>元旦回家放风筝啦</h4><img  title=\"\" \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-09-56-45-IMG_20220101_171948_edit_5093276200263-min.jpg\"\n                      alt=\"IMG_20220101_171948_edit_5093276200263-min.jpg\" width=\"467\"\n                >\n\n<p>爸爸放起风筝来像个孩子</p>\n<video id=\"video\" controls=\"\" preload=\"none\">\n    <source id=\"mp4\" src=\"../../../../file/fangfengzheng.mp4\" type=\"video/mp4\">\n</video>\n\n<h4 id=\"东湖樱花园\"><a href=\"#东湖樱花园\" class=\"headerlink\" title=\"东湖樱花园\"></a>东湖樱花园</h4><p>爸妈来学校看我，顺道就去了东湖</p>\n<img  title=\"\" \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-19-16-IMG_20211022_145644-min.jpg\"\n                      alt=\"IMG_20211022_145644-min.jpg\" width=\"463\"\n                >\n\n<p>和实验室的朋友们去东湖游船、磨山索道、森林公园烧烤</p>\n<p>票根也能晒一晒</p>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-15-50-17-DF48E08B123207035CAF10E155EF775E.jpg\"\n                      title=\"\" alt=\"DF48E08B123207035CAF10E155EF775E.jpg\" width=\"347\"\n                >\n\n<p>暑假几个傻子在视频</p>\n<img  title=\"\" \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-09-56-32-Screenshot_20210721_191507_com.tencent.mm-min.jpg\"\n                      alt=\"Screenshot_20210721_191507_com.tencent.mm-min.jpg\" width=\"321\"\n                >\n\n<h4 id=\"20210730和老姐去重庆\"><a href=\"#20210730和老姐去重庆\" class=\"headerlink\" title=\"20210730和老姐去重庆\"></a>20210730和老姐去重庆</h4><img  title=\"\" \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-06-02-IMG_20210730_211557-min.jpg\"\n                      alt=\"IMG_20210730_211557-min.jpg\" width=\"451\"\n                >\n\n<img  title=\"\" \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-05-51-IMG_20210730_215813-min.jpg\"\n                      alt=\"IMG_20210730_215813-min.jpg\" width=\"453\"\n                >\n\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-06-32-IMG_20210730_215641-min.jpg\"\n                      title=\"\" alt=\"IMG_20210730_215641-min.jpg\" width=\"455\"\n                >\n\n<p>然后就有了老姐帮我做的第一条旅行vlog</p>\n<video id=\"video\" controls=\"\" preload=\"none\">\n    <source id=\"mp4\" src=\"../../../../file/chongqingvlog.mp4\" type=\"video/mp4\">\n</video>\n\n<h4 id=\"南湖花海❀\"><a href=\"#南湖花海❀\" class=\"headerlink\" title=\"南湖花海❀\"></a>南湖花海❀</h4><p>许久没去南湖校区，看到花海突然很感动，太喜欢了，就骑小电驴兜了一圈录了下来</p>\n<video id=\"video\" controls=\"\" preload=\"none\">\n    <source id=\"mp4\" src=\"../../../../file/huahai.mp4\" type=\"video/mp4\">\n</video>\n\n<h4 id=\"吉协摇滚音乐节\"><a href=\"#吉协摇滚音乐节\" class=\"headerlink\" title=\"吉协摇滚音乐节\"></a>吉协摇滚音乐节</h4><p>从16年本科入校以来，每年都不会缺席的</p>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-17-09-49-IMG_20220109_170644-min.jpg\"\n                      title=\"\" alt=\"IMG_20220109_170644-min.jpg\" width=\"455\"\n                >\n\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-17-09-58-IMG_20220109_170844-min.jpg\"\n                      title=\"\" alt=\"IMG_20220109_170844-min.jpg\" width=\"460\"\n                >\n\n<p>这一段太好听了，忍不住想放上来</p>\n<video id=\"video\" controls=\"\" preload=\"none\">\n    <source id=\"mp4\" src=\"../../../../file/jixieshipin.mp4\" type=\"video/mp4\">\n</video>\n\n<h4 id=\"和朋友在琴台看民族乐团音乐会\"><a href=\"#和朋友在琴台看民族乐团音乐会\" class=\"headerlink\" title=\"和朋友在琴台看民族乐团音乐会\"></a>和朋友在琴台看民族乐团音乐会</h4><p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-50-33-mmexport1639764930916-min.jpg\"\n                      alt=\"mmexport1639764930916-min.jpg\"\n                ></p>\n<h2 id=\"4-放飞自我\"><a href=\"#4-放飞自我\" class=\"headerlink\" title=\"4 放飞自我\"></a>4 放飞自我</h2><p>从不自拍看镜头就躲的我，今年居然开始放飞自我了，开始搞怪、装酷，拿自拍当头像</p>\n<p>有人在地铁上睡着了哈哈，这张当过一段时间微信头像</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-28-43-IMG_20210711_230623(1)-min.jpg\"\n                      alt=\"IMG_20210711_230623(1)-min.jpg\"\n                ></p>\n<p>奇怪的Pose，这张也当过微信头像</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-29-02-mmexport1626000536630-min.jpg\"\n                      alt=\"mmexport1626000536630-min.jpg\"\n                ></p>\n<p>这么穿在大街上回头率真的很高</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-29-08-mmexport1626000564140-min.jpg\"\n                      alt=\"mmexport1626000564140-min.jpg\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-29-14-mmexport1626000566457-min.jpg\"\n                      alt=\"mmexport1626000566457-min.jpg\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-29-16-mmexport1626016695835-min.jpg\"\n                      alt=\"mmexport1626016695835-min.jpg\"\n                ></p>\n<p>难得这样放飞自我，可能还是因为有这么一群朋友在身边吧</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-39-17-mmexport1626000567519-min.jpg\"\n                      alt=\"mmexport1626000567519-min.jpg\"\n                ></p>\n<p>再来一张黑历史</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-47-39-mmexport1640255757749(1)-min.jpg\"\n                      alt=\"mmexport1640255757749(1)-min.jpg\"\n                ></p>\n<h2 id=\"5-成长\"><a href=\"#5-成长\" class=\"headerlink\" title=\"5 成长\"></a>5 成长</h2><p>最重要的是——这一年想清楚了很多道理，算是成长了许多</p>\n<h4 id=\"关于拖延症与逃避\"><a href=\"#关于拖延症与逃避\" class=\"headerlink\" title=\"关于拖延症与逃避\"></a>关于拖延症与逃避</h4><blockquote>\n<p>我们每时每刻都处在分岔路口<br>可以选择任意一条路前进，同时另一条路会消失<br>也可以在原地踌躇一下再选择，这叫充分思考做好准备<br>也可以在原地多徘徊好一会，直到不得不前进，这叫拖延<br>继续止步不前，就叫逃避<br>原地徘徊太久，就容易迷失了方向，踏空一步落入周围的深渊<br>其实无论走那条路最后都会后悔，逃避才是最大的败北。<br>——写于2021-11-02</p>\n</blockquote>\n<p>卸载过英雄联盟，知乎和哔哩哔哩，<del>然后开始沉迷消消乐（划掉），</del></p>\n<p>拨开所有暂且逃避的借口去直面生活直面问题，然后发现，其实也就那么回事，</p>\n<p>拖延和逃避过程中，浪费的时间和错过的机会才是最可惜的。</p>\n<h4 id=\"关于未来与迷茫\"><a href=\"#关于未来与迷茫\" class=\"headerlink\" title=\"关于未来与迷茫\"></a>关于未来与迷茫</h4><blockquote>\n<p>人生像是有惯性的，我能在一定程度上看到前进的方向。<br>有时突然一抬头，看见了某个人，就会感叹：唉？这不就是之后的我吗？<br>我好像正在朝着这个方向靠着惯性前进呢。<br>怎么办呢，是好是坏，要及时转向吗？<br>有些期盼，有些担忧，庆幸他们拥有的，同时也害怕他们失去的，<br>最后还是顺其自然，见机行事了。<br>好像看得更透了，也好像更迷茫了。<br>——写于2021-11-30</p>\n</blockquote>\n<p>从大二迷茫于是否要读研，到研二迷茫于研究方向，迷茫于职业选择，好像一直是处在焦虑与不安之中，而后来我突然明白一个道理：所有在我身上已经发生过的事情，成就了我现在这样一个独一无二复杂的个体，也大致决定了以后会走上什么样的道路。我所需要做的就是接受这样的既定事实，并且走好接下来的每一步，这样就很好了。</p>\n<h4 id=\"关于长期不健康的状态\"><a href=\"#关于长期不健康的状态\" class=\"headerlink\" title=\"关于长期不健康的状态\"></a>关于长期不健康的状态</h4><blockquote>\n<p>失眠已经成常态了，但很奇怪的是，失眠应该是一个贬义词，指一种不好的状态，但是我今天居然可以心安理得的，以一种非常平和的心态静躺了两个多小时，想了紧张的事情，也想了快乐的事情，想了现在，也想了将来，背景音乐是无限循环的关大洲的九州同，就像观看一幕幕剧，任由思绪被牵着走，飞到九霄云外，又飞回来，再一看，噢，这一趟旅程花了两个小时多一点，想记录一点东西，写了这么点就开始困的不行。害，锻炼身体和养成生物钟得尽早安排喽！</p>\n</blockquote>\n<p>写完这一段，就很神奇般的再也没有失眠过，也是心态的转变了吧</p>\n<h4 id=\"关于与自己和解，与世界和解\"><a href=\"#关于与自己和解，与世界和解\" class=\"headerlink\" title=\"关于与自己和解，与世界和解\"></a>关于与自己和解，与世界和解</h4><p>2021年元旦我留下了这样的话：</p>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-09-41-45-Screenshot_20220110_093854-min.jpg\"\n                      title=\"\" alt=\"Screenshot20220110093854minjpg\" width=\"630\"\n                >\n\n<p>那一天发生了什么让我印象深刻的事呢？一年后2022年元旦，我写下了这样的文字：</p>\n<blockquote>\n<p>这一年还是发生了太多事情，就从去年的总结开始说吧。去年跨年的晚上，买了零食回宿舍准备看B站跨年晚会吃零食和朋友聊聊天跨年，可就是突然突然的一刹那，发觉自己孑然一身，孤独涌向了我瞬间淹没了我，简直是透不过气来，身边的人有相聚庆祝的，也有在一起抱团取暖的，可那喧嚣与我无关。拿出手机，线上倒是很热闹，群里都是无所事事的闲聊，私下聊天的都是礼貌的问候，礼貌地保持着距离。也不怪任何人，在这一刻之前我也从没想过要和任何人抱团，一直寻求的是绝对人格独立思想独立的生活，可在这一刻突然领悟到了什么是孤独，什么是内心的空洞。当时就在后悔，为什么不回家呐，家里是可以假装不会孤单的最后的港湾了。当时还有在疑惑，那么多曾经的好朋友，感情是如何慢慢淡下来的呢，平时怎么会忘了找他们联络联络呢，我所追求的这种独立自主绝对理性的状态，是否太沉浸其中了而忽视了很多基础而重要的东西呢？所以写下了这几句话，希望走出自己的局限，希望把忽视的遗忘的都给找回来。如今这一年过去了，好像我还是那个钻牛角尖的我，但似乎不是像之前那么迷茫了。心态逐渐变得平和而坚定，内心多了一些温暖和力量。看吧，是会越来越好的。算是对2021元旦的心路历程记录，和此刻2022元旦的一个回应。</p>\n<p>——写于2022年元旦</p>\n</blockquote>\n<p>今年元旦跨年的时候正被论文烦心着呢，跨啥年啊，偶然发现一年前留下的文字，伴随着的记忆顿时扑面而来，才发现这一年真的大变样了。我自我认知是一个懦弱的理想主义者，这世界和我想的不一样，我也没敢站出来大声反抗，干的最多的也就是在心里跟自己作对而已，不愿妥协，但很多时候不得不妥协，那也得死扛着不愿认输。这一年发生了太多事情冲击到我使我措手不及，有朋友生病遭遇重大变故也不知如何帮助；有朋友突然退学消失，突然就单方面断了联系；也逐渐看清了大人世界的一些残酷的规则，想尽力避开可又不得不去融入。甚至有一段时间我不断追问身边的人：你每天起床的动力是什么？找不到标准答案，更找不到适合我的答案。一年过去了，我还是不知道确切的答案是什么，但这个问题已经不重要了，我还是习惯钻牛角尖的那个人，但心态已经逐渐变得平和，逐渐找到了和世界相处的方式，也更加坚定了我内心不会动摇的东西。长期的失眠状况消失了，没任务安排也能早八起床了，综合这些迹象来看，算是慢慢与自己和解，也与世界和解了。</p>\n<h1 id=\"最后——2022的计划\"><a href=\"#最后——2022的计划\" class=\"headerlink\" title=\"最后——2022的计划\"></a>最后——2022的计划</h1><p>我是一个讨厌立flag的人，但最近从论文的折磨中解脱出来，又恰好临近放假，又好多好多想要做的事情，就在这里列出来，提醒提醒自己。一段时间之后再回来看看哪些做到了，哪些又没做到，就像乘坐时光机回来看看2022年初的我自己，应该也会很有意思。</p>\n<ul>\n<li><p>记录生活，底线是月更，会发在博客：<a href=\"https://leiwei.xyz/\">毛利老弟的博客</a></p>\n</li>\n<li><p>打造自己的知识库，日常积累，地址：<a href=\"https://leiwei.xyz/wiki/\">胖虎的Wiki</a></p>\n</li>\n<li><p>坚持晚十二早八的生物钟</p>\n</li>\n<li><p>健身计划，目标是增重10斤</p>\n</li>\n<li><p>运动计划，精进游泳和羽毛球技术</p>\n</li>\n<li><p>摄影计划，学习技术也记录生活</p>\n</li>\n<li><p>刷算法题，为就业做准备</p>\n</li>\n<li><p>学习计划，论文论文论文论文论文论文</p>\n</li>\n</ul>\n","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"<blockquote>\n<p>现在是2022-01-09下午14时16分，前一天晚上我终于提交了论文初稿，也终于在此刻开始筹备我的2021年度总结。我实在不是一个擅长记录和总结的人，就连翻手机相册也经常会有几个月的大段空白期，一时想不起不知道做了什么，像是有大段记忆被偷走了一样，也可能是有好些时光被我不小心抛在身后了。可我不想遗忘，仔细想想也是有很多事情值得记录下来。</p>\n</blockquote>","more":"<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=3413895&auto=0&height=66\"></iframe>\n\n<h2 id=\"1-探索\"><a href=\"#1-探索\" class=\"headerlink\" title=\"1. 探索\"></a>1. 探索</h2><p>有一些从没做过的事情，这一年给做了，回想起来也是很有意思的体验</p>\n<h4 id=\"琴台常客\"><a href=\"#琴台常客\" class=\"headerlink\" title=\"琴台常客\"></a>琴台常客</h4><p>从没去过正经音乐厅或是大剧院的我，今年到成了琴台的常客。要说现场看演出和电视上的区别，那可真就大了去了。不过，能感受到多少吸收多少就看个人，目前我也在努力提升欣赏水平之中。</p>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-22-01-IMG_20210526_190657-min.jpg\"\n                      title=\"\" alt=\"IMG_20210526_190657-min.jpg\" width=\"572\"\n                >\n\n<center>琴台大剧院</center>\n\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-39-15-IMG_20210612_194956-min.jpg\"\n                      title=\"\" alt=\"IMG_20210612_194956-min.jpg\" width=\"573\"\n                >\n\n<center>琴台音乐厅</center>\n\n</center>\n\n<p>部分票据，舞剧《永不消逝的电波》和民族乐团音乐会《魅力中国》的票找不到了orz</p>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-39-32-IMG_20220109_163830-min.jpg\"\n                      title=\"\" alt=\"IMG_20220109_163830-min.jpg\" width=\"308\"\n                >\n\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-44-31-IMG_20220109_164126-min.jpg\"\n                      title=\"\" alt=\"IMG_20220109_164126-min.jpg\" width=\"302\"\n                >\n\n<p>音乐会的票找不到了，拿节目单照片补上</p>\n<img  title=\"\" \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-09-49-19-IMG_20220110_094407-min.jpg\"\n                      alt=\"IMG_20220110_094407-min.jpg\" width=\"304\"\n                >\n\n<p>看完这一场，第一次迷上了民乐《丝绸之路》</p>\n<p>《丝绸之路》，虽远不及现场版的震撼但也很精彩<a class=\"link\"   href=\"https://www.bilibili.com/video/BV1Rs411t7By?share_source=copy_web\" >B站链接<i class=\"fas fa-external-link-alt\"></i></a></p>\n<iframe src=\"//player.bilibili.com/player.html?aid=6437218&bvid=BV1Rs411t7By&cid=10466052&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<p>看完崔健演唱会迷上了崔健，迷上了《一块红布》</p>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-09-49-00-IMG_20211101_202607-min.jpg\"\n                      title=\"\" alt=\"IMG_20211101_202607-min.jpg\" width=\"482\"\n                >\n\n<center>《一块红布》——崔健</center>\n\n<p>《一块红布》——崔健，<a class=\"link\"   href=\"https://www.bilibili.com/video/BV1Hy4y1e74f?share_source=copy_web\" >B站链接<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>为了看演出特地买了个小望远镜哈哈，强烈推荐，观看体验直线上升，终于坐在最后一排用望远镜也能看清演员的脸了</p>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-17-00-23-IMG_20220109_112753-min.jpg\"\n                      title=\"\" alt=\"IMG_20220109_112753-min.jpg\" width=\"275\"\n                >\n\n<p>许久没能静下来好好听歌的我，今年也新喜欢上了几个乐手，崔健、陶喆、王力宏、孙燕姿，都是宝藏歌手啊。听歌也不再是简单的听歌，几乎全是看现场，更有感觉。很多内容B站上都有，强烈推荐！链接会放在其他博客里。</p>\n<h4 id=\"努力成为老司机\"><a href=\"#努力成为老司机\" class=\"headerlink\" title=\"努力成为老司机\"></a>努力成为老司机</h4><p>自从老爸买了辆二手车，每次回家我就是司机，现在开车上路已经完全不会慌啦</p>\n<img  title=\"\" \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-31-24-IMG_20210430_111905-min.jpg\"\n                      alt=\"IMG_20210430_111905-min.jpg\" width=\"178\"\n                >\n\n<h4 id=\"搭建自己的博客和知识库\"><a href=\"#搭建自己的博客和知识库\" class=\"headerlink\" title=\"搭建自己的博客和知识库\"></a>搭建自己的博客和知识库</h4><p>作为一个喜欢折腾电脑的人，这一年做了许多博客的尝试，起因也是因为想要记录生活，结果折腾完了又搁置了orz。后来又新入坑一个领域叫tiddlyWiki，打算用它构建我的个人知识库，还在探索之中，欢迎多多关注呀，以后两个网页都会长期更新！</p>\n<ul>\n<li><p>博客用来写长文记录生活，地址：<a href=\"https://leiwei.xyz/\">毛利老弟的博客</a></p>\n</li>\n<li><p>wiki知识库用来记录零散的知识和想法，地址：<a href=\"https://leiwei.xyz/wiki/\">胖虎的Wiki</a></p>\n</li>\n</ul>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-49-42-Snipaste_2022-01-10_10-49-10.png\"\n                      title=\"\" alt=\"Snipaste_2022-01-10_10-49-10.png\" width=\"650\"\n                >\n\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-48-46-post-bg-TiddlyWiki.png\"\n                      alt=\"post-bg-TiddlyWiki.png\"\n                ></p>\n<h4 id=\"第一次上手电吉他\"><a href=\"#第一次上手电吉他\" class=\"headerlink\" title=\"第一次上手电吉他\"></a>第一次上手电吉他</h4><video id=\"video\" controls=\"\" preload=\"none\">\n    <source id=\"mp4\" src=\"../../../../file/elec_guitar.mp4\" type=\"video/mp4\">\n</video>\n\n<h4 id=\"入门羽毛球\"><a href=\"#入门羽毛球\" class=\"headerlink\" title=\"入门羽毛球\"></a>入门羽毛球</h4><p>学会起跳扣杀啦！杀球可以说是羽毛球最大的魅力了</p>\n<p>原有的磅数也不再能满足我了，只好忍痛剪了重新穿了26磅的拍线（拍子最高穿26），看来技术确实是有进步的</p>\n<p>球好贵，毕竟是用羽毛做的，真奢侈运动</p>\n<p>可惜此处没有图orz</p>\n<h4 id=\"入门游泳\"><a href=\"#入门游泳\" class=\"headerlink\" title=\"入门游泳\"></a>入门游泳</h4><p>这一年，呛了好多次水之后，终于学会了蛙泳！（自学成才！），只是天气转凉之后这项活动就搁置了，计划来年向自由泳迈进！</p>\n<h4 id=\"兼职摄影师\"><a href=\"#兼职摄影师\" class=\"headerlink\" title=\"兼职摄影师\"></a>兼职摄影师</h4><p>这一年有人说我会摄影，哈哈，看来要将摄影师的计划捡起来了，可惜相机在西安的朋友那里，封城了想寄快递都不行。</p>\n<p>模特占大半功劳</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-19-17-IMG_20211217_163121-min.jpg\"\n                      alt=\"IMG_20211217_163121-min.jpg\"\n                ></p>\n<h4 id=\"投稿视频\"><a href=\"#投稿视频\" class=\"headerlink\" title=\"投稿视频\"></a>投稿视频</h4><p>试试水，或许哪天觉得这黑历史太黑了我就给删了哈哈</p>\n<iframe src=\"//player.bilibili.com/player.html?aid=380070268&bvid=BV1hZ4y1X78N&cid=466680905&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<h2 id=\"2-弥补遗憾\"><a href=\"#2-弥补遗憾\" class=\"headerlink\" title=\"2 弥补遗憾\"></a>2 弥补遗憾</h2><h4 id=\"20210623我又毕业啦\"><a href=\"#20210623我又毕业啦\" class=\"headerlink\" title=\"20210623我又毕业啦\"></a>20210623我又毕业啦</h4><p>2020年因为疫情匆匆在家毕业了的我们这一届，终于补办毕业典礼了！穿上心心念念的学士服，还有幸和校长握了手。感谢丁导，感谢秦老师和这么一群可爱的老同学们！</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-02-32-IMG_20210622_135025.jpg\"\n                      alt=\"IMG20210622135025jpg\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-05-34-IMG_20210622_124131-min.jpg\"\n                      alt=\"IMG20210622124131minjpg\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-05-46-mmexport1624379186532.jpg\"\n                      alt=\"mmexport1624379186532jpg\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-11-21-%E5%90%88%E7%85%A71-min.jpg\"\n                      alt=\"合照1minjpg\"\n                ></p>\n<h4 id=\"和过去的自己对话\"><a href=\"#和过去的自己对话\" class=\"headerlink\" title=\"和过去的自己对话\"></a>和过去的自己对话</h4><p>参加了新一年研究生复试的志愿者，看着紧张的考生们，想起两年前同样紧张的自己。考研的那半年时光的磨练将成为我一生的烙印，也带来了强烈的后遗症，或许我从没把那种奇特的状态完全摆脱，看着同样经历着这一切的考生们，好像又释然了许多。</p>\n<h2 id=\"3-活动满满\"><a href=\"#3-活动满满\" class=\"headerlink\" title=\"3 活动满满\"></a>3 活动满满</h2><h4 id=\"0619代表协会参加校级演出\"><a href=\"#0619代表协会参加校级演出\" class=\"headerlink\" title=\"0619代表协会参加校级演出\"></a>0619代表协会参加校级演出</h4><p>又当演员又当观众的充实一天，托社团的福，这算是我参加过最大的演出活动了</p>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-13-52-IMG_20210619_102505-min.jpg\"\n                      title=\"\" alt=\"IMG_20210619_102505-min.jpg\" width=\"391\"\n                >\n\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-44-12-1641716963869.jpeg\"\n                      title=\"\" alt=\"1641716963869.jpeg\" width=\"395\"\n                >\n\n<img  title=\"\" \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-46-11-1641716960797.jpeg\"\n                      alt=\"1641716960797.jpeg\" width=\"394\"\n                >\n\n<iframe src=\"//player.bilibili.com/player.html?aid=931306123&bvid=BV1RM4y1u78w&cid=357607175&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<p><a class=\"link\"   href=\"https://www.bilibili.com/video/BV1RM4y1u78w?share_source=copy_web\" >完整链接<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h4 id=\"协会年终演出\"><a href=\"#协会年终演出\" class=\"headerlink\" title=\"协会年终演出\"></a>协会年终演出</h4><p>当然少不了我亲爱的星一口琴社，从16年底到现在，想想已经五年之久了。能经历这么长时间真是一件神奇而又幸运的事情。</p>\n<p>口琴手兼职鼓手的一天</p>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-57-06-1641718501641-min.jpeg\"\n                      title=\"\" alt=\"1641718501641minjpeg\" width=\"535\"\n                >\n\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-16-56-31-1641718447164.jpeg\"\n                      title=\"\" alt=\"1641718447164jpeg\" width=\"537\"\n                >\n\n<p>纪念品小夜灯真的是太好看了</p>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-17-21-IMG_20211219_175509-min.jpg\"\n                      title=\"\" alt=\"IMG_20211219_175509-min.jpg\" width=\"484\"\n                >\n\n<h4 id=\"师姐的生日听老师弹吉他\"><a href=\"#师姐的生日听老师弹吉他\" class=\"headerlink\" title=\"师姐的生日听老师弹吉他\"></a>师姐的生日听老师弹吉他</h4><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-16-34--5d4a6e18c65d6cda-min.jpg\"\n                      title=\"\" alt=\"-5d4a6e18c65d6cda-min.jpg\" width=\"472\"\n                >\n\n<h4 id=\"师兄毕业了\"><a href=\"#师兄毕业了\" class=\"headerlink\" title=\"师兄毕业了\"></a>师兄毕业了</h4><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-21-11-IMG_20210608_170433_004-min.jpg\"\n                      title=\"\" alt=\"IMG_20210608_170433_004-min.jpg\" width=\"467\"\n                >\n\n<img  title=\"\" \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-31-22-IMG_20210608_171955-min.jpg\"\n                      alt=\"IMG_20210608_171955-min.jpg\" width=\"464\"\n                >\n\n<h4 id=\"元旦回家放风筝啦\"><a href=\"#元旦回家放风筝啦\" class=\"headerlink\" title=\"元旦回家放风筝啦\"></a>元旦回家放风筝啦</h4><img  title=\"\" \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-09-56-45-IMG_20220101_171948_edit_5093276200263-min.jpg\"\n                      alt=\"IMG_20220101_171948_edit_5093276200263-min.jpg\" width=\"467\"\n                >\n\n<p>爸爸放起风筝来像个孩子</p>\n<video id=\"video\" controls=\"\" preload=\"none\">\n    <source id=\"mp4\" src=\"../../../../file/fangfengzheng.mp4\" type=\"video/mp4\">\n</video>\n\n<h4 id=\"东湖樱花园\"><a href=\"#东湖樱花园\" class=\"headerlink\" title=\"东湖樱花园\"></a>东湖樱花园</h4><p>爸妈来学校看我，顺道就去了东湖</p>\n<img  title=\"\" \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-19-16-IMG_20211022_145644-min.jpg\"\n                      alt=\"IMG_20211022_145644-min.jpg\" width=\"463\"\n                >\n\n<p>和实验室的朋友们去东湖游船、磨山索道、森林公园烧烤</p>\n<p>票根也能晒一晒</p>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-15-50-17-DF48E08B123207035CAF10E155EF775E.jpg\"\n                      title=\"\" alt=\"DF48E08B123207035CAF10E155EF775E.jpg\" width=\"347\"\n                >\n\n<p>暑假几个傻子在视频</p>\n<img  title=\"\" \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-09-56-32-Screenshot_20210721_191507_com.tencent.mm-min.jpg\"\n                      alt=\"Screenshot_20210721_191507_com.tencent.mm-min.jpg\" width=\"321\"\n                >\n\n<h4 id=\"20210730和老姐去重庆\"><a href=\"#20210730和老姐去重庆\" class=\"headerlink\" title=\"20210730和老姐去重庆\"></a>20210730和老姐去重庆</h4><img  title=\"\" \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-06-02-IMG_20210730_211557-min.jpg\"\n                      alt=\"IMG_20210730_211557-min.jpg\" width=\"451\"\n                >\n\n<img  title=\"\" \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-05-51-IMG_20210730_215813-min.jpg\"\n                      alt=\"IMG_20210730_215813-min.jpg\" width=\"453\"\n                >\n\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-10-06-32-IMG_20210730_215641-min.jpg\"\n                      title=\"\" alt=\"IMG_20210730_215641-min.jpg\" width=\"455\"\n                >\n\n<p>然后就有了老姐帮我做的第一条旅行vlog</p>\n<video id=\"video\" controls=\"\" preload=\"none\">\n    <source id=\"mp4\" src=\"../../../../file/chongqingvlog.mp4\" type=\"video/mp4\">\n</video>\n\n<h4 id=\"南湖花海❀\"><a href=\"#南湖花海❀\" class=\"headerlink\" title=\"南湖花海❀\"></a>南湖花海❀</h4><p>许久没去南湖校区，看到花海突然很感动，太喜欢了，就骑小电驴兜了一圈录了下来</p>\n<video id=\"video\" controls=\"\" preload=\"none\">\n    <source id=\"mp4\" src=\"../../../../file/huahai.mp4\" type=\"video/mp4\">\n</video>\n\n<h4 id=\"吉协摇滚音乐节\"><a href=\"#吉协摇滚音乐节\" class=\"headerlink\" title=\"吉协摇滚音乐节\"></a>吉协摇滚音乐节</h4><p>从16年本科入校以来，每年都不会缺席的</p>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-17-09-49-IMG_20220109_170644-min.jpg\"\n                      title=\"\" alt=\"IMG_20220109_170644-min.jpg\" width=\"455\"\n                >\n\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/09-17-09-58-IMG_20220109_170844-min.jpg\"\n                      title=\"\" alt=\"IMG_20220109_170844-min.jpg\" width=\"460\"\n                >\n\n<p>这一段太好听了，忍不住想放上来</p>\n<video id=\"video\" controls=\"\" preload=\"none\">\n    <source id=\"mp4\" src=\"../../../../file/jixieshipin.mp4\" type=\"video/mp4\">\n</video>\n\n<h4 id=\"和朋友在琴台看民族乐团音乐会\"><a href=\"#和朋友在琴台看民族乐团音乐会\" class=\"headerlink\" title=\"和朋友在琴台看民族乐团音乐会\"></a>和朋友在琴台看民族乐团音乐会</h4><p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-50-33-mmexport1639764930916-min.jpg\"\n                      alt=\"mmexport1639764930916-min.jpg\"\n                ></p>\n<h2 id=\"4-放飞自我\"><a href=\"#4-放飞自我\" class=\"headerlink\" title=\"4 放飞自我\"></a>4 放飞自我</h2><p>从不自拍看镜头就躲的我，今年居然开始放飞自我了，开始搞怪、装酷，拿自拍当头像</p>\n<p>有人在地铁上睡着了哈哈，这张当过一段时间微信头像</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-28-43-IMG_20210711_230623(1)-min.jpg\"\n                      alt=\"IMG_20210711_230623(1)-min.jpg\"\n                ></p>\n<p>奇怪的Pose，这张也当过微信头像</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-29-02-mmexport1626000536630-min.jpg\"\n                      alt=\"mmexport1626000536630-min.jpg\"\n                ></p>\n<p>这么穿在大街上回头率真的很高</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-29-08-mmexport1626000564140-min.jpg\"\n                      alt=\"mmexport1626000564140-min.jpg\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-29-14-mmexport1626000566457-min.jpg\"\n                      alt=\"mmexport1626000566457-min.jpg\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-29-16-mmexport1626016695835-min.jpg\"\n                      alt=\"mmexport1626016695835-min.jpg\"\n                ></p>\n<p>难得这样放飞自我，可能还是因为有这么一群朋友在身边吧</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-21-39-17-mmexport1626000567519-min.jpg\"\n                      alt=\"mmexport1626000567519-min.jpg\"\n                ></p>\n<p>再来一张黑历史</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/11-00-47-39-mmexport1640255757749(1)-min.jpg\"\n                      alt=\"mmexport1640255757749(1)-min.jpg\"\n                ></p>\n<h2 id=\"5-成长\"><a href=\"#5-成长\" class=\"headerlink\" title=\"5 成长\"></a>5 成长</h2><p>最重要的是——这一年想清楚了很多道理，算是成长了许多</p>\n<h4 id=\"关于拖延症与逃避\"><a href=\"#关于拖延症与逃避\" class=\"headerlink\" title=\"关于拖延症与逃避\"></a>关于拖延症与逃避</h4><blockquote>\n<p>我们每时每刻都处在分岔路口<br>可以选择任意一条路前进，同时另一条路会消失<br>也可以在原地踌躇一下再选择，这叫充分思考做好准备<br>也可以在原地多徘徊好一会，直到不得不前进，这叫拖延<br>继续止步不前，就叫逃避<br>原地徘徊太久，就容易迷失了方向，踏空一步落入周围的深渊<br>其实无论走那条路最后都会后悔，逃避才是最大的败北。<br>——写于2021-11-02</p>\n</blockquote>\n<p>卸载过英雄联盟，知乎和哔哩哔哩，<del>然后开始沉迷消消乐（划掉），</del></p>\n<p>拨开所有暂且逃避的借口去直面生活直面问题，然后发现，其实也就那么回事，</p>\n<p>拖延和逃避过程中，浪费的时间和错过的机会才是最可惜的。</p>\n<h4 id=\"关于未来与迷茫\"><a href=\"#关于未来与迷茫\" class=\"headerlink\" title=\"关于未来与迷茫\"></a>关于未来与迷茫</h4><blockquote>\n<p>人生像是有惯性的，我能在一定程度上看到前进的方向。<br>有时突然一抬头，看见了某个人，就会感叹：唉？这不就是之后的我吗？<br>我好像正在朝着这个方向靠着惯性前进呢。<br>怎么办呢，是好是坏，要及时转向吗？<br>有些期盼，有些担忧，庆幸他们拥有的，同时也害怕他们失去的，<br>最后还是顺其自然，见机行事了。<br>好像看得更透了，也好像更迷茫了。<br>——写于2021-11-30</p>\n</blockquote>\n<p>从大二迷茫于是否要读研，到研二迷茫于研究方向，迷茫于职业选择，好像一直是处在焦虑与不安之中，而后来我突然明白一个道理：所有在我身上已经发生过的事情，成就了我现在这样一个独一无二复杂的个体，也大致决定了以后会走上什么样的道路。我所需要做的就是接受这样的既定事实，并且走好接下来的每一步，这样就很好了。</p>\n<h4 id=\"关于长期不健康的状态\"><a href=\"#关于长期不健康的状态\" class=\"headerlink\" title=\"关于长期不健康的状态\"></a>关于长期不健康的状态</h4><blockquote>\n<p>失眠已经成常态了，但很奇怪的是，失眠应该是一个贬义词，指一种不好的状态，但是我今天居然可以心安理得的，以一种非常平和的心态静躺了两个多小时，想了紧张的事情，也想了快乐的事情，想了现在，也想了将来，背景音乐是无限循环的关大洲的九州同，就像观看一幕幕剧，任由思绪被牵着走，飞到九霄云外，又飞回来，再一看，噢，这一趟旅程花了两个小时多一点，想记录一点东西，写了这么点就开始困的不行。害，锻炼身体和养成生物钟得尽早安排喽！</p>\n</blockquote>\n<p>写完这一段，就很神奇般的再也没有失眠过，也是心态的转变了吧</p>\n<h4 id=\"关于与自己和解，与世界和解\"><a href=\"#关于与自己和解，与世界和解\" class=\"headerlink\" title=\"关于与自己和解，与世界和解\"></a>关于与自己和解，与世界和解</h4><p>2021年元旦我留下了这样的话：</p>\n<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://raw.githubusercontent.com/lei-wei/pic_bed/main/2022/01/10-09-41-45-Screenshot_20220110_093854-min.jpg\"\n                      title=\"\" alt=\"Screenshot20220110093854minjpg\" width=\"630\"\n                >\n\n<p>那一天发生了什么让我印象深刻的事呢？一年后2022年元旦，我写下了这样的文字：</p>\n<blockquote>\n<p>这一年还是发生了太多事情，就从去年的总结开始说吧。去年跨年的晚上，买了零食回宿舍准备看B站跨年晚会吃零食和朋友聊聊天跨年，可就是突然突然的一刹那，发觉自己孑然一身，孤独涌向了我瞬间淹没了我，简直是透不过气来，身边的人有相聚庆祝的，也有在一起抱团取暖的，可那喧嚣与我无关。拿出手机，线上倒是很热闹，群里都是无所事事的闲聊，私下聊天的都是礼貌的问候，礼貌地保持着距离。也不怪任何人，在这一刻之前我也从没想过要和任何人抱团，一直寻求的是绝对人格独立思想独立的生活，可在这一刻突然领悟到了什么是孤独，什么是内心的空洞。当时就在后悔，为什么不回家呐，家里是可以假装不会孤单的最后的港湾了。当时还有在疑惑，那么多曾经的好朋友，感情是如何慢慢淡下来的呢，平时怎么会忘了找他们联络联络呢，我所追求的这种独立自主绝对理性的状态，是否太沉浸其中了而忽视了很多基础而重要的东西呢？所以写下了这几句话，希望走出自己的局限，希望把忽视的遗忘的都给找回来。如今这一年过去了，好像我还是那个钻牛角尖的我，但似乎不是像之前那么迷茫了。心态逐渐变得平和而坚定，内心多了一些温暖和力量。看吧，是会越来越好的。算是对2021元旦的心路历程记录，和此刻2022元旦的一个回应。</p>\n<p>——写于2022年元旦</p>\n</blockquote>\n<p>今年元旦跨年的时候正被论文烦心着呢，跨啥年啊，偶然发现一年前留下的文字，伴随着的记忆顿时扑面而来，才发现这一年真的大变样了。我自我认知是一个懦弱的理想主义者，这世界和我想的不一样，我也没敢站出来大声反抗，干的最多的也就是在心里跟自己作对而已，不愿妥协，但很多时候不得不妥协，那也得死扛着不愿认输。这一年发生了太多事情冲击到我使我措手不及，有朋友生病遭遇重大变故也不知如何帮助；有朋友突然退学消失，突然就单方面断了联系；也逐渐看清了大人世界的一些残酷的规则，想尽力避开可又不得不去融入。甚至有一段时间我不断追问身边的人：你每天起床的动力是什么？找不到标准答案，更找不到适合我的答案。一年过去了，我还是不知道确切的答案是什么，但这个问题已经不重要了，我还是习惯钻牛角尖的那个人，但心态已经逐渐变得平和，逐渐找到了和世界相处的方式，也更加坚定了我内心不会动摇的东西。长期的失眠状况消失了，没任务安排也能早八起床了，综合这些迹象来看，算是慢慢与自己和解，也与世界和解了。</p>\n<h1 id=\"最后——2022的计划\"><a href=\"#最后——2022的计划\" class=\"headerlink\" title=\"最后——2022的计划\"></a>最后——2022的计划</h1><p>我是一个讨厌立flag的人，但最近从论文的折磨中解脱出来，又恰好临近放假，又好多好多想要做的事情，就在这里列出来，提醒提醒自己。一段时间之后再回来看看哪些做到了，哪些又没做到，就像乘坐时光机回来看看2022年初的我自己，应该也会很有意思。</p>\n<ul>\n<li><p>记录生活，底线是月更，会发在博客：<a href=\"https://leiwei.xyz/\">毛利老弟的博客</a></p>\n</li>\n<li><p>打造自己的知识库，日常积累，地址：<a href=\"https://leiwei.xyz/wiki/\">胖虎的Wiki</a></p>\n</li>\n<li><p>坚持晚十二早八的生物钟</p>\n</li>\n<li><p>健身计划，目标是增重10斤</p>\n</li>\n<li><p>运动计划，精进游泳和羽毛球技术</p>\n</li>\n<li><p>摄影计划，学习技术也记录生活</p>\n</li>\n<li><p>刷算法题，为就业做准备</p>\n</li>\n<li><p>学习计划，论文论文论文论文论文论文</p>\n</li>\n</ul>"},{"title":"没有什么值得我放弃其他所有事情来达到所谓的“竭尽全力”","date":"2022-03-25T15:36:12.000Z","_content":"\n>没有任何一件事情值得放弃其他所有的事情来做到所谓的“竭尽全力”，以“闭关”的方式对待生活本就是一个错误。所以——不如“摆烂”\n\n<!--more-->\n\n## 没有任何事情值得我这样做\n\n一个论文，折磨了我两个月，两个月几乎没做任何其他的事情，睁眼闭眼全是论文，停掉了运动，社团，音乐，那么多的爱好，心思全放在这个上面，就是要急于证明自己，向老师证明，向我自己证明，证明我这段时间做的不是毫无意义，证明我还可以做到。元旦的时候，我脑子里是论文，放假回家，脑子里还是论文。12月中下旬，给做了一次汇报得到了稍微的认可，顿时如释重负，整个人放松下来了，然后过了一天就开始发烧感冒，持续半个月才好；一月下旬，将完成稿交给了老师，又一次如释重负，又一次感冒发烧。第二次我判断是因为流感，我也自认为身体没有那么差受到一点压力就倒，但也意识到自身抵抗力确切收到了非常大的影响，身体在持续发出警报。\n\n1月21号，给老师发完邮件，就彻底放松了下来，开始好好计划假期该怎么做，然后是今天（02月12日），开会讲论文，顿时我就开始胃里犯恶心，心理上和生理上一并强烈抵触，像是逃不掉的梦魇追了上来，压得我喘不过气。我试着排解，但越想越喘不过气，太难受了，太急于得到成果害怕失败，投入太沉重，想的太重要，以至于不知不觉从意识深处开始抵触，心理上一并带动生理上的抵触。\n\n我不能陷得太深了，我很清楚这一点，太过专注，不仅是容易盲目，更容易让人走火入魔。身体频繁出现问题已经是明显的信号了，今天犯恶心也是心里已经有问题了。没有任何一件事情值得放弃其他所以的事情来做，可以很短期的全身心投入，但必须很快抽离开，长时间的，没有任何事情值得，过于执着的时候不知不觉放弃的东西往往更加宝贵。\n\n没录下这次是会议是一大败笔，我将记录下该记录的，然后将论文相关的东西全部封存，等我缓过来了，再去重新面对。\n\n我一直想让自己变得足够专注，看来我对自己还是够狠，一不小心就能走到反面。所有做过的错事，都会在未来的某个时候让你付出代价，逃不掉的。做学术的事是的，奖学金的事也是的。不要偏执，要好好调节，人要顾及的事情那么多，为什么要偏执在那个牛角尖里。\n\n没有任何一件事情值得放弃其他所有的事情来做到所谓的“竭尽全力”，至少论文这件事不应该。\n\n——以上写于2022年02月12日\n\n---\n\n## 盲目\n\n以上是我最近经历的一次痛苦经历，由心理层面上巨大压力，以及生理层面上连续发烧，组成的双重折磨。后来呢，也就如同上面记录的那样，我把电脑中这段时间搞论文的乱七八糟的占了我半个桌面的文件，花了整整一个下午整理成了一个文件夹，然后封存起来，抛之脑后，舒舒服服的过了一个春节，以及节后的半个寒假。再次打开文件夹已经是开学后了，以功利的“写论文”而不是高大上的“做改变世界的研究”的角度，抽出一部分内容在做现在的工作。大部分钻牛角尖的内容到现在我都没动它。\n\n这次经历着实是一次灵魂上的洗礼，它让我开始怀疑我对世界的认识是否正确，对待生活是否太盲目。仔细回顾我对待生活的方式是这样的：绝大部分的事情都有他自己的运行轨迹，对此不去操心不受影响，在人群中我都是不愿意过多显露自己的存在，以避免与不重要的事物或他人产生我无法控制的联系；相反，对于少数我认定的事情，我希望能有所掌控，负责到底。对于现阶段的我来说，个人的学习或者工作就属于后者这一范畴，是没有任何可以推脱的理由的，必须要尽全力去做好以证明自己。\n\n可是事与愿违，我一直以来信奉的策略在这一刻失效了，投入巨量的时间精力但却一直得不到想要的结果，我自己也陷入了自我怀疑之中。这一切值得吗？万一这个事情完成不了呢？万一这件事触及到了我能力的边界，不是靠投入精力就一定能够完成的呢？万一这件事一开始就是错误的，我给自己定了一个错误的目标，钻进了死胡同里呢？我要干什么，做研究还是写论文？做研究是要做出影响世界的成果，写论文只需要过审稿人那一关就行了，区别巨大的的两码事，我的目标好像之前从来没有明确过，只知道盲目努力然后顺其自然等着成果的到来。能有学术追求和梦想固然是好事，但也需要意识到这件事的难度，以及需要做到什么程度，要有心理预期。什么都没有想清楚就盲目浪费自己的精力，用所谓“努力”来感动自己，遇到困难了只知道折腾自己，何必呢。\n\n\n\n## “闭关”状态\n\n从小我父亲对我说过一句话，让我印象很深刻：“学的时候认认真真的学，玩的时候舒舒服服的玩。”，基于此我养成了一个习惯：在学习、工作的时候尽可能的投入和专注，心无旁骛，追求一种类似“入定”的状态，以达到在短时间内尽可能的高效，这个习惯伴随着我的整个学习生涯，在我大学之前的各个时期发挥了巨大的作用。\n\n不同于中学严格的学校管理，大学时期我有了大量可以自己支配的时间，只要完成学业任务就好。因此在考试周或者学期末的时候，在每一门课程考核的前几天，我都会让自己全身心投入到课程复习中去，从早到晚，心无旁骛，可以拖很久才去吃饭，也可以工作到深夜。这几天会不停的刷题，背诵考点资料，亦或是学完一本书，只为了一个目标——尽可能在考试上多得一些分数，考完就把一切抛之脑后。我把这种做法称之为“闭关”，很形象对吧。\n\n闭关是我学生时代常用的一种手段，帮助我度过了各种考试，发展到顶峰是考研阶段。那是我迄今最为彻底的一次闭关，时间持续很长。我只记得当时压力很大，我把电脑放回了家里，杜绝了几乎一切娱乐，每天醒来洗漱完就去投入其中，晚上睡前最后一件事是把看完的笔记放进书包。当时我就感叹：像这样全世界都不会有任何事情来打扰我，让我这么长时间内完全专心于一件事情的阶段，可能这辈子都不会再有第二次了。虽然心态崩过一段时间，我也将它当作修行历练，最后只觉得苦尽甘来。\n\n到了读研阶段，没有很明确的说我该做什么，只是有一个大致的方向，我就顺着这个方向一头扎进学习工作之中。随着时间和精力的大量投入，产出却寥寥无几，压力也就随之而来。我想着，付出终究会是有收获的，持续高强度的投入最后一定会有好的产出。可随着时间的推移，这种状态逐渐快要支撑不住了，我才猛然发现，我这是在“闭关”吗？持续多长时间了，又错过了多少事情。我才明白，不是所有事情都像早期的学习生涯那样，有一个明显的时间界限，时间到了考完试就会结束；也不是所有事情都像早期的学习生涯那样铺好了路，只要努力走就会得到结果。闭关不是在所有地方都适用。就像这次，猛然发现自己陷在一件事情上太久了，不知道这样的付出值不值得，更不知道这段时间自己错过了什么，想想以后人生的路都要自己选，没有绝对正确的路，也没有“考试”这种阶段性的警醒，若是不知不觉将闭关状态作为了人生的主旋律，那必然是一件可怕的事情，老想着等我XXX完成了我就去做XXX，不知不觉给了自己太多逃避的借口，只会留下数不清的遗憾。\n\n## “摆烂”的智慧\n\n在我十八岁的时候，除了可以拿身份证进网吧之外，我并没有感受太多到“长大了”带来的“自己可以做主”的兴奋感，反而有些不知所措，好像可以选择去做很多事情，但又好像都不是那么容易，也没有很大的必要。到了现在，我更是感受到“自己的路要自己走”的含义，时时刻刻都得做出无关对错的、尽力在日后不会感到后悔的选择，像闭关这样“盲目的沉浸在有限的事情上”的状态，越少越好。\n\n联想到最近看的很喜欢的一个B站视频，其中有一段对话是这样的：\n\n>老蒋：你跟我不一样你有很多身份，作家、网红up主等等，你的主身份是什么？  \n\n>仲尼：我同时是父亲，是丈夫，是我妈的儿子，这些所有的构成了一个完整的球体的我，所以我觉得没有一个单词可以定义我是谁，有时候我自己都不知道我是谁。\n\n>老蒋：你这样不定一个主身份，是为什么？\n\n>仲尼：任何人只要定了自己的主身份之后，他就有可能把其他的可能性给捏死了，我就是个活着的人……\n\n>老蒋：那你很自信，你觉得自己可以同时做好这几个事情。\n\n>仲尼：我没有一件事情做的好，你看我做up主也不上不下，我写的书也卖不怎么好啊，然后我做父亲还被老师投诉了，我老婆呢还经常不理我，但是同时呢，我还是这几件事必须同事去做。\n\n>老蒋：你不会想着，既然这样的话集中精力把其中一个事干好吗？\n\n>仲尼：那我其他事情不就完蛋了？\n\n>（网友：顶级摆烂hhh）\n\n原视频点击 [链接](https://www.bilibili.com/video/BV13q4y1F7Ja?share_source=copy_web)\n\n没有主次之分的需要做的事情是做不完的，未来的事情也是永远在变化的，不如别想太多（~~开始摆烂~~），别太为难自己，去拥抱生活吧。\n\n\n\n\nthe end\n\n\n---\n\n\n","source":"_posts/没有什么值得我放其其他所有事情来达到所谓的“竭尽全力”.md","raw":"---\ntitle: 没有什么值得我放弃其他所有事情来达到所谓的“竭尽全力”\ndate: 2022-03-25 23:36:12\ntags: \n    - 总结\n    - 心路\ncategories: \n    - 记录\n---\n\n>没有任何一件事情值得放弃其他所有的事情来做到所谓的“竭尽全力”，以“闭关”的方式对待生活本就是一个错误。所以——不如“摆烂”\n\n<!--more-->\n\n## 没有任何事情值得我这样做\n\n一个论文，折磨了我两个月，两个月几乎没做任何其他的事情，睁眼闭眼全是论文，停掉了运动，社团，音乐，那么多的爱好，心思全放在这个上面，就是要急于证明自己，向老师证明，向我自己证明，证明我这段时间做的不是毫无意义，证明我还可以做到。元旦的时候，我脑子里是论文，放假回家，脑子里还是论文。12月中下旬，给做了一次汇报得到了稍微的认可，顿时如释重负，整个人放松下来了，然后过了一天就开始发烧感冒，持续半个月才好；一月下旬，将完成稿交给了老师，又一次如释重负，又一次感冒发烧。第二次我判断是因为流感，我也自认为身体没有那么差受到一点压力就倒，但也意识到自身抵抗力确切收到了非常大的影响，身体在持续发出警报。\n\n1月21号，给老师发完邮件，就彻底放松了下来，开始好好计划假期该怎么做，然后是今天（02月12日），开会讲论文，顿时我就开始胃里犯恶心，心理上和生理上一并强烈抵触，像是逃不掉的梦魇追了上来，压得我喘不过气。我试着排解，但越想越喘不过气，太难受了，太急于得到成果害怕失败，投入太沉重，想的太重要，以至于不知不觉从意识深处开始抵触，心理上一并带动生理上的抵触。\n\n我不能陷得太深了，我很清楚这一点，太过专注，不仅是容易盲目，更容易让人走火入魔。身体频繁出现问题已经是明显的信号了，今天犯恶心也是心里已经有问题了。没有任何一件事情值得放弃其他所以的事情来做，可以很短期的全身心投入，但必须很快抽离开，长时间的，没有任何事情值得，过于执着的时候不知不觉放弃的东西往往更加宝贵。\n\n没录下这次是会议是一大败笔，我将记录下该记录的，然后将论文相关的东西全部封存，等我缓过来了，再去重新面对。\n\n我一直想让自己变得足够专注，看来我对自己还是够狠，一不小心就能走到反面。所有做过的错事，都会在未来的某个时候让你付出代价，逃不掉的。做学术的事是的，奖学金的事也是的。不要偏执，要好好调节，人要顾及的事情那么多，为什么要偏执在那个牛角尖里。\n\n没有任何一件事情值得放弃其他所有的事情来做到所谓的“竭尽全力”，至少论文这件事不应该。\n\n——以上写于2022年02月12日\n\n---\n\n## 盲目\n\n以上是我最近经历的一次痛苦经历，由心理层面上巨大压力，以及生理层面上连续发烧，组成的双重折磨。后来呢，也就如同上面记录的那样，我把电脑中这段时间搞论文的乱七八糟的占了我半个桌面的文件，花了整整一个下午整理成了一个文件夹，然后封存起来，抛之脑后，舒舒服服的过了一个春节，以及节后的半个寒假。再次打开文件夹已经是开学后了，以功利的“写论文”而不是高大上的“做改变世界的研究”的角度，抽出一部分内容在做现在的工作。大部分钻牛角尖的内容到现在我都没动它。\n\n这次经历着实是一次灵魂上的洗礼，它让我开始怀疑我对世界的认识是否正确，对待生活是否太盲目。仔细回顾我对待生活的方式是这样的：绝大部分的事情都有他自己的运行轨迹，对此不去操心不受影响，在人群中我都是不愿意过多显露自己的存在，以避免与不重要的事物或他人产生我无法控制的联系；相反，对于少数我认定的事情，我希望能有所掌控，负责到底。对于现阶段的我来说，个人的学习或者工作就属于后者这一范畴，是没有任何可以推脱的理由的，必须要尽全力去做好以证明自己。\n\n可是事与愿违，我一直以来信奉的策略在这一刻失效了，投入巨量的时间精力但却一直得不到想要的结果，我自己也陷入了自我怀疑之中。这一切值得吗？万一这个事情完成不了呢？万一这件事触及到了我能力的边界，不是靠投入精力就一定能够完成的呢？万一这件事一开始就是错误的，我给自己定了一个错误的目标，钻进了死胡同里呢？我要干什么，做研究还是写论文？做研究是要做出影响世界的成果，写论文只需要过审稿人那一关就行了，区别巨大的的两码事，我的目标好像之前从来没有明确过，只知道盲目努力然后顺其自然等着成果的到来。能有学术追求和梦想固然是好事，但也需要意识到这件事的难度，以及需要做到什么程度，要有心理预期。什么都没有想清楚就盲目浪费自己的精力，用所谓“努力”来感动自己，遇到困难了只知道折腾自己，何必呢。\n\n\n\n## “闭关”状态\n\n从小我父亲对我说过一句话，让我印象很深刻：“学的时候认认真真的学，玩的时候舒舒服服的玩。”，基于此我养成了一个习惯：在学习、工作的时候尽可能的投入和专注，心无旁骛，追求一种类似“入定”的状态，以达到在短时间内尽可能的高效，这个习惯伴随着我的整个学习生涯，在我大学之前的各个时期发挥了巨大的作用。\n\n不同于中学严格的学校管理，大学时期我有了大量可以自己支配的时间，只要完成学业任务就好。因此在考试周或者学期末的时候，在每一门课程考核的前几天，我都会让自己全身心投入到课程复习中去，从早到晚，心无旁骛，可以拖很久才去吃饭，也可以工作到深夜。这几天会不停的刷题，背诵考点资料，亦或是学完一本书，只为了一个目标——尽可能在考试上多得一些分数，考完就把一切抛之脑后。我把这种做法称之为“闭关”，很形象对吧。\n\n闭关是我学生时代常用的一种手段，帮助我度过了各种考试，发展到顶峰是考研阶段。那是我迄今最为彻底的一次闭关，时间持续很长。我只记得当时压力很大，我把电脑放回了家里，杜绝了几乎一切娱乐，每天醒来洗漱完就去投入其中，晚上睡前最后一件事是把看完的笔记放进书包。当时我就感叹：像这样全世界都不会有任何事情来打扰我，让我这么长时间内完全专心于一件事情的阶段，可能这辈子都不会再有第二次了。虽然心态崩过一段时间，我也将它当作修行历练，最后只觉得苦尽甘来。\n\n到了读研阶段，没有很明确的说我该做什么，只是有一个大致的方向，我就顺着这个方向一头扎进学习工作之中。随着时间和精力的大量投入，产出却寥寥无几，压力也就随之而来。我想着，付出终究会是有收获的，持续高强度的投入最后一定会有好的产出。可随着时间的推移，这种状态逐渐快要支撑不住了，我才猛然发现，我这是在“闭关”吗？持续多长时间了，又错过了多少事情。我才明白，不是所有事情都像早期的学习生涯那样，有一个明显的时间界限，时间到了考完试就会结束；也不是所有事情都像早期的学习生涯那样铺好了路，只要努力走就会得到结果。闭关不是在所有地方都适用。就像这次，猛然发现自己陷在一件事情上太久了，不知道这样的付出值不值得，更不知道这段时间自己错过了什么，想想以后人生的路都要自己选，没有绝对正确的路，也没有“考试”这种阶段性的警醒，若是不知不觉将闭关状态作为了人生的主旋律，那必然是一件可怕的事情，老想着等我XXX完成了我就去做XXX，不知不觉给了自己太多逃避的借口，只会留下数不清的遗憾。\n\n## “摆烂”的智慧\n\n在我十八岁的时候，除了可以拿身份证进网吧之外，我并没有感受太多到“长大了”带来的“自己可以做主”的兴奋感，反而有些不知所措，好像可以选择去做很多事情，但又好像都不是那么容易，也没有很大的必要。到了现在，我更是感受到“自己的路要自己走”的含义，时时刻刻都得做出无关对错的、尽力在日后不会感到后悔的选择，像闭关这样“盲目的沉浸在有限的事情上”的状态，越少越好。\n\n联想到最近看的很喜欢的一个B站视频，其中有一段对话是这样的：\n\n>老蒋：你跟我不一样你有很多身份，作家、网红up主等等，你的主身份是什么？  \n\n>仲尼：我同时是父亲，是丈夫，是我妈的儿子，这些所有的构成了一个完整的球体的我，所以我觉得没有一个单词可以定义我是谁，有时候我自己都不知道我是谁。\n\n>老蒋：你这样不定一个主身份，是为什么？\n\n>仲尼：任何人只要定了自己的主身份之后，他就有可能把其他的可能性给捏死了，我就是个活着的人……\n\n>老蒋：那你很自信，你觉得自己可以同时做好这几个事情。\n\n>仲尼：我没有一件事情做的好，你看我做up主也不上不下，我写的书也卖不怎么好啊，然后我做父亲还被老师投诉了，我老婆呢还经常不理我，但是同时呢，我还是这几件事必须同事去做。\n\n>老蒋：你不会想着，既然这样的话集中精力把其中一个事干好吗？\n\n>仲尼：那我其他事情不就完蛋了？\n\n>（网友：顶级摆烂hhh）\n\n原视频点击 [链接](https://www.bilibili.com/video/BV13q4y1F7Ja?share_source=copy_web)\n\n没有主次之分的需要做的事情是做不完的，未来的事情也是永远在变化的，不如别想太多（~~开始摆烂~~），别太为难自己，去拥抱生活吧。\n\n\n\n\nthe end\n\n\n---\n\n\n","slug":"没有什么值得我放其其他所有事情来达到所谓的“竭尽全力”","published":1,"updated":"2022-08-25T08:42:08.411Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl792rm1l001etkin8rtk8w5n","content":"<blockquote>\n<p>没有任何一件事情值得放弃其他所有的事情来做到所谓的“竭尽全力”，以“闭关”的方式对待生活本就是一个错误。所以——不如“摆烂”</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<h2 id=\"没有任何事情值得我这样做\"><a href=\"#没有任何事情值得我这样做\" class=\"headerlink\" title=\"没有任何事情值得我这样做\"></a>没有任何事情值得我这样做</h2><p>一个论文，折磨了我两个月，两个月几乎没做任何其他的事情，睁眼闭眼全是论文，停掉了运动，社团，音乐，那么多的爱好，心思全放在这个上面，就是要急于证明自己，向老师证明，向我自己证明，证明我这段时间做的不是毫无意义，证明我还可以做到。元旦的时候，我脑子里是论文，放假回家，脑子里还是论文。12月中下旬，给做了一次汇报得到了稍微的认可，顿时如释重负，整个人放松下来了，然后过了一天就开始发烧感冒，持续半个月才好；一月下旬，将完成稿交给了老师，又一次如释重负，又一次感冒发烧。第二次我判断是因为流感，我也自认为身体没有那么差受到一点压力就倒，但也意识到自身抵抗力确切收到了非常大的影响，身体在持续发出警报。</p>\n<p>1月21号，给老师发完邮件，就彻底放松了下来，开始好好计划假期该怎么做，然后是今天（02月12日），开会讲论文，顿时我就开始胃里犯恶心，心理上和生理上一并强烈抵触，像是逃不掉的梦魇追了上来，压得我喘不过气。我试着排解，但越想越喘不过气，太难受了，太急于得到成果害怕失败，投入太沉重，想的太重要，以至于不知不觉从意识深处开始抵触，心理上一并带动生理上的抵触。</p>\n<p>我不能陷得太深了，我很清楚这一点，太过专注，不仅是容易盲目，更容易让人走火入魔。身体频繁出现问题已经是明显的信号了，今天犯恶心也是心里已经有问题了。没有任何一件事情值得放弃其他所以的事情来做，可以很短期的全身心投入，但必须很快抽离开，长时间的，没有任何事情值得，过于执着的时候不知不觉放弃的东西往往更加宝贵。</p>\n<p>没录下这次是会议是一大败笔，我将记录下该记录的，然后将论文相关的东西全部封存，等我缓过来了，再去重新面对。</p>\n<p>我一直想让自己变得足够专注，看来我对自己还是够狠，一不小心就能走到反面。所有做过的错事，都会在未来的某个时候让你付出代价，逃不掉的。做学术的事是的，奖学金的事也是的。不要偏执，要好好调节，人要顾及的事情那么多，为什么要偏执在那个牛角尖里。</p>\n<p>没有任何一件事情值得放弃其他所有的事情来做到所谓的“竭尽全力”，至少论文这件事不应该。</p>\n<p>——以上写于2022年02月12日</p>\n<hr>\n<h2 id=\"盲目\"><a href=\"#盲目\" class=\"headerlink\" title=\"盲目\"></a>盲目</h2><p>以上是我最近经历的一次痛苦经历，由心理层面上巨大压力，以及生理层面上连续发烧，组成的双重折磨。后来呢，也就如同上面记录的那样，我把电脑中这段时间搞论文的乱七八糟的占了我半个桌面的文件，花了整整一个下午整理成了一个文件夹，然后封存起来，抛之脑后，舒舒服服的过了一个春节，以及节后的半个寒假。再次打开文件夹已经是开学后了，以功利的“写论文”而不是高大上的“做改变世界的研究”的角度，抽出一部分内容在做现在的工作。大部分钻牛角尖的内容到现在我都没动它。</p>\n<p>这次经历着实是一次灵魂上的洗礼，它让我开始怀疑我对世界的认识是否正确，对待生活是否太盲目。仔细回顾我对待生活的方式是这样的：绝大部分的事情都有他自己的运行轨迹，对此不去操心不受影响，在人群中我都是不愿意过多显露自己的存在，以避免与不重要的事物或他人产生我无法控制的联系；相反，对于少数我认定的事情，我希望能有所掌控，负责到底。对于现阶段的我来说，个人的学习或者工作就属于后者这一范畴，是没有任何可以推脱的理由的，必须要尽全力去做好以证明自己。</p>\n<p>可是事与愿违，我一直以来信奉的策略在这一刻失效了，投入巨量的时间精力但却一直得不到想要的结果，我自己也陷入了自我怀疑之中。这一切值得吗？万一这个事情完成不了呢？万一这件事触及到了我能力的边界，不是靠投入精力就一定能够完成的呢？万一这件事一开始就是错误的，我给自己定了一个错误的目标，钻进了死胡同里呢？我要干什么，做研究还是写论文？做研究是要做出影响世界的成果，写论文只需要过审稿人那一关就行了，区别巨大的的两码事，我的目标好像之前从来没有明确过，只知道盲目努力然后顺其自然等着成果的到来。能有学术追求和梦想固然是好事，但也需要意识到这件事的难度，以及需要做到什么程度，要有心理预期。什么都没有想清楚就盲目浪费自己的精力，用所谓“努力”来感动自己，遇到困难了只知道折腾自己，何必呢。</p>\n<h2 id=\"“闭关”状态\"><a href=\"#“闭关”状态\" class=\"headerlink\" title=\"“闭关”状态\"></a>“闭关”状态</h2><p>从小我父亲对我说过一句话，让我印象很深刻：“学的时候认认真真的学，玩的时候舒舒服服的玩。”，基于此我养成了一个习惯：在学习、工作的时候尽可能的投入和专注，心无旁骛，追求一种类似“入定”的状态，以达到在短时间内尽可能的高效，这个习惯伴随着我的整个学习生涯，在我大学之前的各个时期发挥了巨大的作用。</p>\n<p>不同于中学严格的学校管理，大学时期我有了大量可以自己支配的时间，只要完成学业任务就好。因此在考试周或者学期末的时候，在每一门课程考核的前几天，我都会让自己全身心投入到课程复习中去，从早到晚，心无旁骛，可以拖很久才去吃饭，也可以工作到深夜。这几天会不停的刷题，背诵考点资料，亦或是学完一本书，只为了一个目标——尽可能在考试上多得一些分数，考完就把一切抛之脑后。我把这种做法称之为“闭关”，很形象对吧。</p>\n<p>闭关是我学生时代常用的一种手段，帮助我度过了各种考试，发展到顶峰是考研阶段。那是我迄今最为彻底的一次闭关，时间持续很长。我只记得当时压力很大，我把电脑放回了家里，杜绝了几乎一切娱乐，每天醒来洗漱完就去投入其中，晚上睡前最后一件事是把看完的笔记放进书包。当时我就感叹：像这样全世界都不会有任何事情来打扰我，让我这么长时间内完全专心于一件事情的阶段，可能这辈子都不会再有第二次了。虽然心态崩过一段时间，我也将它当作修行历练，最后只觉得苦尽甘来。</p>\n<p>到了读研阶段，没有很明确的说我该做什么，只是有一个大致的方向，我就顺着这个方向一头扎进学习工作之中。随着时间和精力的大量投入，产出却寥寥无几，压力也就随之而来。我想着，付出终究会是有收获的，持续高强度的投入最后一定会有好的产出。可随着时间的推移，这种状态逐渐快要支撑不住了，我才猛然发现，我这是在“闭关”吗？持续多长时间了，又错过了多少事情。我才明白，不是所有事情都像早期的学习生涯那样，有一个明显的时间界限，时间到了考完试就会结束；也不是所有事情都像早期的学习生涯那样铺好了路，只要努力走就会得到结果。闭关不是在所有地方都适用。就像这次，猛然发现自己陷在一件事情上太久了，不知道这样的付出值不值得，更不知道这段时间自己错过了什么，想想以后人生的路都要自己选，没有绝对正确的路，也没有“考试”这种阶段性的警醒，若是不知不觉将闭关状态作为了人生的主旋律，那必然是一件可怕的事情，老想着等我XXX完成了我就去做XXX，不知不觉给了自己太多逃避的借口，只会留下数不清的遗憾。</p>\n<h2 id=\"“摆烂”的智慧\"><a href=\"#“摆烂”的智慧\" class=\"headerlink\" title=\"“摆烂”的智慧\"></a>“摆烂”的智慧</h2><p>在我十八岁的时候，除了可以拿身份证进网吧之外，我并没有感受太多到“长大了”带来的“自己可以做主”的兴奋感，反而有些不知所措，好像可以选择去做很多事情，但又好像都不是那么容易，也没有很大的必要。到了现在，我更是感受到“自己的路要自己走”的含义，时时刻刻都得做出无关对错的、尽力在日后不会感到后悔的选择，像闭关这样“盲目的沉浸在有限的事情上”的状态，越少越好。</p>\n<p>联想到最近看的很喜欢的一个B站视频，其中有一段对话是这样的：</p>\n<blockquote>\n<p>老蒋：你跟我不一样你有很多身份，作家、网红up主等等，你的主身份是什么？  </p>\n</blockquote>\n<blockquote>\n<p>仲尼：我同时是父亲，是丈夫，是我妈的儿子，这些所有的构成了一个完整的球体的我，所以我觉得没有一个单词可以定义我是谁，有时候我自己都不知道我是谁。</p>\n</blockquote>\n<blockquote>\n<p>老蒋：你这样不定一个主身份，是为什么？</p>\n</blockquote>\n<blockquote>\n<p>仲尼：任何人只要定了自己的主身份之后，他就有可能把其他的可能性给捏死了，我就是个活着的人……</p>\n</blockquote>\n<blockquote>\n<p>老蒋：那你很自信，你觉得自己可以同时做好这几个事情。</p>\n</blockquote>\n<blockquote>\n<p>仲尼：我没有一件事情做的好，你看我做up主也不上不下，我写的书也卖不怎么好啊，然后我做父亲还被老师投诉了，我老婆呢还经常不理我，但是同时呢，我还是这几件事必须同事去做。</p>\n</blockquote>\n<blockquote>\n<p>老蒋：你不会想着，既然这样的话集中精力把其中一个事干好吗？</p>\n</blockquote>\n<blockquote>\n<p>仲尼：那我其他事情不就完蛋了？</p>\n</blockquote>\n<blockquote>\n<p>（网友：顶级摆烂hhh）</p>\n</blockquote>\n<p>原视频点击 <a class=\"link\"   href=\"https://www.bilibili.com/video/BV13q4y1F7Ja?share_source=copy_web\" >链接<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>没有主次之分的需要做的事情是做不完的，未来的事情也是永远在变化的，不如别想太多（<del>开始摆烂</del>），别太为难自己，去拥抱生活吧。</p>\n<p>the end</p>\n<hr>\n","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"<blockquote>\n<p>没有任何一件事情值得放弃其他所有的事情来做到所谓的“竭尽全力”，以“闭关”的方式对待生活本就是一个错误。所以——不如“摆烂”</p>\n</blockquote>","more":"<h2 id=\"没有任何事情值得我这样做\"><a href=\"#没有任何事情值得我这样做\" class=\"headerlink\" title=\"没有任何事情值得我这样做\"></a>没有任何事情值得我这样做</h2><p>一个论文，折磨了我两个月，两个月几乎没做任何其他的事情，睁眼闭眼全是论文，停掉了运动，社团，音乐，那么多的爱好，心思全放在这个上面，就是要急于证明自己，向老师证明，向我自己证明，证明我这段时间做的不是毫无意义，证明我还可以做到。元旦的时候，我脑子里是论文，放假回家，脑子里还是论文。12月中下旬，给做了一次汇报得到了稍微的认可，顿时如释重负，整个人放松下来了，然后过了一天就开始发烧感冒，持续半个月才好；一月下旬，将完成稿交给了老师，又一次如释重负，又一次感冒发烧。第二次我判断是因为流感，我也自认为身体没有那么差受到一点压力就倒，但也意识到自身抵抗力确切收到了非常大的影响，身体在持续发出警报。</p>\n<p>1月21号，给老师发完邮件，就彻底放松了下来，开始好好计划假期该怎么做，然后是今天（02月12日），开会讲论文，顿时我就开始胃里犯恶心，心理上和生理上一并强烈抵触，像是逃不掉的梦魇追了上来，压得我喘不过气。我试着排解，但越想越喘不过气，太难受了，太急于得到成果害怕失败，投入太沉重，想的太重要，以至于不知不觉从意识深处开始抵触，心理上一并带动生理上的抵触。</p>\n<p>我不能陷得太深了，我很清楚这一点，太过专注，不仅是容易盲目，更容易让人走火入魔。身体频繁出现问题已经是明显的信号了，今天犯恶心也是心里已经有问题了。没有任何一件事情值得放弃其他所以的事情来做，可以很短期的全身心投入，但必须很快抽离开，长时间的，没有任何事情值得，过于执着的时候不知不觉放弃的东西往往更加宝贵。</p>\n<p>没录下这次是会议是一大败笔，我将记录下该记录的，然后将论文相关的东西全部封存，等我缓过来了，再去重新面对。</p>\n<p>我一直想让自己变得足够专注，看来我对自己还是够狠，一不小心就能走到反面。所有做过的错事，都会在未来的某个时候让你付出代价，逃不掉的。做学术的事是的，奖学金的事也是的。不要偏执，要好好调节，人要顾及的事情那么多，为什么要偏执在那个牛角尖里。</p>\n<p>没有任何一件事情值得放弃其他所有的事情来做到所谓的“竭尽全力”，至少论文这件事不应该。</p>\n<p>——以上写于2022年02月12日</p>\n<hr>\n<h2 id=\"盲目\"><a href=\"#盲目\" class=\"headerlink\" title=\"盲目\"></a>盲目</h2><p>以上是我最近经历的一次痛苦经历，由心理层面上巨大压力，以及生理层面上连续发烧，组成的双重折磨。后来呢，也就如同上面记录的那样，我把电脑中这段时间搞论文的乱七八糟的占了我半个桌面的文件，花了整整一个下午整理成了一个文件夹，然后封存起来，抛之脑后，舒舒服服的过了一个春节，以及节后的半个寒假。再次打开文件夹已经是开学后了，以功利的“写论文”而不是高大上的“做改变世界的研究”的角度，抽出一部分内容在做现在的工作。大部分钻牛角尖的内容到现在我都没动它。</p>\n<p>这次经历着实是一次灵魂上的洗礼，它让我开始怀疑我对世界的认识是否正确，对待生活是否太盲目。仔细回顾我对待生活的方式是这样的：绝大部分的事情都有他自己的运行轨迹，对此不去操心不受影响，在人群中我都是不愿意过多显露自己的存在，以避免与不重要的事物或他人产生我无法控制的联系；相反，对于少数我认定的事情，我希望能有所掌控，负责到底。对于现阶段的我来说，个人的学习或者工作就属于后者这一范畴，是没有任何可以推脱的理由的，必须要尽全力去做好以证明自己。</p>\n<p>可是事与愿违，我一直以来信奉的策略在这一刻失效了，投入巨量的时间精力但却一直得不到想要的结果，我自己也陷入了自我怀疑之中。这一切值得吗？万一这个事情完成不了呢？万一这件事触及到了我能力的边界，不是靠投入精力就一定能够完成的呢？万一这件事一开始就是错误的，我给自己定了一个错误的目标，钻进了死胡同里呢？我要干什么，做研究还是写论文？做研究是要做出影响世界的成果，写论文只需要过审稿人那一关就行了，区别巨大的的两码事，我的目标好像之前从来没有明确过，只知道盲目努力然后顺其自然等着成果的到来。能有学术追求和梦想固然是好事，但也需要意识到这件事的难度，以及需要做到什么程度，要有心理预期。什么都没有想清楚就盲目浪费自己的精力，用所谓“努力”来感动自己，遇到困难了只知道折腾自己，何必呢。</p>\n<h2 id=\"“闭关”状态\"><a href=\"#“闭关”状态\" class=\"headerlink\" title=\"“闭关”状态\"></a>“闭关”状态</h2><p>从小我父亲对我说过一句话，让我印象很深刻：“学的时候认认真真的学，玩的时候舒舒服服的玩。”，基于此我养成了一个习惯：在学习、工作的时候尽可能的投入和专注，心无旁骛，追求一种类似“入定”的状态，以达到在短时间内尽可能的高效，这个习惯伴随着我的整个学习生涯，在我大学之前的各个时期发挥了巨大的作用。</p>\n<p>不同于中学严格的学校管理，大学时期我有了大量可以自己支配的时间，只要完成学业任务就好。因此在考试周或者学期末的时候，在每一门课程考核的前几天，我都会让自己全身心投入到课程复习中去，从早到晚，心无旁骛，可以拖很久才去吃饭，也可以工作到深夜。这几天会不停的刷题，背诵考点资料，亦或是学完一本书，只为了一个目标——尽可能在考试上多得一些分数，考完就把一切抛之脑后。我把这种做法称之为“闭关”，很形象对吧。</p>\n<p>闭关是我学生时代常用的一种手段，帮助我度过了各种考试，发展到顶峰是考研阶段。那是我迄今最为彻底的一次闭关，时间持续很长。我只记得当时压力很大，我把电脑放回了家里，杜绝了几乎一切娱乐，每天醒来洗漱完就去投入其中，晚上睡前最后一件事是把看完的笔记放进书包。当时我就感叹：像这样全世界都不会有任何事情来打扰我，让我这么长时间内完全专心于一件事情的阶段，可能这辈子都不会再有第二次了。虽然心态崩过一段时间，我也将它当作修行历练，最后只觉得苦尽甘来。</p>\n<p>到了读研阶段，没有很明确的说我该做什么，只是有一个大致的方向，我就顺着这个方向一头扎进学习工作之中。随着时间和精力的大量投入，产出却寥寥无几，压力也就随之而来。我想着，付出终究会是有收获的，持续高强度的投入最后一定会有好的产出。可随着时间的推移，这种状态逐渐快要支撑不住了，我才猛然发现，我这是在“闭关”吗？持续多长时间了，又错过了多少事情。我才明白，不是所有事情都像早期的学习生涯那样，有一个明显的时间界限，时间到了考完试就会结束；也不是所有事情都像早期的学习生涯那样铺好了路，只要努力走就会得到结果。闭关不是在所有地方都适用。就像这次，猛然发现自己陷在一件事情上太久了，不知道这样的付出值不值得，更不知道这段时间自己错过了什么，想想以后人生的路都要自己选，没有绝对正确的路，也没有“考试”这种阶段性的警醒，若是不知不觉将闭关状态作为了人生的主旋律，那必然是一件可怕的事情，老想着等我XXX完成了我就去做XXX，不知不觉给了自己太多逃避的借口，只会留下数不清的遗憾。</p>\n<h2 id=\"“摆烂”的智慧\"><a href=\"#“摆烂”的智慧\" class=\"headerlink\" title=\"“摆烂”的智慧\"></a>“摆烂”的智慧</h2><p>在我十八岁的时候，除了可以拿身份证进网吧之外，我并没有感受太多到“长大了”带来的“自己可以做主”的兴奋感，反而有些不知所措，好像可以选择去做很多事情，但又好像都不是那么容易，也没有很大的必要。到了现在，我更是感受到“自己的路要自己走”的含义，时时刻刻都得做出无关对错的、尽力在日后不会感到后悔的选择，像闭关这样“盲目的沉浸在有限的事情上”的状态，越少越好。</p>\n<p>联想到最近看的很喜欢的一个B站视频，其中有一段对话是这样的：</p>\n<blockquote>\n<p>老蒋：你跟我不一样你有很多身份，作家、网红up主等等，你的主身份是什么？  </p>\n</blockquote>\n<blockquote>\n<p>仲尼：我同时是父亲，是丈夫，是我妈的儿子，这些所有的构成了一个完整的球体的我，所以我觉得没有一个单词可以定义我是谁，有时候我自己都不知道我是谁。</p>\n</blockquote>\n<blockquote>\n<p>老蒋：你这样不定一个主身份，是为什么？</p>\n</blockquote>\n<blockquote>\n<p>仲尼：任何人只要定了自己的主身份之后，他就有可能把其他的可能性给捏死了，我就是个活着的人……</p>\n</blockquote>\n<blockquote>\n<p>老蒋：那你很自信，你觉得自己可以同时做好这几个事情。</p>\n</blockquote>\n<blockquote>\n<p>仲尼：我没有一件事情做的好，你看我做up主也不上不下，我写的书也卖不怎么好啊，然后我做父亲还被老师投诉了，我老婆呢还经常不理我，但是同时呢，我还是这几件事必须同事去做。</p>\n</blockquote>\n<blockquote>\n<p>老蒋：你不会想着，既然这样的话集中精力把其中一个事干好吗？</p>\n</blockquote>\n<blockquote>\n<p>仲尼：那我其他事情不就完蛋了？</p>\n</blockquote>\n<blockquote>\n<p>（网友：顶级摆烂hhh）</p>\n</blockquote>\n<p>原视频点击 <a class=\"link\"   href=\"https://www.bilibili.com/video/BV13q4y1F7Ja?share_source=copy_web\" >链接<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>没有主次之分的需要做的事情是做不完的，未来的事情也是永远在变化的，不如别想太多（<del>开始摆烂</del>），别太为难自己，去拥抱生活吧。</p>\n<p>the end</p>\n<hr>"},{"title":"随笔","date":"2022-08-25T09:13:30.000Z","_content":"\n> 很多软件，在输入内容之前，必须给文档取一个标题。他们不懂思考的自由。\n\n> 事已至此，那为何会至此？要是想不起来那感觉可太糟了。\n\n是时候重启博客了，\n\n<!--more-->\n\n# 20220823随想节选\n\n这是第一篇尝试在Effie上写作的文档。\n\n写什么呢？还没想好，不是没内容，而是脑子里的内容太多了，一下子有好几个主题交替在我脑子里闪现出来，却每个都不够完善，不能一气呵成写完，那就罢了，随便写写先。\n\n\n\n先写一个备忘录：手指甲该剪掉了。本想留到弹吉他的，但太长让打字很困难，一旦打字的速度跟不上思维漫游的速度，需要让思绪等待手指把特定的几个字打完，思绪就会集中到那固定的几个字上，只会打断了随想的过程。写这种东西，语言是否精炼、用词是否准确都是次要的，连贯地，一边随想一边写成纸质档整理，从而能够接着随想，这种连贯性才是最重要的，能够把脑子里一直盘旋的东西一点点梳理出来，就像一团杂乱的线条，随便抓住一端，一点点拉出来固定住，最终就会得到一条整理好的线。思绪也就是这样清晰了。\n\n\n\n我就是脑子里的东西太多，或者说是盘旋的东西太多，太活跃，让我感觉内耗严重。而且由于一直在盘旋扰动着我的精力，导致的就是“不良多工”，也做不好其他的事情。写文字，也就是随想着把脑子里想着的很乱的东西尝试用文字整理输出，拿出来摆到眼前固定住了，就能让脑子空一些。之前内耗非常严重失眠到很严重的时候，这个方法尝试过很有效，虽然后面没坚持就是了。\n\n\n\n\n\n现在写文字，除了上面说的问题之外，还要一个重要的原因是：人是会遗忘的。我常常在某个时候，路走得非常不顺直至有些怀疑这条道路是否正确，此时我再回头去看我是如何走上这条路的，竟大多时候都是含糊不清的，好像无数个偶然让我随机地这样做了，又好像每个看似偶然，实际上都是当时情景下我所作出的必然结果，又好像，我当时是有一个想法，但是之后便忘了。总之，我意识到过去总是容易含糊不清，因此我对当下的路开始不确信，难以坚定地走向未来。所以写一些什么东西吧，记录下来，随便记录记录就好，因为我此刻写下的每一个看似随意的文字，背后蕴含的都是我此刻潜意识里的真实想法，反而是一种非刻意而为的流露真实的方式。就这样写吧，时不时维护一下让它能保存下来，再根据内容取一个标题，记录上时间，等某个未来我感到迷茫的时候，能够通过这样的文字去追寻，透过文字跟此刻的我进行跨时空的灵魂的交流，告诉那时的我，我此刻的内心是怎样的，不要走着走着迷失了。\n\n> **事已至此，那为何会至此？要是想不起来那感觉可太糟了**。\n\n\n\n\n\n总结来说就是一句话：不忘初心。我一直在践行这句话，不要忘了自己是谁，不要突然有一天后悔自己是何时走上了岔路，变成最初的自己讨厌的样子，不要经常因为看不到周围而感到迷茫，只要记得“初心”，至少能知道自己是从哪里如何一步步走过来的，也就不会太感受到这种迷茫。\n\n\n\n\n写文字记录灵感，在早上最好，这个观点是偶然看到的。因为晚上写容易思维亢奋影响睡眠，而早上思维最清晰，写文字之后能更清楚这一天该干什么，唤醒自己去迎接生活。恍然博客已经荒废了近半年了，这期间若干次想要写写文字将它重启，却一拖再拖。我想是时候重启它了，现在我已经有足够的理由去写下文字，记录下来，并且大大方方的展现给外人，有啥不能看的呢，具体表层的秘密我也不会写出，反倒是流露出的深层的思想，才是一个人隐藏的最深的东西。\n\n\n每天发生的事情太多太多，真正能记住的，在我脑子里留下点东西的，太少太少，若是每天都是这样子，那么多一天少一天没多大区别。\n\n我又想起那个放羊的故事，太发人深省了，历史不是一成不变的，而应该是螺旋上升的，看似相似的事情每发生一次，应该对我来说都会比上一次多留下一些东西，留下某些不会轻易被时间抹去的东西，这样才让我觉得这一天是有价值的，与之前的每一天都不一样，这样的一天是值得去经历的。\n\n---\n\n\n\n可能看到这里还是很疑惑effie是什么，其实没什么特殊的，只是一个文稿写作软件而已，与我用过的typera、vs code、one note、幕布、flomo、语雀、TiddlyWiki等一众软件相比，似乎功能比较新，但实质上没有什么本质的区别。不知道什么时候开始有了知识梳理记录的执念，对软件又变得很感兴趣，起初每个软件都能在某些方面惊艳到我，后来每个软件的使用频率都慢慢变低，好久都不打开一次。\n\n我现在用的这个effie有一句话挺吸引我，是写在软件介绍里的：\n\n> 很多软件，在输入内容之前，必须给文档取一个标题。他们不懂思考的自由。\n\n正是这句话，搭配上其极简的纯色的界面，让我有了随便写写的念头，也就产出了这篇文字。\n\n\n![0825久违的做饭](https://cdn.staticaly.com/gh/lei-wei/pic_bed@main/picX/0825久违的做饭.1bzv22co8tvk.jpg)\n\n久违的做饭，三个菜分别是：\n- 香煎小土豆\n- 青椒斩蛋\n- 凉拌西红柿\n\n——20220825\n\n","source":"_posts/随笔.md","raw":"---\ntitle: 随笔\ndate: 2022-08-25 17:13:30\ntags: 心路\ncategories: \n    - 记录\n---\n\n> 很多软件，在输入内容之前，必须给文档取一个标题。他们不懂思考的自由。\n\n> 事已至此，那为何会至此？要是想不起来那感觉可太糟了。\n\n是时候重启博客了，\n\n<!--more-->\n\n# 20220823随想节选\n\n这是第一篇尝试在Effie上写作的文档。\n\n写什么呢？还没想好，不是没内容，而是脑子里的内容太多了，一下子有好几个主题交替在我脑子里闪现出来，却每个都不够完善，不能一气呵成写完，那就罢了，随便写写先。\n\n\n\n先写一个备忘录：手指甲该剪掉了。本想留到弹吉他的，但太长让打字很困难，一旦打字的速度跟不上思维漫游的速度，需要让思绪等待手指把特定的几个字打完，思绪就会集中到那固定的几个字上，只会打断了随想的过程。写这种东西，语言是否精炼、用词是否准确都是次要的，连贯地，一边随想一边写成纸质档整理，从而能够接着随想，这种连贯性才是最重要的，能够把脑子里一直盘旋的东西一点点梳理出来，就像一团杂乱的线条，随便抓住一端，一点点拉出来固定住，最终就会得到一条整理好的线。思绪也就是这样清晰了。\n\n\n\n我就是脑子里的东西太多，或者说是盘旋的东西太多，太活跃，让我感觉内耗严重。而且由于一直在盘旋扰动着我的精力，导致的就是“不良多工”，也做不好其他的事情。写文字，也就是随想着把脑子里想着的很乱的东西尝试用文字整理输出，拿出来摆到眼前固定住了，就能让脑子空一些。之前内耗非常严重失眠到很严重的时候，这个方法尝试过很有效，虽然后面没坚持就是了。\n\n\n\n\n\n现在写文字，除了上面说的问题之外，还要一个重要的原因是：人是会遗忘的。我常常在某个时候，路走得非常不顺直至有些怀疑这条道路是否正确，此时我再回头去看我是如何走上这条路的，竟大多时候都是含糊不清的，好像无数个偶然让我随机地这样做了，又好像每个看似偶然，实际上都是当时情景下我所作出的必然结果，又好像，我当时是有一个想法，但是之后便忘了。总之，我意识到过去总是容易含糊不清，因此我对当下的路开始不确信，难以坚定地走向未来。所以写一些什么东西吧，记录下来，随便记录记录就好，因为我此刻写下的每一个看似随意的文字，背后蕴含的都是我此刻潜意识里的真实想法，反而是一种非刻意而为的流露真实的方式。就这样写吧，时不时维护一下让它能保存下来，再根据内容取一个标题，记录上时间，等某个未来我感到迷茫的时候，能够通过这样的文字去追寻，透过文字跟此刻的我进行跨时空的灵魂的交流，告诉那时的我，我此刻的内心是怎样的，不要走着走着迷失了。\n\n> **事已至此，那为何会至此？要是想不起来那感觉可太糟了**。\n\n\n\n\n\n总结来说就是一句话：不忘初心。我一直在践行这句话，不要忘了自己是谁，不要突然有一天后悔自己是何时走上了岔路，变成最初的自己讨厌的样子，不要经常因为看不到周围而感到迷茫，只要记得“初心”，至少能知道自己是从哪里如何一步步走过来的，也就不会太感受到这种迷茫。\n\n\n\n\n写文字记录灵感，在早上最好，这个观点是偶然看到的。因为晚上写容易思维亢奋影响睡眠，而早上思维最清晰，写文字之后能更清楚这一天该干什么，唤醒自己去迎接生活。恍然博客已经荒废了近半年了，这期间若干次想要写写文字将它重启，却一拖再拖。我想是时候重启它了，现在我已经有足够的理由去写下文字，记录下来，并且大大方方的展现给外人，有啥不能看的呢，具体表层的秘密我也不会写出，反倒是流露出的深层的思想，才是一个人隐藏的最深的东西。\n\n\n每天发生的事情太多太多，真正能记住的，在我脑子里留下点东西的，太少太少，若是每天都是这样子，那么多一天少一天没多大区别。\n\n我又想起那个放羊的故事，太发人深省了，历史不是一成不变的，而应该是螺旋上升的，看似相似的事情每发生一次，应该对我来说都会比上一次多留下一些东西，留下某些不会轻易被时间抹去的东西，这样才让我觉得这一天是有价值的，与之前的每一天都不一样，这样的一天是值得去经历的。\n\n---\n\n\n\n可能看到这里还是很疑惑effie是什么，其实没什么特殊的，只是一个文稿写作软件而已，与我用过的typera、vs code、one note、幕布、flomo、语雀、TiddlyWiki等一众软件相比，似乎功能比较新，但实质上没有什么本质的区别。不知道什么时候开始有了知识梳理记录的执念，对软件又变得很感兴趣，起初每个软件都能在某些方面惊艳到我，后来每个软件的使用频率都慢慢变低，好久都不打开一次。\n\n我现在用的这个effie有一句话挺吸引我，是写在软件介绍里的：\n\n> 很多软件，在输入内容之前，必须给文档取一个标题。他们不懂思考的自由。\n\n正是这句话，搭配上其极简的纯色的界面，让我有了随便写写的念头，也就产出了这篇文字。\n\n\n![0825久违的做饭](https://cdn.staticaly.com/gh/lei-wei/pic_bed@main/picX/0825久违的做饭.1bzv22co8tvk.jpg)\n\n久违的做饭，三个菜分别是：\n- 香煎小土豆\n- 青椒斩蛋\n- 凉拌西红柿\n\n——20220825\n\n","slug":"随笔","published":1,"updated":"2022-08-25T10:03:56.290Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl792rm1n001gtkin7stgcx7w","content":"<blockquote>\n<p>很多软件，在输入内容之前，必须给文档取一个标题。他们不懂思考的自由。</p>\n</blockquote>\n<blockquote>\n<p>事已至此，那为何会至此？要是想不起来那感觉可太糟了。</p>\n</blockquote>\n<p>是时候重启博客了，</p>\n<span id=\"more\"></span>\n\n<h1 id=\"20220823随想节选\"><a href=\"#20220823随想节选\" class=\"headerlink\" title=\"20220823随想节选\"></a>20220823随想节选</h1><p>这是第一篇尝试在Effie上写作的文档。</p>\n<p>写什么呢？还没想好，不是没内容，而是脑子里的内容太多了，一下子有好几个主题交替在我脑子里闪现出来，却每个都不够完善，不能一气呵成写完，那就罢了，随便写写先。</p>\n<p>先写一个备忘录：手指甲该剪掉了。本想留到弹吉他的，但太长让打字很困难，一旦打字的速度跟不上思维漫游的速度，需要让思绪等待手指把特定的几个字打完，思绪就会集中到那固定的几个字上，只会打断了随想的过程。写这种东西，语言是否精炼、用词是否准确都是次要的，连贯地，一边随想一边写成纸质档整理，从而能够接着随想，这种连贯性才是最重要的，能够把脑子里一直盘旋的东西一点点梳理出来，就像一团杂乱的线条，随便抓住一端，一点点拉出来固定住，最终就会得到一条整理好的线。思绪也就是这样清晰了。</p>\n<p>我就是脑子里的东西太多，或者说是盘旋的东西太多，太活跃，让我感觉内耗严重。而且由于一直在盘旋扰动着我的精力，导致的就是“不良多工”，也做不好其他的事情。写文字，也就是随想着把脑子里想着的很乱的东西尝试用文字整理输出，拿出来摆到眼前固定住了，就能让脑子空一些。之前内耗非常严重失眠到很严重的时候，这个方法尝试过很有效，虽然后面没坚持就是了。</p>\n<p>现在写文字，除了上面说的问题之外，还要一个重要的原因是：人是会遗忘的。我常常在某个时候，路走得非常不顺直至有些怀疑这条道路是否正确，此时我再回头去看我是如何走上这条路的，竟大多时候都是含糊不清的，好像无数个偶然让我随机地这样做了，又好像每个看似偶然，实际上都是当时情景下我所作出的必然结果，又好像，我当时是有一个想法，但是之后便忘了。总之，我意识到过去总是容易含糊不清，因此我对当下的路开始不确信，难以坚定地走向未来。所以写一些什么东西吧，记录下来，随便记录记录就好，因为我此刻写下的每一个看似随意的文字，背后蕴含的都是我此刻潜意识里的真实想法，反而是一种非刻意而为的流露真实的方式。就这样写吧，时不时维护一下让它能保存下来，再根据内容取一个标题，记录上时间，等某个未来我感到迷茫的时候，能够通过这样的文字去追寻，透过文字跟此刻的我进行跨时空的灵魂的交流，告诉那时的我，我此刻的内心是怎样的，不要走着走着迷失了。</p>\n<blockquote>\n<p><strong>事已至此，那为何会至此？要是想不起来那感觉可太糟了</strong>。</p>\n</blockquote>\n<p>总结来说就是一句话：不忘初心。我一直在践行这句话，不要忘了自己是谁，不要突然有一天后悔自己是何时走上了岔路，变成最初的自己讨厌的样子，不要经常因为看不到周围而感到迷茫，只要记得“初心”，至少能知道自己是从哪里如何一步步走过来的，也就不会太感受到这种迷茫。</p>\n<p>写文字记录灵感，在早上最好，这个观点是偶然看到的。因为晚上写容易思维亢奋影响睡眠，而早上思维最清晰，写文字之后能更清楚这一天该干什么，唤醒自己去迎接生活。恍然博客已经荒废了近半年了，这期间若干次想要写写文字将它重启，却一拖再拖。我想是时候重启它了，现在我已经有足够的理由去写下文字，记录下来，并且大大方方的展现给外人，有啥不能看的呢，具体表层的秘密我也不会写出，反倒是流露出的深层的思想，才是一个人隐藏的最深的东西。</p>\n<p>每天发生的事情太多太多，真正能记住的，在我脑子里留下点东西的，太少太少，若是每天都是这样子，那么多一天少一天没多大区别。</p>\n<p>我又想起那个放羊的故事，太发人深省了，历史不是一成不变的，而应该是螺旋上升的，看似相似的事情每发生一次，应该对我来说都会比上一次多留下一些东西，留下某些不会轻易被时间抹去的东西，这样才让我觉得这一天是有价值的，与之前的每一天都不一样，这样的一天是值得去经历的。</p>\n<hr>\n<p>可能看到这里还是很疑惑effie是什么，其实没什么特殊的，只是一个文稿写作软件而已，与我用过的typera、vs code、one note、幕布、flomo、语雀、TiddlyWiki等一众软件相比，似乎功能比较新，但实质上没有什么本质的区别。不知道什么时候开始有了知识梳理记录的执念，对软件又变得很感兴趣，起初每个软件都能在某些方面惊艳到我，后来每个软件的使用频率都慢慢变低，好久都不打开一次。</p>\n<p>我现在用的这个effie有一句话挺吸引我，是写在软件介绍里的：</p>\n<blockquote>\n<p>很多软件，在输入内容之前，必须给文档取一个标题。他们不懂思考的自由。</p>\n</blockquote>\n<p>正是这句话，搭配上其极简的纯色的界面，让我有了随便写写的念头，也就产出了这篇文字。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.staticaly.com/gh/lei-wei/pic_bed@main/picX/0825%E4%B9%85%E8%BF%9D%E7%9A%84%E5%81%9A%E9%A5%AD.1bzv22co8tvk.jpg\"\n                      alt=\"0825久违的做饭\"\n                ></p>\n<p>久违的做饭，三个菜分别是：</p>\n<ul>\n<li>香煎小土豆</li>\n<li>青椒斩蛋</li>\n<li>凉拌西红柿</li>\n</ul>\n<p>——20220825</p>\n","site":{"data":{"links":[{"name":"胖虎的wiki","link":"http://leiwei.space/wiki/","description":"打造数字化第二大脑","avatar":"/images/panghu256.ico"},{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"卡洛的核心舱","link":"https://corecabin.cn/","description":"Tomorrow will be fine.","avatar":"https://corecabin.cn/img/avatar.jpg"},{"name":"Hexo-Keep指南","link":"https://keep-docs.xpoet.cn/","description":"一款简约且优雅的 Hexo 主题","avatar":"/images/logo.svg"}]}},"excerpt":"<blockquote>\n<p>很多软件，在输入内容之前，必须给文档取一个标题。他们不懂思考的自由。</p>\n</blockquote>\n<blockquote>\n<p>事已至此，那为何会至此？要是想不起来那感觉可太糟了。</p>\n</blockquote>\n<p>是时候重启博客了，</p>","more":"<h1 id=\"20220823随想节选\"><a href=\"#20220823随想节选\" class=\"headerlink\" title=\"20220823随想节选\"></a>20220823随想节选</h1><p>这是第一篇尝试在Effie上写作的文档。</p>\n<p>写什么呢？还没想好，不是没内容，而是脑子里的内容太多了，一下子有好几个主题交替在我脑子里闪现出来，却每个都不够完善，不能一气呵成写完，那就罢了，随便写写先。</p>\n<p>先写一个备忘录：手指甲该剪掉了。本想留到弹吉他的，但太长让打字很困难，一旦打字的速度跟不上思维漫游的速度，需要让思绪等待手指把特定的几个字打完，思绪就会集中到那固定的几个字上，只会打断了随想的过程。写这种东西，语言是否精炼、用词是否准确都是次要的，连贯地，一边随想一边写成纸质档整理，从而能够接着随想，这种连贯性才是最重要的，能够把脑子里一直盘旋的东西一点点梳理出来，就像一团杂乱的线条，随便抓住一端，一点点拉出来固定住，最终就会得到一条整理好的线。思绪也就是这样清晰了。</p>\n<p>我就是脑子里的东西太多，或者说是盘旋的东西太多，太活跃，让我感觉内耗严重。而且由于一直在盘旋扰动着我的精力，导致的就是“不良多工”，也做不好其他的事情。写文字，也就是随想着把脑子里想着的很乱的东西尝试用文字整理输出，拿出来摆到眼前固定住了，就能让脑子空一些。之前内耗非常严重失眠到很严重的时候，这个方法尝试过很有效，虽然后面没坚持就是了。</p>\n<p>现在写文字，除了上面说的问题之外，还要一个重要的原因是：人是会遗忘的。我常常在某个时候，路走得非常不顺直至有些怀疑这条道路是否正确，此时我再回头去看我是如何走上这条路的，竟大多时候都是含糊不清的，好像无数个偶然让我随机地这样做了，又好像每个看似偶然，实际上都是当时情景下我所作出的必然结果，又好像，我当时是有一个想法，但是之后便忘了。总之，我意识到过去总是容易含糊不清，因此我对当下的路开始不确信，难以坚定地走向未来。所以写一些什么东西吧，记录下来，随便记录记录就好，因为我此刻写下的每一个看似随意的文字，背后蕴含的都是我此刻潜意识里的真实想法，反而是一种非刻意而为的流露真实的方式。就这样写吧，时不时维护一下让它能保存下来，再根据内容取一个标题，记录上时间，等某个未来我感到迷茫的时候，能够通过这样的文字去追寻，透过文字跟此刻的我进行跨时空的灵魂的交流，告诉那时的我，我此刻的内心是怎样的，不要走着走着迷失了。</p>\n<blockquote>\n<p><strong>事已至此，那为何会至此？要是想不起来那感觉可太糟了</strong>。</p>\n</blockquote>\n<p>总结来说就是一句话：不忘初心。我一直在践行这句话，不要忘了自己是谁，不要突然有一天后悔自己是何时走上了岔路，变成最初的自己讨厌的样子，不要经常因为看不到周围而感到迷茫，只要记得“初心”，至少能知道自己是从哪里如何一步步走过来的，也就不会太感受到这种迷茫。</p>\n<p>写文字记录灵感，在早上最好，这个观点是偶然看到的。因为晚上写容易思维亢奋影响睡眠，而早上思维最清晰，写文字之后能更清楚这一天该干什么，唤醒自己去迎接生活。恍然博客已经荒废了近半年了，这期间若干次想要写写文字将它重启，却一拖再拖。我想是时候重启它了，现在我已经有足够的理由去写下文字，记录下来，并且大大方方的展现给外人，有啥不能看的呢，具体表层的秘密我也不会写出，反倒是流露出的深层的思想，才是一个人隐藏的最深的东西。</p>\n<p>每天发生的事情太多太多，真正能记住的，在我脑子里留下点东西的，太少太少，若是每天都是这样子，那么多一天少一天没多大区别。</p>\n<p>我又想起那个放羊的故事，太发人深省了，历史不是一成不变的，而应该是螺旋上升的，看似相似的事情每发生一次，应该对我来说都会比上一次多留下一些东西，留下某些不会轻易被时间抹去的东西，这样才让我觉得这一天是有价值的，与之前的每一天都不一样，这样的一天是值得去经历的。</p>\n<hr>\n<p>可能看到这里还是很疑惑effie是什么，其实没什么特殊的，只是一个文稿写作软件而已，与我用过的typera、vs code、one note、幕布、flomo、语雀、TiddlyWiki等一众软件相比，似乎功能比较新，但实质上没有什么本质的区别。不知道什么时候开始有了知识梳理记录的执念，对软件又变得很感兴趣，起初每个软件都能在某些方面惊艳到我，后来每个软件的使用频率都慢慢变低，好久都不打开一次。</p>\n<p>我现在用的这个effie有一句话挺吸引我，是写在软件介绍里的：</p>\n<blockquote>\n<p>很多软件，在输入内容之前，必须给文档取一个标题。他们不懂思考的自由。</p>\n</blockquote>\n<p>正是这句话，搭配上其极简的纯色的界面，让我有了随便写写的念头，也就产出了这篇文字。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.staticaly.com/gh/lei-wei/pic_bed@main/picX/0825%E4%B9%85%E8%BF%9D%E7%9A%84%E5%81%9A%E9%A5%AD.1bzv22co8tvk.jpg\"\n                      alt=\"0825久违的做饭\"\n                ></p>\n<p>久违的做饭，三个菜分别是：</p>\n<ul>\n<li>香煎小土豆</li>\n<li>青椒斩蛋</li>\n<li>凉拌西红柿</li>\n</ul>\n<p>——20220825</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cl792rm090001tkin5lna74r5","category_id":"cl792rm0j0004tkinc1984rn3","_id":"cl792rm11000ktkin1e6bgt2k"},{"post_id":"cl792rm10000jtkinhuv11cz4","category_id":"cl792rm0j0004tkinc1984rn3","_id":"cl792rm1a000utkindds55204"},{"post_id":"cl792rm18000ttkinapvp1aht","category_id":"cl792rm0t000ctkin30d8gsm2","_id":"cl792rm1f0012tkinfv94exza"},{"post_id":"cl792rm0s000btkin4fu536gn","category_id":"cl792rm16000rtkin31ul8vve","_id":"cl792rm1h0015tkinenrmbfo0"},{"post_id":"cl792rm1g0014tkinheva8o7k","category_id":"cl792rm0t000ctkin30d8gsm2","_id":"cl792rm1m001ftkingtkaabil"},{"post_id":"cl792rm1g0014tkinheva8o7k","category_id":"cl792rm1g0013tkinbaxl0nd8","_id":"cl792rm1o001itkinh1vy2g41"},{"post_id":"cl792rm1i0018tkin7wjycfjs","category_id":"cl792rm0j0004tkinc1984rn3","_id":"cl792rm1p001ltkin9zrj5zma"},{"post_id":"cl792rm0o0007tkinhj118qt2","category_id":"cl792rm0t000ctkin30d8gsm2","_id":"cl792rm1q001ntkin67cneibw"},{"post_id":"cl792rm0o0007tkinhj118qt2","category_id":"cl792rm1g0013tkinbaxl0nd8","_id":"cl792rm1s001rtkinfu892sfu"},{"post_id":"cl792rm1j001atkin03vmhbb8","category_id":"cl792rm16000rtkin31ul8vve","_id":"cl792rm1s001stkin4v01dzxb"},{"post_id":"cl792rm1l001etkin8rtk8w5n","category_id":"cl792rm16000rtkin31ul8vve","_id":"cl792rm1x001wtkineyup1tkj"},{"post_id":"cl792rm0q0009tkin3yi69slf","category_id":"cl792rm11000ltkin8ycobwhd","_id":"cl792rm1x001xtkind51ogc5c"},{"post_id":"cl792rm0q0009tkin3yi69slf","category_id":"cl792rm1k001btking3py5zrm","_id":"cl792rm1y0020tkinbude8uoq"},{"post_id":"cl792rm1n001gtkin7stgcx7w","category_id":"cl792rm16000rtkin31ul8vve","_id":"cl792rm1y0022tkin8xek073d"},{"post_id":"cl792rm15000qtkinaerw5ces","category_id":"cl792rm0t000ctkin30d8gsm2","_id":"cl792rm1z0025tkin6sbf4nv3"},{"post_id":"cl792rm15000qtkinaerw5ces","category_id":"cl792rm1g0013tkinbaxl0nd8","_id":"cl792rm1z0026tkin54stck9a"},{"post_id":"cl792rm1a000wtkin5vteek0o","category_id":"cl792rm11000ltkin8ycobwhd","_id":"cl792rm200028tkin3iofhpr9"},{"post_id":"cl792rm1a000wtkin5vteek0o","category_id":"cl792rm1k001btking3py5zrm","_id":"cl792rm20002atkinc6058eke"},{"post_id":"cl792rm1c0010tkindsneck2p","category_id":"cl792rm0t000ctkin30d8gsm2","_id":"cl792rm20002ctkin4sr9h7t1"},{"post_id":"cl792rm1c0010tkindsneck2p","category_id":"cl792rm1t001ttkinca16gf89","_id":"cl792rm20002etkinaog5bo70"},{"post_id":"cl792rm0w000gtkin7psaay22","category_id":"cl792rm11000ltkin8ycobwhd","_id":"cl792rm21002ftkineq6i44wo"},{"post_id":"cl792rm0w000gtkin7psaay22","category_id":"cl792rm1k001btking3py5zrm","_id":"cl792rm21002htkin5rxf9446"},{"post_id":"cl792rm1f0011tkin6i1t9u9u","category_id":"cl792rm0t000ctkin30d8gsm2","_id":"cl792rm21002jtkin5k7phqdy"},{"post_id":"cl792rm1f0011tkin6i1t9u9u","category_id":"cl792rm1g0013tkinbaxl0nd8","_id":"cl792rm22002mtkindjkp1sx2"}],"PostTag":[{"post_id":"cl792rm090001tkin5lna74r5","tag_id":"cl792rm0l0005tkin58hua3o3","_id":"cl792rm0v000etkinglndgzif"},{"post_id":"cl792rm0s000btkin4fu536gn","tag_id":"cl792rm0l0005tkin58hua3o3","_id":"cl792rm0y000htkinf2rocvly"},{"post_id":"cl792rm0g0003tkine1il2gj7","tag_id":"cl792rm0u000dtkin4um3fbc8","_id":"cl792rm14000ptkinb5oh8b6l"},{"post_id":"cl792rm0o0007tkinhj118qt2","tag_id":"cl792rm12000mtkin6ee663za","_id":"cl792rm1a000vtkin5g3g8rnl"},{"post_id":"cl792rm15000qtkinaerw5ces","tag_id":"cl792rm12000mtkin6ee663za","_id":"cl792rm1b000xtkin3dmh528o"},{"post_id":"cl792rm1f0011tkin6i1t9u9u","tag_id":"cl792rm12000mtkin6ee663za","_id":"cl792rm1i0017tkin66el51ct"},{"post_id":"cl792rm0q0009tkin3yi69slf","tag_id":"cl792rm17000stkin1e4v6us5","_id":"cl792rm1j0019tkin02zv53qq"},{"post_id":"cl792rm0q0009tkin3yi69slf","tag_id":"cl792rm1b000ztkin6ec067ka","_id":"cl792rm1l001dtkinbdr4a05s"},{"post_id":"cl792rm0w000gtkin7psaay22","tag_id":"cl792rm17000stkin1e4v6us5","_id":"cl792rm1o001ktkinh8pp45yw"},{"post_id":"cl792rm0w000gtkin7psaay22","tag_id":"cl792rm1b000ztkin6ec067ka","_id":"cl792rm1q001mtkin2et4aafu"},{"post_id":"cl792rm10000jtkinhuv11cz4","tag_id":"cl792rm1n001htkin6msg8j4y","_id":"cl792rm1s001qtkin88634okk"},{"post_id":"cl792rm13000otkinas4gho3n","tag_id":"cl792rm1n001htkin6msg8j4y","_id":"cl792rm1x001vtkinga2hemro"},{"post_id":"cl792rm18000ttkinapvp1aht","tag_id":"cl792rm1t001utkin6vsz3em7","_id":"cl792rm1y0021tkin34pad8sk"},{"post_id":"cl792rm1a000wtkin5vteek0o","tag_id":"cl792rm1x001ztkin1a8l5fw5","_id":"cl792rm200029tkin2tq0ftxr"},{"post_id":"cl792rm1a000wtkin5vteek0o","tag_id":"cl792rm1z0024tkin3pf45bvh","_id":"cl792rm20002btkin0k8pagp0"},{"post_id":"cl792rm1c0010tkindsneck2p","tag_id":"cl792rm1z0027tkin62sn1zlr","_id":"cl792rm21002itkin3fzjbq8c"},{"post_id":"cl792rm1c0010tkindsneck2p","tag_id":"cl792rm20002dtkinez8y80pg","_id":"cl792rm21002ktkin0w9dhaga"},{"post_id":"cl792rm1g0014tkinheva8o7k","tag_id":"cl792rm12000mtkin6ee663za","_id":"cl792rm22002ntkin5dm49529"},{"post_id":"cl792rm1g0014tkinheva8o7k","tag_id":"cl792rm21002gtkin0n486s3t","_id":"cl792rm22002otkin99t3h8de"},{"post_id":"cl792rm1i0018tkin7wjycfjs","tag_id":"cl792rm21002ltkin5wxscffb","_id":"cl792rm23002rtkingk8x1w8p"},{"post_id":"cl792rm1i0018tkin7wjycfjs","tag_id":"cl792rm22002ptkin1ku67fl2","_id":"cl792rm24002stkin14nb4kpg"},{"post_id":"cl792rm1j001atkin03vmhbb8","tag_id":"cl792rm23002qtkin4bj2c1xu","_id":"cl792rm24002utkinh7222h95"},{"post_id":"cl792rm1l001etkin8rtk8w5n","tag_id":"cl792rm23002qtkin4bj2c1xu","_id":"cl792rm26002xtkina25l5xyu"},{"post_id":"cl792rm1l001etkin8rtk8w5n","tag_id":"cl792rm1n001htkin6msg8j4y","_id":"cl792rm26002ytkin2in2gwph"},{"post_id":"cl792rm1n001gtkin7stgcx7w","tag_id":"cl792rm1n001htkin6msg8j4y","_id":"cl792rm26002ztkindujkemq9"}],"Tag":[{"name":"记录","_id":"cl792rm0l0005tkin58hua3o3"},{"name":"美食","_id":"cl792rm0u000dtkin4um3fbc8"},{"name":"python","_id":"cl792rm12000mtkin6ee663za"},{"name":"music","_id":"cl792rm17000stkin1e4v6us5"},{"name":"口琴","_id":"cl792rm1b000ztkin6ec067ka"},{"name":"心路","_id":"cl792rm1n001htkin6msg8j4y"},{"name":"笔记","_id":"cl792rm1t001utkin6vsz3em7"},{"name":"音乐","_id":"cl792rm1x001ztkin1a8l5fw5"},{"name":"娱乐","_id":"cl792rm1z0024tkin3pf45bvh"},{"name":"code","_id":"cl792rm1z0027tkin62sn1zlr"},{"name":"cpp","_id":"cl792rm20002dtkinez8y80pg"},{"name":"编程","_id":"cl792rm21002gtkin0n486s3t"},{"name":"折腾","_id":"cl792rm21002ltkin5wxscffb"},{"name":"知识整理","_id":"cl792rm22002ptkin1ku67fl2"},{"name":"总结","_id":"cl792rm23002qtkin4bj2c1xu"}]}}